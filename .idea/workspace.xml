<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="CMakePresetLoader">{
  &quot;useNewFormat&quot;: true
}</component>
  <component name="CMakeReloadState">
    <option name="reloaded" value="true" />
  </component>
  <component name="CMakeRunConfigurationManager">
    <generated>
      <config projectName="LLVM" targetName="LLVMPowerPCAsmPrinter" />
      <config projectName="LLVM" targetName="install-LLVMSparcCodeGen" />
      <config projectName="LLVM" targetName="ClangAttrImpl" />
      <config projectName="LLVM" targetName="clangFormat" />
      <config projectName="LLVM" targetName="LLVMXCoreDisassembler" />
      <config projectName="LLVM" targetName="clangCodeGen" />
      <config projectName="LLVM" targetName="check-clang-cxx-over-over.over" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.dcl-dcl.attr-dcl.attr.depend" />
      <config projectName="LLVM" targetName="check-llvm-transforms-codegenprepare-mips" />
      <config projectName="LLVM" targetName="SampleAnalyzerPlugin_exports" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.decl-dcl.meaning" />
      <config projectName="LLVM" targetName="clang-interpreter" />
      <config projectName="LLVM" targetName="check-llvm-transforms-simplifycfg" />
      <config projectName="LLVM" targetName="check-llvm-tools-dsymutil-arm" />
      <config projectName="LLVM" targetName="llvm-objdump" />
      <config projectName="LLVM" targetName="RTAsan_cxx.x86_64" />
      <config projectName="LLVM" targetName="check-llvm-transforms-inferaddressspaces-nvptx" />
      <config projectName="LLVM" targetName="check-llvm-transforms-taildup-x86" />
      <config projectName="LLVM" targetName="LLVMDemangle" />
      <config projectName="LLVM" targetName="install-verify-uselistorder" />
      <config projectName="LLVM" targetName="install-clang_rt.ubsan_standalone_cxx-i386" />
      <config projectName="LLVM" targetName="check-clang-cxx-intro-intro.refs" />
      <config projectName="LLVM" targetName="llvm-cxxfilt" />
      <config projectName="LLVM" targetName="check-llvm-transforms" />
      <config projectName="LLVM" targetName="check-clang-cxx-intro-intro.defs-defns.signature" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.stc-basic.stc.dynamic-basic.stc.dynamic.allocation" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.types-basic.compound" />
      <config projectName="LLVM" targetName="LLVMLanaiDesc" />
      <config projectName="LLVM" targetName="install-llvm-ranlib" />
      <config projectName="LLVM" targetName="clang_rt.msan-x86_64-symbols" />
      <config projectName="LLVM" targetName="clang_rt.msan_cxx-x86_64" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.post-expr.pseudo" />
      <config projectName="LLVM" targetName="check-clang-profile" />
      <config projectName="LLVM" targetName="install-compiler-rt" />
      <config projectName="LLVM" targetName="install-LLVMHexagonCodeGen-stripped" />
      <config projectName="LLVM" targetName="install-clang_rt.scudo-dynamic-i386" />
      <config projectName="LLVM" targetName="ClangAttrParsedAttrKinds" />
      <config projectName="LLVM" targetName="ClangAttrTemplateInstantiate" />
      <config projectName="LLVM" targetName="install-clang_rt.ubsan_minimal-x86_64-stripped" />
      <config projectName="LLVM" targetName="check-clang-semacxx" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips-mips32r6" />
      <config projectName="LLVM" targetName="yaml2obj" />
      <config projectName="LLVM" targetName="install-LLVMHexagonInfo" />
      <config projectName="LLVM" targetName="LLVMSystemZDesc" />
      <config projectName="LLVM" targetName="MCTests" />
      <config projectName="LLVM" targetName="TSanitizer-x86_64-Test" />
      <config projectName="LLVM" targetName="check-llvm-transforms-constanthoisting" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopversioninglicm" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.lib.iterator.primitives-iterator.traits" />
      <config projectName="LLVM" targetName="check-clang-cxx-over-over.match-over.match.funcs-over.match.list" />
      <config projectName="LLVM" targetName="install-clang-headers-stripped" />
      <config projectName="LLVM" targetName="check-clang-coveragemapping" />
      <config projectName="LLVM" targetName="install-LLVMNVPTXCodeGen" />
      <config projectName="LLVM" targetName="install-LLVMAMDGPUCodeGen-stripped" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mir-amdgpu" />
      <config projectName="LLVM" targetName="install-LLVMSelectionDAG" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.dcl" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.unary-expr.unary.noexcept" />
      <config projectName="LLVM" targetName="check-clang-misc" />
      <config projectName="LLVM" targetName="llvm-link" />
      <config projectName="LLVM" targetName="check-llvm-transforms-atomicexpand" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.dcl-basic.namespace-namespace.def-namespace.unnamed" />
      <config projectName="LLVM" targetName="OptionTests" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.arg-temp.arg.template" />
      <config projectName="LLVM" targetName="check-clang-codegencoroutines" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-objdump-x86" />
      <config projectName="LLVM" targetName="LLVMAMDGPUAsmPrinter" />
      <config projectName="LLVM" targetName="TSanitizer-x86_64-Test-Nolibc" />
      <config projectName="LLVM" targetName="check-clang-astmerge-exprs" />
      <config projectName="LLVM" targetName="install-clang_rt.ubsan_standalone_cxx-x86_64-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-class-class.mfct-class.this" />
      <config projectName="LLVM" targetName="check-llvm-codegen-x86-globalisel" />
      <config projectName="LLVM" targetName="install-LLVMAnalysis-stripped" />
      <config projectName="LLVM" targetName="install-clang_rt.stats_client-i386-stripped" />
      <config projectName="LLVM" targetName="clang_rt.cfi_diag-x86_64" />
      <config projectName="LLVM" targetName="install-clang_rt.stats-i386" />
      <config projectName="LLVM" targetName="check-clang-cxx-over-over.oper-over.binary" />
      <config projectName="LLVM" targetName="install-LLVMX86Utils-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.lookup-basic.lookup.classref" />
      <config projectName="LLVM" targetName="LLVMTestingSupport" />
      <config projectName="LLVM" targetName="install-clang_rt.tsan-x86_64" />
      <config projectName="LLVM" targetName="install-scudo" />
      <config projectName="LLVM" targetName="check-clang-import-objc-definitions-in-expression" />
      <config projectName="LLVM" targetName="check-llvm-transforms-constantmerge" />
      <config projectName="LLVM" targetName="install-LLVMPowerPCCodeGen" />
      <config projectName="LLVM" targetName="check-llvm-transforms-instmerge" />
      <config projectName="LLVM" targetName="scan-build" />
      <config projectName="LLVM" targetName="install-LLVMInstrumentation-stripped" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation-addresssanitizer" />
      <config projectName="LLVM" targetName="llvm-special-case-list-fuzzer" />
      <config projectName="LLVM" targetName="install-LLVMLanaiDisassembler-stripped" />
      <config projectName="LLVM" targetName="install-fuzzer-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.decls-temp.class-temp.mem.func" />
      <config projectName="LLVM" targetName="install-LLVMTarget" />
      <config projectName="LLVM" targetName="install-clang-format" />
      <config projectName="LLVM" targetName="ModuleMaker" />
      <config projectName="LLVM" targetName="LLVMX86AsmPrinter" />
      <config projectName="LLVM" targetName="install-clang_rt.asan_cxx-i386" />
      <config projectName="LLVM" targetName="clang_rt.msan-x86_64" />
      <config projectName="LLVM" targetName="install-LLVMAArch64AsmPrinter-stripped" />
      <config projectName="LLVM" targetName="install-llvm-cxxfilt" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.cond" />
      <config projectName="LLVM" targetName="ASTTests" />
      <config projectName="LLVM" targetName="dfsan" />
      <config projectName="LLVM" targetName="clang_rt.esan-x86_64-symbols" />
      <config projectName="LLVM" targetName="check-clang-import-error-in-expression" />
      <config projectName="LLVM" targetName="llvm-rtdyld" />
      <config projectName="LLVM" targetName="install-LLVMLineEditor" />
      <config projectName="LLVM" targetName="check-clang-cxx-special-class.dtor" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.str.strstreams-depr.ostrstream" />
      <config projectName="LLVM" targetName="install-clang_rt.scudo-dynamic-x86_64" />
      <config projectName="LLVM" targetName="clang-check" />
      <config projectName="LLVM" targetName="ClangDiagnosticCommon" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.decls-temp.alias" />
      <config projectName="LLVM" targetName="LLVMSystemZDisassembler" />
      <config projectName="LLVM" targetName="install-compiler-rt-headers-stripped" />
      <config projectName="LLVM" targetName="clang_rt.dfsan-x86_64-symbols" />
      <config projectName="LLVM" targetName="check-clang-cxx-stmt.stmt-stmt.jump-stmt.cont" />
      <config projectName="LLVM" targetName="check-clang-cxx-special-class.free" />
      <config projectName="LLVM" targetName="check-llvm-transforms-indvarsimplify-amdgpu" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.link" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopunroll-aarch64" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-objcopy" />
      <config projectName="LLVM" targetName="install-LLVMInstCombine-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-gcovprofiling" />
      <config projectName="LLVM" targetName="install-LLVMWindowsManifest-stripped" />
      <config projectName="LLVM" targetName="check-safestack" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-mir-x86" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.mptr.oper" />
      <config projectName="LLVM" targetName="clang-fuzzer" />
      <config projectName="LLVM" targetName="clang_rt.safestack-i386" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips-cstmaterialization" />
      <config projectName="LLVM" targetName="LibOptionsTableGen" />
      <config projectName="LLVM" targetName="LLVMCoverage" />
      <config projectName="LLVM" targetName="check-clang-tablegen" />
      <config projectName="LLVM" targetName="check-llvm-transforms-guardwidening" />
      <config projectName="LLVM" targetName="ClangAttrPCHRead" />
      <config projectName="LLVM" targetName="check-llvm-transforms-util-memoryssa" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.dcl-dcl.spec-dcl.type" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-concept-concept.map-concept.map.fct" />
      <config projectName="LLVM" targetName="check-llvm-tools-dsymutil-x86" />
      <config projectName="LLVM" targetName="install-clang_rt.scudo-dynamic-i386-stripped" />
      <config projectName="LLVM" targetName="check-clang-import-empty-struct" />
      <config projectName="LLVM" targetName="install-LLVMX86AsmPrinter-stripped" />
      <config projectName="LLVM" targetName="check-clang-analysis-inlining" />
      <config projectName="LLVM" targetName="check-clang-cxx-conv-conv.lval" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-opt-report" />
      <config projectName="LLVM" targetName="clangAnalysis" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.constrained" />
      <config projectName="LLVM" targetName="check-clang-import-member-in-struct" />
      <config projectName="LLVM" targetName="install-clang_rt.stats-i386-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-except-except.ctor" />
      <config projectName="LLVM" targetName="check-clang-openmp" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation-memorysanitizer" />
      <config projectName="LLVM" targetName="LLVMMSP430CodeGen" />
      <config projectName="LLVM" targetName="check-clang-cxx-over-over.match" />
      <config projectName="LLVM" targetName="install-llvm-cxxdump-stripped" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips-instverify" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips-llvm-ir" />
      <config projectName="LLVM" targetName="check-clang-cxx-concepts-ts-temp-temp.constr-temp.constr.decl" />
      <config projectName="LLVM" targetName="clang_rt.asan-x86_64-symbols" />
      <config projectName="LLVM" targetName="check-clang-import-clang-flags" />
      <config projectName="LLVM" targetName="check-llvm-feature" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mir-nvptx" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.decl-dcl.init-dcl.init.ref" />
      <config projectName="LLVM" targetName="install-LLVMLanaiDisassembler" />
      <config projectName="LLVM" targetName="check-llvm-object-x86" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.string" />
      <config projectName="LLVM" targetName="install-llvm-cov" />
      <config projectName="LLVM" targetName="install-LLVMIRReader" />
      <config projectName="LLVM" targetName="check-llvm-transforms-bbvectorize-x86" />
      <config projectName="LLVM" targetName="check-llvm-transforms-gvnsink" />
      <config projectName="LLVM" targetName="check-llvm-transforms-reassociate" />
      <config projectName="LLVM" targetName="check-clang-codegen-avr" />
      <config projectName="LLVM" targetName="install-lsan" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-amdgpu" />
      <config projectName="LLVM" targetName="install-LLVMCoroutines-stripped" />
      <config projectName="LLVM" targetName="LLVMXCoreAsmPrinter" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.str.strstreams-depr.ostrstream-depr.ostrstream.cons" />
      <config projectName="LLVM" targetName="check-clang-cxx-over-over.match-over.match.funcs-over.match.copy" />
      <config projectName="LLVM" targetName="BPFCommonTableGen" />
      <config projectName="LLVM" targetName="check-llvm-analysis-memoryssa" />
      <config projectName="LLVM" targetName="check-clang-tooling" />
      <config projectName="LLVM" targetName="install-LLVMXCoreDesc-stripped" />
      <config projectName="LLVM" targetName="install-clang_rt.ubsan_standalone-i386-stripped" />
      <config projectName="LLVM" targetName="install-dd" />
      <config projectName="LLVM" targetName="check-llvm-transforms-preiselintrinsiclowering" />
      <config projectName="LLVM" targetName="install-llvm-ranlib-stripped" />
      <config projectName="LLVM" targetName="install-ubsan-minimal" />
      <config projectName="LLVM" targetName="install-LLVMAMDGPUAsmPrinter" />
      <config projectName="LLVM" targetName="install-LLVMARMCodeGen-stripped" />
      <config projectName="LLVM" targetName="LLVMBPFDesc" />
      <config projectName="LLVM" targetName="clang_rt.stats-x86_64" />
      <config projectName="LLVM" targetName="check-llvm-transforms-placesafepoints" />
      <config projectName="LLVM" targetName="check-clang-astmerge-var" />
      <config projectName="LLVM" targetName="check-clang-astmerge-namespace" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.scope-basic.scope.proto" />
      <config projectName="LLVM" targetName="install-LLVMDebugInfoCodeView-stripped" />
      <config projectName="LLVM" targetName="clang-diff" />
      <config projectName="LLVM" targetName="LLVMMipsAsmPrinter" />
      <config projectName="LLVM" targetName="install-clang_rt.asan-preinit-x86_64-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-over-over.oper-over.ass" />
      <config projectName="LLVM" targetName="check-clang-analysis-copypaste" />
      <config projectName="LLVM" targetName="check-clang-cxx-modules-ts-basic" />
      <config projectName="LLVM" targetName="LLVMBinaryFormat" />
      <config projectName="LLVM" targetName="check-clang-cxx-stmt.stmt-stmt.expr" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation-sanitizercoverage" />
      <config projectName="LLVM" targetName="install-sanstats-stripped" />
      <config projectName="LLVM" targetName="llvm-size" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loadstorevectorizer-x86" />
      <config projectName="LLVM" targetName="check-clang-cxx-class" />
      <config projectName="LLVM" targetName="check-clang-cxx-conv-conv.double" />
      <config projectName="LLVM" targetName="clang_rt.esan-x86_64" />
      <config projectName="LLVM" targetName="install-clang_rt.lsan-x86_64" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation-memorysanitizer-x86" />
      <config projectName="LLVM" targetName="check-clang-import-direct" />
      <config projectName="LLVM" targetName="install-LLVMOption-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.scope-basic.scope.concept" />
      <config projectName="LLVM" targetName="install-lli-stripped" />
      <config projectName="LLVM" targetName="install-llvm-objdump" />
      <config projectName="LLVM" targetName="install-LLVMAArch64AsmPrinter" />
      <config projectName="LLVM" targetName="install-asan" />
      <config projectName="LLVM" targetName="install-cmake-exports-stripped" />
      <config projectName="LLVM" targetName="install-LLVMSparcAsmParser" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.spec" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.fct.spec-temp.arg.explicit" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips" />
      <config projectName="LLVM" targetName="check-clang-cxx-implimits" />
      <config projectName="LLVM" targetName="install-clang-rename-stripped" />
      <config projectName="LLVM" targetName="check-clang-pch" />
      <config projectName="LLVM" targetName="check-clang-cxx-lex-lex.literal-lex.icon" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.decls-temp.fct-temp.func.order" />
      <config projectName="LLVM" targetName="libclang_exports" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-objdump-arm" />
      <config projectName="LLVM" targetName="install-LLVMAArch64Desc" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-objdump-mips" />
      <config projectName="LLVM" targetName="llvm-dwp" />
      <config projectName="LLVM" targetName="check-llvm-objectyaml-codeview" />
      <config projectName="LLVM" targetName="check-clang-cxx-special-class.init" />
      <config projectName="LLVM" targetName="check-llvm-codegen-x86-gc" />
      <config projectName="LLVM" targetName="LLVMCore" />
      <config projectName="LLVM" targetName="install-LLVMDlltoolDriver-stripped" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler" />
      <config projectName="LLVM" targetName="install-LLVMAMDGPUDisassembler" />
      <config projectName="LLVM" targetName="lli" />
      <config projectName="LLVM" targetName="check-llvm-transforms-codeextractor-x86" />
      <config projectName="LLVM" targetName="clang_rt.msan_cxx-x86_64-symbols" />
      <config projectName="LLVM" targetName="check-llvm-transforms-phaseordering" />
      <config projectName="LLVM" targetName="llvm-opt-report" />
      <config projectName="LLVM" targetName="llvm-cvtres" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loweratomic" />
      <config projectName="LLVM" targetName="install-LLVMVectorize" />
      <config projectName="LLVM" targetName="install-LLVMDebugInfoPDB-stripped" />
      <config projectName="LLVM" targetName="install-LLVMDemangle" />
      <config projectName="LLVM" targetName="MtTableGen" />
      <config projectName="LLVM" targetName="llc" />
      <config projectName="LLVM" targetName="install-llvm-dlltool-stripped" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-mir-arm" />
      <config projectName="LLVM" targetName="check-llvm-mc-elf" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopidiom-amdgpu" />
      <config projectName="LLVM" targetName="check-clang-cxx-class-class.static-class.static.mfct" />
      <config projectName="LLVM" targetName="install-LLVMLinker-stripped" />
      <config projectName="LLVM" targetName="LLVMARMInfo" />
      <config projectName="LLVM" targetName="RTSanitizerCommonNoTermination.x86_64" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopunroll-arm" />
      <config projectName="LLVM" targetName="install-LLVMARMDesc" />
      <config projectName="LLVM" targetName="install-LLVMDebugInfoDWARF-stripped" />
      <config projectName="LLVM" targetName="install-LLVMSparcInfo" />
      <config projectName="LLVM" targetName="llvm-cfi-verify" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-cfi-verify" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.or" />
      <config projectName="LLVM" targetName="install-clang_rt.cfi-i386" />
      <config projectName="LLVM" targetName="check-llvm-codegen-powerpc" />
      <config projectName="LLVM" targetName="install-LLVMHexagonCodeGen" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-pdb" />
      <config projectName="LLVM" targetName="install-LLVMPowerPCCodeGen-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.dcl-dcl.attr-dcl.attr.unused" />
      <config projectName="LLVM" targetName="check-clang-astmerge-property" />
      <config projectName="LLVM" targetName="check-clang-cxx-except-except.special" />
      <config projectName="LLVM" targetName="check-llvm-transforms-instcombine" />
      <config projectName="LLVM" targetName="install-ubsan-stripped" />
      <config projectName="LLVM" targetName="asan" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.stc-basic.stc.static" />
      <config projectName="LLVM" targetName="check-clang-cxx-stmt.stmt-stmt.select" />
      <config projectName="LLVM" targetName="install-clang_rt.ubsan_minimal-dynamic-i386-stripped" />
      <config projectName="LLVM" targetName="clangRewrite" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-extract" />
      <config projectName="LLVM" targetName="install-LLVMDemangle-stripped" />
      <config projectName="LLVM" targetName="lsan" />
      <config projectName="LLVM" targetName="install-llvm-xray" />
      <config projectName="LLVM" targetName="check-llvm-codegen-amdgpu" />
      <config projectName="LLVM" targetName="check-llvm-transforms-lcssa" />
      <config projectName="LLVM" targetName="check-llvm-analysis-scalarevolution" />
      <config projectName="LLVM" targetName="install-llvm-cfi-verify" />
      <config projectName="LLVM" targetName="install-libclang-headers-stripped" />
      <config projectName="LLVM" targetName="install-llvm-pdbutil-stripped" />
      <config projectName="LLVM" targetName="check-llvm-mc-markup" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.incr.bool" />
      <config projectName="LLVM" targetName="install-clang_rt.stats-x86_64" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.lookup-basic.lookup.qual-namespace.qual" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.lookup-basic.lookup.qual-class.qual" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.dcl-dcl.spec-dcl.constexpr" />
      <config projectName="LLVM" targetName="check-clang-index" />
      <config projectName="LLVM" targetName="check-llvm-analysis-lint" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.lookup-basic.lookup.qual" />
      <config projectName="LLVM" targetName="install-LLVMSupport-stripped" />
      <config projectName="LLVM" targetName="install-clang_rt.ubsan_minimal-dynamic-x86_64" />
      <config projectName="LLVM" targetName="check-llvm" />
      <config projectName="LLVM" targetName="ubsan" />
      <config projectName="LLVM" targetName="check-llvm-codegen-arm-globalisel" />
      <config projectName="LLVM" targetName="check-llvm-transforms-codegenprepare" />
      <config projectName="LLVM" targetName="check-clang-cxx-intro" />
      <config projectName="LLVM" targetName="install-opt" />
      <config projectName="LLVM" targetName="check-llvm-transforms-expandmemcmp" />
      <config projectName="LLVM" targetName="install-xray-stripped" />
      <config projectName="LLVM" targetName="ClangAnalysisTests" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.types" />
      <config projectName="LLVM" targetName="LLVMARMAsmParser" />
      <config projectName="LLVM" targetName="GlobalISelTests" />
      <config projectName="LLVM" targetName="LLVMAArch64CodeGen" />
      <config projectName="LLVM" targetName="check-llvm-executionengine-interpreter" />
      <config projectName="LLVM" targetName="install-llvm-lib" />
      <config projectName="LLVM" targetName="install-LLVMX86Utils" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-objdump-webassembly" />
      <config projectName="LLVM" targetName="sancov" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-cxxdump" />
      <config projectName="LLVM" targetName="check-clang-cxx-concepts-ts-dcl.dcl-dcl.spec" />
      <config projectName="LLVM" targetName="check-clang-cxx-class-class.base" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.spec-temp.explicit" />
      <config projectName="LLVM" targetName="LLVMDebugInfoPDB" />
      <config projectName="LLVM" targetName="install-LLVMXCoreAsmPrinter" />
      <config projectName="LLVM" targetName="check-llvm-transforms-callsitesplitting" />
      <config projectName="LLVM" targetName="clang-refactor" />
      <config projectName="LLVM" targetName="SemaTests" />
      <config projectName="LLVM" targetName="ClangCommentHTMLNamedCharacterReferences" />
      <config projectName="LLVM" targetName="RTAsan_dynamic_version_script_dummy.i386" />
      <config projectName="LLVM" targetName="install-clang_rt.lsan-x86_64-stripped" />
      <config projectName="LLVM" targetName="clang_rt.ubsan_standalone-i386" />
      <config projectName="LLVM" targetName="install-llvm-dwarfdump-stripped" />
      <config projectName="LLVM" targetName="RTInterception.test.x86_64" />
      <config projectName="LLVM" targetName="check-clang-import-struct-in-namespace" />
      <config projectName="LLVM" targetName="install-dfsan-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-special-class.inhctor" />
      <config projectName="LLVM" targetName="check-llvm-transforms-functionimport" />
      <config projectName="LLVM" targetName="install-LLVMLinker" />
      <config projectName="LLVM" targetName="RTUbsan.i386" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-nm-wasm" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopidiom-x86" />
      <config projectName="LLVM" targetName="clang_rt.ubsan_standalone-x86_64" />
      <config projectName="LLVM" targetName="check-llvm-object-arm" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-objdump-hexagon" />
      <config projectName="LLVM" targetName="install-LLVMSparcCodeGen-stripped" />
      <config projectName="LLVM" targetName="check-llvm-codegen-generic" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.str.strstreams-depr.strstreambuf-depr.strstreambuf.members" />
      <config projectName="LLVM" targetName="ClangDiagnosticComment" />
      <config projectName="LLVM" targetName="install-LLVMSymbolize-stripped" />
      <config projectName="LLVM" targetName="install-safestack" />
      <config projectName="LLVM" targetName="install-LLVMProfileData-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-stripdeadprototypes" />
      <config projectName="LLVM" targetName="clang" />
      <config projectName="LLVM" targetName="install-LLVMLanaiCodeGen-stripped" />
      <config projectName="LLVM" targetName="ClangAttrList" />
      <config projectName="LLVM" targetName="check-llvm-bindings-ocaml" />
      <config projectName="LLVM" targetName="check-llvm-mc-aarch64-sve-assembler_tests" />
      <config projectName="LLVM" targetName="LTO_exports" />
      <config projectName="LLVM" targetName="check-clang-cxx-over-over.match-over.match.best-over.best.ics-over.ics.scs" />
      <config projectName="LLVM" targetName="install-clang-headers" />
      <config projectName="LLVM" targetName="check-clang-driver" />
      <config projectName="LLVM" targetName="check-llvm-transforms-codeextractor" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.dcl-dcl.spec-dcl.type-dcl.type.elab" />
      <config projectName="LLVM" targetName="install-LLVMMipsAsmParser-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-lex-lex.literal" />
      <config projectName="LLVM" targetName="LLVMX86CodeGen" />
      <config projectName="LLVM" targetName="install-LLVMSupport" />
      <config projectName="LLVM" targetName="RTfuzzer.x86_64" />
      <config projectName="LLVM" targetName="check-clang-cxx-stmt.stmt-stmt.block" />
      <config projectName="LLVM" targetName="InterceptionUnitTests" />
      <config projectName="LLVM" targetName="check-clang-cxx-class-class.mem" />
      <config projectName="LLVM" targetName="AnalysisTests" />
      <config projectName="LLVM" targetName="install-lsan-stripped" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mir-powerpc" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-config" />
      <config projectName="LLVM" targetName="check-llvm-transforms-gvnhoist" />
      <config projectName="LLVM" targetName="LLVMLineEditor" />
      <config projectName="LLVM" targetName="check-llvm-transforms-atomicexpandloadlinked" />
      <config projectName="LLVM" targetName="clang-tblgen" />
      <config projectName="LLVM" targetName="llvm-dsymutil" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-mips1" />
      <config projectName="LLVM" targetName="check-clang-cxx-over-over.oper-over.sub" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-mips3" />
      <config projectName="LLVM" targetName="NVPTXCommonTableGen" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-mips2" />
      <config projectName="LLVM" targetName="libclang" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-mips5" />
      <config projectName="LLVM" targetName="check-llvm-executionengine-orcmcjit" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-mips4" />
      <config projectName="LLVM" targetName="check-clang-cxx-cpp-cpp.line" />
      <config projectName="LLVM" targetName="clangToolingCore" />
      <config projectName="LLVM" targetName="TAsan-i386-calls-Test" />
      <config projectName="LLVM" targetName="clang_rt.profile-x86_64" />
      <config projectName="LLVM" targetName="check-clang-cxx-special" />
      <config projectName="LLVM" targetName="CvtResTableGen" />
      <config projectName="LLVM" targetName="LLVMXRay" />
      <config projectName="LLVM" targetName="check-llvm-executionengine-runtimedyld-arm" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopunroll-x86" />
      <config projectName="LLVM" targetName="install-cfi-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-straightlinestrengthreduce-amdgpu" />
      <config projectName="LLVM" targetName="check-llvm-transforms-earlycse" />
      <config projectName="LLVM" targetName="install-LLVMAArch64Disassembler" />
      <config projectName="LLVM" targetName="check-llvm-transforms-constanthoisting-aarch64" />
      <config projectName="LLVM" targetName="check-clang-cxx-over-over.oper-over.literal" />
      <config projectName="LLVM" targetName="check-llvm-codegen-xcore" />
      <config projectName="LLVM" targetName="AnnotateFunctions" />
      <config projectName="LLVM" targetName="BasicTests" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.constrained-temp.constrained.set" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.res-temp.dep" />
      <config projectName="LLVM" targetName="check-clang-cxx-special-class.temporary" />
      <config projectName="LLVM" targetName="check-clang-import-overloaded-function" />
      <config projectName="LLVM" targetName="install-LLVMX86Desc" />
      <config projectName="LLVM" targetName="check-clang-parser" />
      <config projectName="LLVM" targetName="install-LLVMLanaiCodeGen" />
      <config projectName="LLVM" targetName="install-clang_rt.ubsan_minimal-dynamic-x86_64-stripped" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-powerpc" />
      <config projectName="LLVM" targetName="LLVMMCJIT" />
      <config projectName="LLVM" targetName="ClangDiagnosticCrossTU" />
      <config projectName="LLVM" targetName="check-clang-cxx-class.derived" />
      <config projectName="LLVM" targetName="fuzzer" />
      <config projectName="LLVM" targetName="check-llvm-yamlparser" />
      <config projectName="LLVM" targetName="install-clang_rt.fuzzer-x86_64" />
      <config projectName="LLVM" targetName="install-clang_rt.ubsan_standalone-x86_64" />
      <config projectName="LLVM" targetName="check-llvm-transforms-naryreassociate-nvptx" />
      <config projectName="LLVM" targetName="check-clang-cxx-modules-ts-basic-basic.link" />
      <config projectName="LLVM" targetName="install-LLVMPowerPCDesc" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-mips32r6" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-mips32r5" />
      <config projectName="LLVM" targetName="LLVMSymbolize" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-mips32r2" />
      <config projectName="LLVM" targetName="install-LLVMCodeGen-stripped" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-mips32r3" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.dcl-dcl.spec-dcl.type-dcl.type.class.deduct" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-micromips-dsp" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.lib.iterator.primitives-iterator.basic" />
      <config projectName="LLVM" targetName="TsanUnitTests" />
      <config projectName="LLVM" targetName="clang_rt.asan-dynamic-x86_64-version-list" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.eq" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopdataprefetch-aarch64" />
      <config projectName="LLVM" targetName="check-llvm-object" />
      <config projectName="LLVM" targetName="check-llvm-transforms-expandmemcmp-x86" />
      <config projectName="LLVM" targetName="install-LLVMLanaiInfo" />
      <config projectName="LLVM" targetName="install-LLVMSystemZDisassembler-stripped" />
      <config projectName="LLVM" targetName="check-llvm-executionengine-runtimedyld-powerpc" />
      <config projectName="LLVM" targetName="check-llvm-transforms-indvarsimplify-nvptx" />
      <config projectName="LLVM" targetName="check-llvm-transforms-speculativeexecution" />
      <config projectName="LLVM" targetName="check-llvm-transforms-taildup" />
      <config projectName="LLVM" targetName="LLVMAsmPrinter" />
      <config projectName="LLVM" targetName="LLVMMipsDesc" />
      <config projectName="LLVM" targetName="LLVMAMDGPUInfo" />
      <config projectName="LLVM" targetName="install-llvm-lto" />
      <config projectName="LLVM" targetName="check-llvm-transforms-constanthoisting-powerpc" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.decl-dcl.name" />
      <config projectName="LLVM" targetName="check-clang-cxx-drs" />
      <config projectName="LLVM" targetName="check-llvm-executionengine-runtimedyld-x86" />
      <config projectName="LLVM" targetName="check-clang-cxx-class-class.mfct" />
      <config projectName="LLVM" targetName="check-clang-cxx-conv-conv.qual" />
      <config projectName="LLVM" targetName="check-clang-cxx-lex-lex.literal-lex.bool" />
      <config projectName="LLVM" targetName="check-llvm-executionengine-mcjit" />
      <config projectName="LLVM" targetName="check-clang-cxx-intro-intro.defs-defns.multibyte" />
      <config projectName="LLVM" targetName="ClangDiagnosticDriver" />
      <config projectName="LLVM" targetName="clang_rt.ubsan_standalone-dynamic-i386" />
      <config projectName="LLVM" targetName="check-llvm-transforms-atomicexpandloadlinked-arm" />
      <config projectName="LLVM" targetName="clangRewriteFrontend" />
      <config projectName="LLVM" targetName="install-llvm-strings" />
      <config projectName="LLVM" targetName="install-LLVMXRay-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.prim" />
      <config projectName="LLVM" targetName="ClangDiagnosticLex" />
      <config projectName="LLVM" targetName="install-llvm-dsymutil-stripped" />
      <config projectName="LLVM" targetName="install-LLVMBPFInfo-stripped" />
      <config projectName="LLVM" targetName="llvm-dis" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopsimplify" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.dcl-dcl.attr" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.lookup-basic.lookup.unqual" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.shift" />
      <config projectName="LLVM" targetName="llvm-pdbutil" />
      <config projectName="LLVM" targetName="ClangDiagnosticIndexName" />
      <config projectName="LLVM" targetName="install-clang_rt.scudo_cxx-x86_64" />
      <config projectName="LLVM" targetName="install-safestack-stripped" />
      <config projectName="LLVM" targetName="check-llvm-mc-coff-arm" />
      <config projectName="LLVM" targetName="install-clang_rt.asan-i386" />
      <config projectName="LLVM" targetName="LLVMProfileData" />
      <config projectName="LLVM" targetName="LLVMScalarOpts" />
      <config projectName="LLVM" targetName="llvm-PerfectShuffle" />
      <config projectName="LLVM" targetName="check-llvm-transforms-internalize" />
      <config projectName="LLVM" targetName="install-LLVMAMDGPUUtils-stripped" />
      <config projectName="LLVM" targetName="install-LLVMBPFAsmParser" />
      <config projectName="LLVM" targetName="clang_rt.stats-i386" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.unary-expr.unary.op" />
      <config projectName="LLVM" targetName="install-clang_rt.fuzzer_no_main-x86_64" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.auto.ptr-auto.ptr-auto.ptr.members" />
      <config projectName="LLVM" targetName="LLVMAMDGPUAsmParser" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loadstorevectorizer-nvptx" />
      <config projectName="LLVM" targetName="install-LLVMOption" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.types-basic.type.qualifier" />
      <config projectName="LLVM" targetName="check-clang-analysis" />
      <config projectName="LLVM" targetName="AsanBenchmarks" />
      <config projectName="LLVM" targetName="check-llvm-tools-opt-viewer" />
      <config projectName="LLVM" targetName="install-clang_rt.xray-x86_64" />
      <config projectName="LLVM" targetName="ADTTests" />
      <config projectName="LLVM" targetName="check-clang-cxx-lex-lex.token" />
      <config projectName="LLVM" targetName="install-c-index-test" />
      <config projectName="LLVM" targetName="StaticAnalysisTests" />
      <config projectName="LLVM" targetName="install-LLVMLineEditor-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.dcl-dcl.attr-dcl.attr.nodiscard" />
      <config projectName="LLVM" targetName="check-clang-astmerge" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips-mirparser" />
      <config projectName="LLVM" targetName="check-llvm-transforms-divrempairs" />
      <config projectName="LLVM" targetName="install-clang_rt.esan-x86_64" />
      <config projectName="LLVM" targetName="check-clang-cxx-except-except.handle" />
      <config projectName="LLVM" targetName="LLVMMipsDisassembler" />
      <config projectName="LLVM" targetName="check-clang-cxx-stmt.stmt-stmt.select-stmt.if" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.post-expr.dynamic.cast" />
      <config projectName="LLVM" targetName="install-LLVMBitReader" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.constrained-temp.archetype-temp.archetype.assemble" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-eva" />
      <config projectName="LLVM" targetName="check-llvm-mc-systemz" />
      <config projectName="LLVM" targetName="check-llvm-transforms-slpvectorizer-systemz" />
      <config projectName="LLVM" targetName="install-LLVMAArch64Desc-stripped" />
      <config projectName="LLVM" targetName="LLVMHello_exports" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.deduct.guide" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.stc-basic.stc.thread" />
      <config projectName="LLVM" targetName="IRTests" />
      <config projectName="LLVM" targetName="check-clang-cxx" />
      <config projectName="LLVM" targetName="install-llvm-objdump-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-stmt.stmt-stmt.iter" />
      <config projectName="LLVM" targetName="install-LLVMSparcDisassembler-stripped" />
      <config projectName="LLVM" targetName="clang_rt.tsan-x86_64" />
      <config projectName="LLVM" targetName="check-clang-refactor-extract" />
      <config projectName="LLVM" targetName="install-profile-stripped" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-dsp" />
      <config projectName="LLVM" targetName="install-sanstats" />
      <config projectName="LLVM" targetName="check-clang-cxx-intro-intro.compliance" />
      <config projectName="LLVM" targetName="ClangDiagnosticParse" />
      <config projectName="LLVM" targetName="install-LLVMSystemZCodeGen" />
      <config projectName="LLVM" targetName="check-llvm-transforms-safestack" />
      <config projectName="LLVM" targetName="check-llvm-transforms-lowerbitsets" />
      <config projectName="LLVM" targetName="GotsanRuntimeCheck" />
      <config projectName="LLVM" targetName="install-LLVMInstrumentation" />
      <config projectName="LLVM" targetName="LinkerTests" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-nm-x86-radix" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.decls-temp.class-temp.mem.class" />
      <config projectName="LLVM" targetName="install-LLVMPowerPCDesc-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-dce" />
      <config projectName="LLVM" targetName="xray" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-concept-concept.refine" />
      <config projectName="LLVM" targetName="LLVMXCoreInfo" />
      <config projectName="LLVM" targetName="LLVMSparcDisassembler" />
      <config projectName="LLVM" targetName="install-cfi" />
      <config projectName="LLVM" targetName="install-LLVMCore-stripped" />
      <config projectName="LLVM" targetName="install-LLVMMSP430AsmPrinter" />
      <config projectName="LLVM" targetName="clang-import-test" />
      <config projectName="LLVM" targetName="LLVMARMUtils" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-pdb-dia" />
      <config projectName="LLVM" targetName="install-clang_rt.safestack-x86_64-stripped" />
      <config projectName="LLVM" targetName="install-LLVMSystemZInfo-stripped" />
      <config projectName="LLVM" targetName="check-clang-import-template" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr" />
      <config projectName="LLVM" targetName="check-llvm-mc-x86-alignedbundling" />
      <config projectName="LLVM" targetName="LLVMMSP430Info" />
      <config projectName="LLVM" targetName="check-clang-cxx-cpp-cpp.cond" />
      <config projectName="LLVM" targetName="check-llvm-transforms-simplifycfg-sparc" />
      <config projectName="LLVM" targetName="clangStaticAnalyzerCheckers" />
      <config projectName="LLVM" targetName="check-llvm-bitcode" />
      <config projectName="LLVM" targetName="check-llvm-analysis-divergenceanalysis-amdgpu" />
      <config projectName="LLVM" targetName="install-llvm-rc-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-float2int" />
      <config projectName="LLVM" targetName="check-asan-dynamic" />
      <config projectName="LLVM" targetName="check-clang-cxx-special-class.conv-class.conv.fct" />
      <config projectName="LLVM" targetName="check-llvm-codegen" />
      <config projectName="LLVM" targetName="check-clang-cxx-over-over.match-over.match.funcs-over.match.ctor" />
      <config projectName="LLVM" targetName="llvm-split" />
      <config projectName="LLVM" targetName="DebugInfoPDBTests" />
      <config projectName="LLVM" targetName="check-clang-cxx-intro-intro.defs-defns.static.type" />
      <config projectName="LLVM" targetName="check-llvm-transforms-sccp" />
      <config projectName="LLVM" targetName="llvm-mcmarkup" />
      <config projectName="LLVM" targetName="ClangAttrSubjectMatchRuleList" />
      <config projectName="LLVM" targetName="check-llvm-lto-arm" />
      <config projectName="LLVM" targetName="check-clang-cxx-intro-intro.defs-defns.well.formed" />
      <config projectName="LLVM" targetName="check-llvm-transforms-slpvectorizer-amdgpu" />
      <config projectName="LLVM" targetName="clangSema" />
      <config projectName="LLVM" targetName="install-clang_rt.asan-dynamic-x86_64-stripped" />
      <config projectName="LLVM" targetName="install-llvm-dwarfdump" />
      <config projectName="LLVM" targetName="llvm-extract" />
      <config projectName="LLVM" targetName="check-clang-codegencuda" />
      <config projectName="LLVM" targetName="check-clang-cxx-modules-ts-basic-basic.link-p2" />
      <config projectName="LLVM" targetName="install-LLVMAsmPrinter" />
      <config projectName="LLVM" targetName="RTSanitizerCommonNoTermination.i386" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopvectorize-powerpc" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.post-expr.reinterpret.cast" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.dcl-basic.namespace-namespace.def" />
      <config projectName="LLVM" targetName="llvm-lto" />
      <config projectName="LLVM" targetName="ClangCodeGenTests" />
      <config projectName="LLVM" targetName="install-clang_rt.safestack-x86_64" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.decls-temp.class.spec-temp.class.spec.mfunc" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-msp430" />
      <config projectName="LLVM" targetName="check-llvm-transforms-instcombine-arm" />
      <config projectName="LLVM" targetName="llvm-xray" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.scope-basic.scope.pdecl" />
      <config projectName="LLVM" targetName="install-LLVMAMDGPUInfo-stripped" />
      <config projectName="LLVM" targetName="install-LLVMX86AsmPrinter" />
      <config projectName="LLVM" targetName="install-LLVMMCJIT" />
      <config projectName="LLVM" targetName="check-llvm-bindings-llvm-c-x86" />
      <config projectName="LLVM" targetName="install-LLVMBPFAsmParser-stripped" />
      <config projectName="LLVM" targetName="install-LLVMIRReader-stripped" />
      <config projectName="LLVM" targetName="builtins" />
      <config projectName="LLVM" targetName="install-clang_rt.tsan-x86_64-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-inline-powerpc" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.decl-dcl.fct.def-dcl.fct.def.delete" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.dcl-dcl.attr-dcl.align" />
      <config projectName="LLVM" targetName="arcmt-test" />
      <config projectName="LLVM" targetName="install-LLVMAMDGPUUtils" />
      <config projectName="LLVM" targetName="check-clang-cxx-stmt.stmt-stmt.iter-stmt.for" />
      <config projectName="LLVM" targetName="install-clang_rt.dfsan-x86_64-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-bbvectorize-xcore" />
      <config projectName="LLVM" targetName="install-LLVMTableGen-stripped" />
      <config projectName="LLVM" targetName="clang_rt.scudo-dynamic-x86_64" />
      <config projectName="LLVM" targetName="LLVMSystemZAsmParser" />
      <config projectName="LLVM" targetName="install-LLVMNVPTXDesc" />
      <config projectName="LLVM" targetName="install-LLVMObjectYAML" />
      <config projectName="LLVM" targetName="cmake-exports" />
      <config projectName="LLVM" targetName="check-llvm-transforms-atomicexpand-arm" />
      <config projectName="LLVM" targetName="prepare-check-lit" />
      <config projectName="LLVM" targetName="ClangDiagnosticAnalysis" />
      <config projectName="LLVM" targetName="check-llvm-codegen-hexagon-vect" />
      <config projectName="LLVM" targetName="check-clang-cxx-lex-lex.literal-lex.ccon" />
      <config projectName="LLVM" targetName="check-clang-cxx-class.access-class.protected" />
      <config projectName="LLVM" targetName="check-llvm-mc-webassembly" />
      <config projectName="LLVM" targetName="install-llvm-as-stripped" />
      <config projectName="LLVM" targetName="check-llvm-codegen-hexagon-autohvx" />
      <config projectName="LLVM" targetName="TAsan-x86_64-inline-Dynamic-Test" />
      <config projectName="LLVM" targetName="ubsan-minimal" />
      <config projectName="LLVM" targetName="install-LLVMMipsDesc-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.fct.spec-temp.deduct-temp.deduct.partial" />
      <config projectName="LLVM" targetName="LLVMGlobalISel" />
      <config projectName="LLVM" targetName="clangDriver" />
      <config projectName="LLVM" targetName="check-llvm-transforms-simplifycfg-arm" />
      <config projectName="LLVM" targetName="TXRayBufferQueueTest-x86_64-Test" />
      <config projectName="LLVM" targetName="check-clang-cxx-intro-intro.defs-defns.locale.specific" />
      <config projectName="LLVM" targetName="check-llvm-transforms-metarenamer" />
      <config projectName="LLVM" targetName="check-llvm-mc-sparc" />
      <config projectName="LLVM" targetName="check-llvm-transforms-lowerexpectintrinsic" />
      <config projectName="LLVM" targetName="check-sanitizer" />
      <config projectName="LLVM" targetName="check-llvm-codegen-avr-features" />
      <config projectName="LLVM" targetName="check-llvm-codegen-avr-inline-asm" />
      <config projectName="LLVM" targetName="check-llvm-thinlto-x86" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-lto" />
      <config projectName="LLVM" targetName="check-llvm-bindings-llvm-c" />
      <config projectName="LLVM" targetName="check-clang-cxx-except" />
      <config projectName="LLVM" targetName="DebugInfoCodeViewTests" />
      <config projectName="LLVM" targetName="check-clang-cxx-over-over.match-over.match.funcs-over.match.ref" />
      <config projectName="LLVM" targetName="check-clang-cxx-conv-conv.integral" />
      <config projectName="LLVM" targetName="check-clang-import-struct-and-var" />
      <config projectName="LLVM" targetName="install-builtins" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.log.or" />
      <config projectName="LLVM" targetName="check-llvm-transforms-separateconstoffsetfromgep" />
      <config projectName="LLVM" targetName="check-llvm-transforms-simplifycfg-mips" />
      <config projectName="LLVM" targetName="check-clang-cxx-conv-conv.bool" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.constrained-temp.archetype" />
      <config projectName="LLVM" targetName="check-llvm-transforms-constprop" />
      <config projectName="LLVM" targetName="check-clang-cxx-cpp-cpp.pragma.op" />
      <config projectName="LLVM" targetName="ProfileDataTests" />
      <config projectName="LLVM" targetName="PipSqueak" />
      <config projectName="LLVM" targetName="clangASTMatchers" />
      <config projectName="LLVM" targetName="check-cfi" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-aarch64" />
      <config projectName="LLVM" targetName="LLVMAArch64Desc" />
      <config projectName="LLVM" targetName="install-clang_rt.ubsan_standalone-i386" />
      <config projectName="LLVM" targetName="FileCheck" />
      <config projectName="LLVM" targetName="SystemZCommonTableGen" />
      <config projectName="LLVM" targetName="check-llvm-mc-amdgpu-regression" />
      <config projectName="LLVM" targetName="check-clang-cxx-intro-intro.execution" />
      <config projectName="LLVM" targetName="install-clang_rt.stats_client-x86_64-stripped" />
      <config projectName="LLVM" targetName="check-llvm-object-lanai" />
      <config projectName="LLVM" targetName="check-llvm-codegen-avr-intrinsics" />
      <config projectName="LLVM" targetName="install-clang_rt.ubsan_minimal-i386-stripped" />
      <config projectName="LLVM" targetName="install-LLVMOrcJIT-stripped" />
      <config projectName="LLVM" targetName="LLVMDebugInfoMSF" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.str.strstreams-depr.istrstream-depr.istrstream.members" />
      <config projectName="LLVM" targetName="install-LLVMSparcAsmPrinter-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-nameanonglobals" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips-longbranch" />
      <config projectName="LLVM" targetName="check-clang-import-indirect-struct-member-access" />
      <config projectName="LLVM" targetName="check-llvm-analysis-valuetracking" />
      <config projectName="LLVM" targetName="LLVMMC" />
      <config projectName="LLVM" targetName="HowToUseJIT" />
      <config projectName="LLVM" targetName="install-LLVMipo" />
      <config projectName="LLVM" targetName="llvm_vcsrevision_h" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mir-aarch64" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopreroll" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-generic" />
      <config projectName="LLVM" targetName="check-clang-semaopencl" />
      <config projectName="LLVM" targetName="check-llvm-codegen-webassembly" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-symbolizer-pdb" />
      <config projectName="LLVM" targetName="BugpointPasses" />
      <config projectName="LLVM" targetName="clang_rt.asan-dynamic-i386" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.auto.ptr-auto.ptr" />
      <config projectName="LLVM" targetName="install-clang_rt.ubsan_standalone-dynamic-i386-stripped" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-mips32r3" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-mips32r6" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation-addresssanitizer-x86" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-mips32r5" />
      <config projectName="LLVM" targetName="check-clang-sematemplate" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.dcl-dcl.spec" />
      <config projectName="LLVM" targetName="opt" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopidiom-arm" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.unary-expr.alignof" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.fct.spec-temp.deduct-temp.deduct.conv" />
      <config projectName="LLVM" targetName="install-clang_rt.scudo-dynamic-x86_64-stripped" />
      <config projectName="LLVM" targetName="install-msan" />
      <config projectName="LLVM" targetName="install-LLVMAMDGPUAsmParser" />
      <config projectName="LLVM" targetName="clang_rt.profile-i386" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.fct.spec-temp.deduct-temp.deduct.type" />
      <config projectName="LLVM" targetName="check-llvm-analysis-ivusers" />
      <config projectName="LLVM" targetName="LLVMSparcCodeGen" />
      <config projectName="LLVM" targetName="install-LLVMLibDriver" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-mips32r2" />
      <config projectName="LLVM" targetName="check-llvm-demangle" />
      <config projectName="LLVM" targetName="ClangAttrParserStringSwitches" />
      <config projectName="LLVM" targetName="AsanUnitTests" />
      <config projectName="LLVM" targetName="check-clang-cxx-over-over.match-over.match.best-over.ics.rank" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.log.and" />
      <config projectName="LLVM" targetName="TAsan-i386-inline-Test" />
      <config projectName="LLVM" targetName="llvm-dwarfdump" />
      <config projectName="LLVM" targetName="install-llvm-size-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.xor" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.scope-basic.scope.req" />
      <config projectName="LLVM" targetName="check-llvm-codegen-thumb2" />
      <config projectName="LLVM" targetName="check-llvm-transforms-straightlinestrengthreduce-x86" />
      <config projectName="LLVM" targetName="check-llvm-executionengine-orcmcjit-remote" />
      <config projectName="LLVM" targetName="check-llvm-codegen-avr-calling-conv-c" />
      <config projectName="LLVM" targetName="install-LLVMAMDGPUAsmPrinter-stripped" />
      <config projectName="LLVM" targetName="install-LLVMLanaiAsmPrinter-stripped" />
      <config projectName="LLVM" targetName="check-llvm-lto" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.str.strstreams-depr.istrstream-depr.istrstream.cons" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-lib" />
      <config projectName="LLVM" targetName="install-clang_rt.ubsan_standalone-dynamic-x86_64-stripped" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-lto2-x86" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mir-hexagon" />
      <config projectName="LLVM" targetName="RTAsan_preinit.x86_64" />
      <config projectName="LLVM" targetName="install-llvm-lto-stripped" />
      <config projectName="LLVM" targetName="ClangDriverTests" />
      <config projectName="LLVM" targetName="LLVMHexagonInfo" />
      <config projectName="LLVM" targetName="install-clang_rt.xray-x86_64-stripped" />
      <config projectName="LLVM" targetName="check-llvm-analysis-constantfolding" />
      <config projectName="LLVM" targetName="check-llvm-transforms-atomicexpand-x86" />
      <config projectName="LLVM" targetName="check-clang-cxx-over-over.match-over.match.best-over.best.ics-over.ics.list" />
      <config projectName="LLVM" targetName="LLVMARMDisassembler" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-xray" />
      <config projectName="LLVM" targetName="check-clang-preprocessor-headermap-rel-foo.framework" />
      <config projectName="LLVM" targetName="LLVMPowerPCAsmParser" />
      <config projectName="LLVM" targetName="XRayUnitTests" />
      <config projectName="LLVM" targetName="LLVMPasses" />
      <config projectName="LLVM" targetName="check-llvm-executionengine-runtimedyld" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-mips64r6" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-isel-fuzzer" />
      <config projectName="LLVM" targetName="install-LLVMLTO" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-mips64r5" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-micromips32r6" />
      <config projectName="LLVM" targetName="check-clang-analysis-diagnostics" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-mips64r3" />
      <config projectName="LLVM" targetName="install-LLVMSystemZAsmParser-stripped" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-mips64r2" />
      <config projectName="LLVM" targetName="install-LLVMLanaiAsmParser-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.unary-expr.sizeof" />
      <config projectName="LLVM" targetName="check-clang-cxx-intro-intro.defs-defns.impl.limits" />
      <config projectName="LLVM" targetName="cfi_blacklist" />
      <config projectName="LLVM" targetName="RTUbsan_cxx.x86_64" />
      <config projectName="LLVM" targetName="CrossTUTests" />
      <config projectName="LLVM" targetName="check-llvm-transforms-alignmentfromassumptions" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-split" />
      <config projectName="LLVM" targetName="check-llvm-transforms-looploadelim" />
      <config projectName="LLVM" targetName="LLVMAArch64Utils" />
      <config projectName="LLVM" targetName="check-llvm-lto-x86" />
      <config projectName="LLVM" targetName="check-llvm-transforms-entryexitinstrumenter" />
      <config projectName="LLVM" targetName="install-LLVMLanaiAsmPrinter" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.res" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-lit" />
      <config projectName="LLVM" targetName="clangTooling" />
      <config projectName="LLVM" targetName="check-llvm-analysis-globalsmodref" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.bit.and" />
      <config projectName="LLVM" targetName="BinaryFormatTests" />
      <config projectName="LLVM" targetName="install-yaml2obj-stripped" />
      <config projectName="LLVM" targetName="llvm-lib" />
      <config projectName="LLVM" targetName="install-clang_rt.scudo-i386-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-class-class.nested.type" />
      <config projectName="LLVM" targetName="install-LLVMObject" />
      <config projectName="LLVM" targetName="install-llc-stripped" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-xray-x86" />
      <config projectName="LLVM" targetName="check-clang-cxx-stmt.stmt-stmt.label" />
      <config projectName="LLVM" targetName="LLVMSparcAsmParser" />
      <config projectName="LLVM" targetName="check-llvm-codegen-hexagon" />
      <config projectName="LLVM" targetName="install-clang_rt.asan-i386-stripped" />
      <config projectName="LLVM" targetName="install-clang_rt.msan-x86_64-stripped" />
      <config projectName="LLVM" targetName="install-llvm-cxxfilt-stripped" />
      <config projectName="LLVM" targetName="install-LLVMLTO-stripped" />
      <config projectName="LLVM" targetName="ocaml_all" />
      <config projectName="LLVM" targetName="install-llvm-readobj" />
      <config projectName="LLVM" targetName="check-clang-astmerge-asm" />
      <config projectName="LLVM" targetName="LexTests" />
      <config projectName="LLVM" targetName="check-llvm-transforms-countingfunctioninserter" />
      <config projectName="LLVM" targetName="LLVMX86Disassembler" />
      <config projectName="LLVM" targetName="check-llvm-transforms-separateconstoffsetfromgep-amdgpu" />
      <config projectName="LLVM" targetName="install-llvm-lto2-stripped" />
      <config projectName="LLVM" targetName="RTAsanTest.i386" />
      <config projectName="LLVM" targetName="install-clang_rt.builtins-x86_64" />
      <config projectName="LLVM" targetName="check-clang-cxx-modules-ts-dcl.dcl-dcl.module-dcl.module.interface" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.decl-dcl.init-dcl.init.aggr" />
      <config projectName="LLVM" targetName="check-clang-cxx-concepts-ts" />
      <config projectName="LLVM" targetName="test-depends" />
      <config projectName="LLVM" targetName="install-LLVMMipsDesc" />
      <config projectName="LLVM" targetName="install-LLVMNVPTXCodeGen-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopvectorize-amdgpu" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.str.strstreams-depr.strstream-depr.strstream.oper" />
      <config projectName="LLVM" targetName="LLVMSelectionDAG" />
      <config projectName="LLVM" targetName="install-llvm-mcmarkup-stripped" />
      <config projectName="LLVM" targetName="install-clang_rt.cfi-x86_64-stripped" />
      <config projectName="LLVM" targetName="install-clang_rt.ubsan_standalone-dynamic-x86_64" />
      <config projectName="LLVM" targetName="install-LLVMMSP430CodeGen-stripped" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation-memorysanitizer-powerpc" />
      <config projectName="LLVM" targetName="install-LLVMBPFCodeGen-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-eliminateavailableexternally" />
      <config projectName="LLVM" targetName="dfsan_abilist" />
      <config projectName="LLVM" targetName="LLVMLanaiDisassembler" />
      <config projectName="LLVM" targetName="install-LLVMDlltoolDriver" />
      <config projectName="LLVM" targetName="LLVMInstrumentation" />
      <config projectName="LLVM" targetName="clang_rt.cfi_diag-i386" />
      <config projectName="LLVM" targetName="clang_rt.ubsan_standalone_cxx-x86_64" />
      <config projectName="LLVM" targetName="install-LLVMAMDGPUAsmParser-stripped" />
      <config projectName="LLVM" targetName="check-llvm-objectyaml-wasm" />
      <config projectName="LLVM" targetName="check-clang-cxx-intro-intro.defs-defns.dynamic.type" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.dcl-dcl.spec-dcl.friend" />
      <config projectName="LLVM" targetName="install-clang_rt.dfsan-x86_64" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp" />
      <config projectName="LLVM" targetName="check-clang-integration" />
      <config projectName="LLVM" targetName="check-clang-headers" />
      <config projectName="LLVM" targetName="install-clang_rt.cfi-x86_64" />
      <config projectName="LLVM" targetName="install-clang_rt.tsan_cxx-x86_64" />
      <config projectName="LLVM" targetName="install-LLVMAsmPrinter-stripped" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-msa" />
      <config projectName="LLVM" targetName="check-llvm-transforms-lowerswitch" />
      <config projectName="LLVM" targetName="RTAsan_dynamic.x86_64" />
      <config projectName="LLVM" targetName="check-llvm-transforms-atomicexpand-sparc" />
      <config projectName="LLVM" targetName="RTSanitizerCommonNoHooks.x86_64" />
      <config projectName="LLVM" targetName="LLVMPowerPCInfo" />
      <config projectName="LLVM" targetName="check-clang-astmerge-init-ctors" />
      <config projectName="LLVM" targetName="check-clang-cxx-class-class.static" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.lib.iterator.primitives" />
      <config projectName="LLVM" targetName="check-llvm-analysis-divergenceanalysis" />
      <config projectName="LLVM" targetName="clangToolingASTDiff" />
      <config projectName="LLVM" targetName="llvm-modextract" />
      <config projectName="LLVM" targetName="install-LLVMLanaiInfo-stripped" />
      <config projectName="LLVM" targetName="check-llvm-analysis-costmodel-powerpc" />
      <config projectName="LLVM" targetName="check-llvm-transforms-instcombine-nvptx" />
      <config projectName="LLVM" targetName="ClangAttrVisitor" />
      <config projectName="LLVM" targetName="check-llvm-mc-hexagon" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopunroll" />
      <config projectName="LLVM" targetName="check-clang-refactor" />
      <config projectName="LLVM" targetName="RTInterception.i386" />
      <config projectName="LLVM" targetName="check-llvm-transforms-inline-arm" />
      <config projectName="LLVM" targetName="check-clang-cxx-cpp-cpp.predefined" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.str.strstreams-depr.strstream" />
      <config projectName="LLVM" targetName="check-clang-cxx-conv-conv.rank" />
      <config projectName="LLVM" targetName="install-sancov-stripped" />
      <config projectName="LLVM" targetName="RTSanitizerCommonNoLibc.x86_64" />
      <config projectName="LLVM" targetName="install-LLVMX86Disassembler" />
      <config projectName="LLVM" targetName="ClangAttrHasAttributeImpl" />
      <config projectName="LLVM" targetName="install-LLVMAMDGPUInfo" />
      <config projectName="LLVM" targetName="LLVMX86Desc" />
      <config projectName="LLVM" targetName="gtest" />
      <config projectName="LLVM" targetName="check-llvm-executionengine-orclazy" />
      <config projectName="LLVM" targetName="check-clang-codegen-avr-target-cpu-defines" />
      <config projectName="LLVM" targetName="install-llvm-objcopy" />
      <config projectName="LLVM" targetName="TAsan-i386-inline-Benchmark" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.lookup" />
      <config projectName="LLVM" targetName="check-llvm-transforms-gvn" />
      <config projectName="LLVM" targetName="clang_rt.xray-x86_64" />
      <config projectName="LLVM" targetName="install-LLVMXCoreDesc" />
      <config projectName="LLVM" targetName="check-llvm-transforms-scalarizer" />
      <config projectName="LLVM" targetName="install-compiler-rt-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-over-over.match-over.match.best-over.best.ics" />
      <config projectName="LLVM" targetName="LLVMCFIVerify" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.dcl-dcl.spec-dcl.typedef" />
      <config projectName="LLVM" targetName="check-llvm-transforms-inline" />
      <config projectName="LLVM" targetName="check-clang-cxx-concepts-ts-dcl.dcl" />
      <config projectName="LLVM" targetName="install-LLVMARMDisassembler" />
      <config projectName="LLVM" targetName="install-LLVMAMDGPUCodeGen" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.dcl-dcl.enum" />
      <config projectName="LLVM" targetName="check-llvm-transforms-earlycse-aarch64" />
      <config projectName="LLVM" targetName="check-llvm-codegen-lanai" />
      <config projectName="LLVM" targetName="check-llvm-executionengine-runtimedyld-aarch64" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.stc-basic.stc.auto" />
      <config projectName="LLVM" targetName="compiler-rt-headers" />
      <config projectName="LLVM" targetName="check-llvm-transforms-speculatearoundphis" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.lookup-basic.lookup.argdep" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.stc" />
      <config projectName="LLVM" targetName="install-LLVMXCoreCodeGen" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mir-arm" />
      <config projectName="LLVM" targetName="check-clang-import-enum" />
      <config projectName="LLVM" targetName="check-llvm-transforms-codegenprepare-amdgpu" />
      <config projectName="LLVM" targetName="RTUbsan_cxx.i386" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.scope-basic.scope.enum" />
      <config projectName="LLVM" targetName="check-clang-astmerge-inheritance" />
      <config projectName="LLVM" targetName="AsanDynamicUnitTests" />
      <config projectName="LLVM" targetName="check-llvm-codegen-avr-integration" />
      <config projectName="LLVM" targetName="install-LLVMXCoreInfo-stripped" />
      <config projectName="LLVM" targetName="install-builtins-stripped" />
      <config projectName="LLVM" targetName="install-llvm-extract-stripped" />
      <config projectName="LLVM" targetName="install-LLVMX86CodeGen" />
      <config projectName="LLVM" targetName="check-clang-cxx-lex-lex.ppnumber" />
      <config projectName="LLVM" targetName="clang_rt.dd-x86_64" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-objdump" />
      <config projectName="LLVM" targetName="check-clang-codegenobjc" />
      <config projectName="LLVM" targetName="install-clang_rt.msan-x86_64" />
      <config projectName="LLVM" targetName="check-clang-cxx-intro-intro.defs-defns.undefined" />
      <config projectName="LLVM" targetName="check-clang-import-conflicting-struct" />
      <config projectName="LLVM" targetName="install-clang_rt.dyndd-dynamic-x86_64" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-arm" />
      <config projectName="LLVM" targetName="check-clang-import-forward-declared-objc-class" />
      <config projectName="LLVM" targetName="install-LLVMPowerPCAsmPrinter-stripped" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-nm-arm" />
      <config projectName="LLVM" targetName="install-clang-import-test" />
      <config projectName="LLVM" targetName="TAsan-x86_64-calls-Test" />
      <config projectName="LLVM" targetName="check-llvm-analysis-cflaliasanalysis-steensgaard" />
      <config projectName="LLVM" targetName="install-LLVMPowerPCAsmParser" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.decls-temp.class.spec-temp.class.order" />
      <config projectName="LLVM" targetName="LLVMMCParser" />
      <config projectName="LLVM" targetName="check-llvm-transforms-codegenprepare-arm" />
      <config projectName="LLVM" targetName="llvm-cov" />
      <config projectName="LLVM" targetName="install-LLVMExecutionEngine-stripped" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-powerpc" />
      <config projectName="LLVM" targetName="check-llvm-analysis-lazycallgraph" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-cov" />
      <config projectName="LLVM" targetName="check-llvm-mc-aarch64-sve" />
      <config projectName="LLVM" targetName="MITests" />
      <config projectName="LLVM" targetName="ClangCommentHTMLTagsProperties" />
      <config projectName="LLVM" targetName="check-clang-codegen-avr-attributes" />
      <config projectName="LLVM" targetName="check-clang-cxx-stmt.stmt-stmt.dcl" />
      <config projectName="LLVM" targetName="check-clang-cxx-over-over.oper" />
      <config projectName="LLVM" targetName="check-llvm-transforms-safestack-aarch64" />
      <config projectName="LLVM" targetName="install-LLVMAArch64AsmParser" />
      <config projectName="LLVM" targetName="check-llvm-transforms-codegenprepare-x86" />
      <config projectName="LLVM" targetName="check-clang-clang-rename" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.str.strstreams-depr.strstreambuf-depr.strstreambuf.virtuals" />
      <config projectName="LLVM" targetName="check-llvm-transforms-instcombine-amdgpu" />
      <config projectName="LLVM" targetName="check-llvm-transforms-adddiscriminators" />
      <config projectName="LLVM" targetName="install-LLVMGlobalISel" />
      <config projectName="LLVM" targetName="check-clang-cxx-modules-ts-dcl.dcl-dcl.module-dcl.module.export" />
      <config projectName="LLVM" targetName="clang-headers" />
      <config projectName="LLVM" targetName="ToolingTests" />
      <config projectName="LLVM" targetName="check-llvm-analysis-loopinfo" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.dcl-dcl.attr-dcl.attr.noreturn" />
      <config projectName="LLVM" targetName="check-llvm-bindings" />
      <config projectName="LLVM" targetName="install-llvm-lto2" />
      <config projectName="LLVM" targetName="check-llvm-mc-macho-powerpc" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.arg-temp.arg.nontype" />
      <config projectName="LLVM" targetName="RTFuzzerTest.x86_64" />
      <config projectName="LLVM" targetName="check-clang-astmerge-category" />
      <config projectName="LLVM" targetName="install-llvm-link-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-coroutines" />
      <config projectName="LLVM" targetName="clang_rt.asan-preinit-x86_64" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-sparc" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.lib.iterator.primitives-std.iterator.tags" />
      <config projectName="LLVM" targetName="install-clang_rt.dd-x86_64-stripped" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-symbolizer" />
      <config projectName="LLVM" targetName="install-xray" />
      <config projectName="LLVM" targetName="install-LLVMARMDesc-stripped" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-dwarfdump-arm" />
      <config projectName="LLVM" targetName="install-LLVMAMDGPUDisassembler-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-over-over.match-over.match.funcs" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-dspr2" />
      <config projectName="LLVM" targetName="check-llvm-codegen-avr-relax-mem" />
      <config projectName="LLVM" targetName="LLVMMSP430AsmPrinter" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-strings" />
      <config projectName="LLVM" targetName="install-llvm-dlltool" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.prim-expr.prim.general" />
      <config projectName="LLVM" targetName="check-clang-semacuda" />
      <config projectName="LLVM" targetName="check-clang-arcmt-whitelisted" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-hexagon" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopstrengthreduce-amdgpu" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.decl" />
      <config projectName="LLVM" targetName="check-llvm-analysis-postdominators" />
      <config projectName="LLVM" targetName="check-clang-cxx-class.derived-class.abstract" />
      <config projectName="LLVM" targetName="check-clang-import" />
      <config projectName="LLVM" targetName="check-clang-astmerge-struct" />
      <config projectName="LLVM" targetName="llvm-bcanalyzer" />
      <config projectName="LLVM" targetName="install-llvm-diff-stripped" />
      <config projectName="LLVM" targetName="llvm-test-depends" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.decl-dcl.fct.def-dcl.fct.def.general" />
      <config projectName="LLVM" targetName="install-LLVMMSP430AsmPrinter-stripped" />
      <config projectName="LLVM" targetName="install-llvm-opt-report" />
      <config projectName="LLVM" targetName="check-clang-cxx-modules-ts" />
      <config projectName="LLVM" targetName="install-LLVMBitWriter" />
      <config projectName="LLVM" targetName="install-LLVMAMDGPUDesc-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.decls-temp.friend" />
      <config projectName="LLVM" targetName="check-clang-cxx-conv-conv.fctptr" />
      <config projectName="LLVM" targetName="LLVMLinker" />
      <config projectName="LLVM" targetName="clang-func-mapping" />
      <config projectName="LLVM" targetName="asan_blacklist" />
      <config projectName="LLVM" targetName="check-fuzzer" />
      <config projectName="LLVM" targetName="check-llvm-mc-asmparser" />
      <config projectName="LLVM" targetName="check-llvm-transforms-pgoprofile-x86" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.res-temp.dep.res-temp.point" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.decl-dcl.fct.def-dcl.fct.def.default" />
      <config projectName="LLVM" targetName="check-clang-cxx-cpp-cpp.replace-cpp.scope" />
      <config projectName="LLVM" targetName="RTAsan_dynamic.i386" />
      <config projectName="LLVM" targetName="install-llvm-c-test" />
      <config projectName="LLVM" targetName="OptsTestTableGen" />
      <config projectName="LLVM" targetName="check-lit" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-profdata" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-nm-x86" />
      <config projectName="LLVM" targetName="c-index-test" />
      <config projectName="LLVM" targetName="install-LLVMLibDriver-stripped" />
      <config projectName="LLVM" targetName="install-LLVMCoroutines" />
      <config projectName="LLVM" targetName="check-llvm-analysis-basicaa" />
      <config projectName="LLVM" targetName="check-llvm-transforms-mem2reg" />
      <config projectName="LLVM" targetName="check-clang-cxx-cpp-cpp.include" />
      <config projectName="LLVM" targetName="check-clang-import-local-struct-use-origins" />
      <config projectName="LLVM" targetName="check-clang-cxx-intro-intro.defs-defns.cond.supp" />
      <config projectName="LLVM" targetName="install-llvm-cat" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.ios.members" />
      <config projectName="LLVM" targetName="ClangAttrParsedAttrList" />
      <config projectName="LLVM" targetName="check-clang-cxx-modules-ts-basic-basic.def.odr-p6" />
      <config projectName="LLVM" targetName="check-clang-cxx-over-over.match-over.match.best-over.best.ics-over.ics.ref" />
      <config projectName="LLVM" targetName="install-LLVMMipsCodeGen" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.decl-dcl.meaning-dcl.fct" />
      <config projectName="LLVM" targetName="check-clang-cxx-modules-ts-basic-basic.def.odr-p4" />
      <config projectName="LLVM" targetName="check-clang-cxx-intro-intro.ack" />
      <config projectName="LLVM" targetName="install-LLVMX86Desc-stripped" />
      <config projectName="LLVM" targetName="install-clang_rt.ubsan_minimal-x86_64" />
      <config projectName="LLVM" targetName="check-llvm-tools-sancov-aarch64" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopvectorize-aarch64" />
      <config projectName="LLVM" targetName="SampleAnalyzerPlugin" />
      <config projectName="LLVM" targetName="check-clang-cxx-lex-lex.literal-lex.nullptr" />
      <config projectName="LLVM" targetName="clangCrossTU" />
      <config projectName="LLVM" targetName="check-builtins" />
      <config projectName="LLVM" targetName="check-clang-cxx-special-class.init-class.base.init" />
      <config projectName="LLVM" targetName="LLVMInstCombine" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.constrained-temp.req-temp.req.impl" />
      <config projectName="LLVM" targetName="install-clang_rt.cfi-i386-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopunswitch-amdgpu" />
      <config projectName="LLVM" targetName="check-llvm-analysis-costmodel-aarch64" />
      <config projectName="LLVM" targetName="ClangCommentNodes" />
      <config projectName="LLVM" targetName="check-clang-cxx-class.derived-class.mi" />
      <config projectName="LLVM" targetName="check-clang-astmerge-class2" />
      <config projectName="LLVM" targetName="install-clang_rt.cfi_diag-i386" />
      <config projectName="LLVM" targetName="check-llvm-bindings-llvm-c-arm" />
      <config projectName="LLVM" targetName="install-clang_rt.asan-preinit-x86_64" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips-msa" />
      <config projectName="LLVM" targetName="check-clang-cxx-special-class.init-class.expl.init" />
      <config projectName="LLVM" targetName="RTSanitizerCommon.x86_64" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-eva" />
      <config projectName="LLVM" targetName="check-clang-cxx-lex-lex.pptoken" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.decl-dcl.meaning-dcl.array" />
      <config projectName="LLVM" targetName="check-llvm-transforms-looprotate" />
      <config projectName="LLVM" targetName="check-clang-cxx-intro-intro.defs-defns.ill.formed" />
      <config projectName="LLVM" targetName="install-bugpoint-stripped" />
      <config projectName="LLVM" targetName="install-opt-stripped" />
      <config projectName="LLVM" targetName="PrintFunctionNames" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.res-temp.dep-temp.dep.temp" />
      <config projectName="LLVM" targetName="check-clang-import-import-overrides" />
      <config projectName="LLVM" targetName="check-clang-cxx-cpp-cpp.replace-cpp.subst" />
      <config projectName="LLVM" targetName="check-clang-cxx-intro-syntax" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-mt" />
      <config projectName="LLVM" targetName="check-llvm-transforms-simplifycfg-powerpc" />
      <config projectName="LLVM" targetName="clang_rt.scudo-x86_64" />
      <config projectName="LLVM" targetName="cfi" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.scope-basic.scope.class" />
      <config projectName="LLVM" targetName="check-clang-cxx-lex-lex.literal-lex.fcon" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.static" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-dwarfdump-x86" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.res-temp.inject" />
      <config projectName="LLVM" targetName="check-llvm-transforms-inline-x86" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.stc-basic.stc.inherit" />
      <config projectName="LLVM" targetName="install-clang-refactor" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.decls-temp.fct" />
      <config projectName="LLVM" targetName="install-clang_rt.dd-x86_64" />
      <config projectName="LLVM" targetName="check-llvm-transforms-instsimplify" />
      <config projectName="LLVM" targetName="clang_rt.scudo_cxx-x86_64" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mir-x86" />
      <config projectName="LLVM" targetName="LLVMXCoreCodeGen" />
      <config projectName="LLVM" targetName="check-llvm-mc-macho-aarch64" />
      <config projectName="LLVM" targetName="check-llvm-transforms-sampleprofile" />
      <config projectName="LLVM" targetName="install-compiler-rt-headers" />
      <config projectName="LLVM" targetName="check-llvm-transforms-inferfunctionattrs" />
      <config projectName="LLVM" targetName="install-LLVMCoverage" />
      <config projectName="LLVM" targetName="check-llvm-analysis-lazyvalueanalysis" />
      <config projectName="LLVM" targetName="UnitTests" />
      <config projectName="LLVM" targetName="install-LLVMCoverage-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-reg2mem" />
      <config projectName="LLVM" targetName="check-llvm-transforms-mergeicmps-x86" />
      <config projectName="LLVM" targetName="check-clang-format" />
      <config projectName="LLVM" targetName="ParallelJIT" />
      <config projectName="LLVM" targetName="clang_rt.ubsan_standalone-dynamic-x86_64" />
      <config projectName="LLVM" targetName="check-clang-cxx-lex-lex.literal-lex.ext" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.decl-dcl.meaning-dcl.fct.default" />
      <config projectName="LLVM" targetName="check-clang-cxx-lex-lex.comment" />
      <config projectName="LLVM" targetName="RTUbsan_minimal.x86_64" />
      <config projectName="LLVM" targetName="LLVMLanaiAsmPrinter" />
      <config projectName="LLVM" targetName="install-LLVMSystemZInfo" />
      <config projectName="LLVM" targetName="LLVMCodeGen" />
      <config projectName="LLVM" targetName="RTInterception.x86_64" />
      <config projectName="LLVM" targetName="clang_rt.cfi-x86_64" />
      <config projectName="LLVM" targetName="install-LLVMOrcJIT" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-aarch64" />
      <config projectName="LLVM" targetName="ClangCommentHTMLTags" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation-memorysanitizer-aarch64" />
      <config projectName="LLVM" targetName="check-clang-cxx-stmt.stmt-stmt.ambig" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.lval" />
      <config projectName="LLVM" targetName="check-llvm-codegen-avr-pseudo" />
      <config projectName="LLVM" targetName="check-clang-modules" />
      <config projectName="LLVM" targetName="check-clang-preprocessor" />
      <config projectName="LLVM" targetName="install-LLVMDebugInfoMSF" />
      <config projectName="LLVM" targetName="clangEdit" />
      <config projectName="LLVM" targetName="TAsan-x86_64-calls-Dynamic-Test" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mir-generic" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-amdgpu" />
      <config projectName="LLVM" targetName="HexagonCommonTableGen" />
      <config projectName="LLVM" targetName="LLVMSparcInfo" />
      <config projectName="LLVM" targetName="check-clang-cxx-over-over.match-over.match.funcs-over.match.oper" />
      <config projectName="LLVM" targetName="check-clang-import-objc-method" />
      <config projectName="LLVM" targetName="check-llvm-transforms-interleavedaccess" />
      <config projectName="LLVM" targetName="install-clang_rt.scudo_cxx-x86_64-stripped" />
      <config projectName="LLVM" targetName="install-LLVMSystemZDesc-stripped" />
      <config projectName="LLVM" targetName="llvm-cxxdump" />
      <config projectName="LLVM" targetName="check-llvm-thinlto" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips-fast-isel" />
      <config projectName="LLVM" targetName="safestack" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.stc-basic.stc.dynamic-basic.stc.dynamic.deallocation" />
      <config projectName="LLVM" targetName="srpm" />
      <config projectName="LLVM" targetName="check-llvm-transforms-mergeicmps" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.decls-temp.class" />
      <config projectName="LLVM" targetName="check-llvm-transforms-globalmerge" />
      <config projectName="LLVM" targetName="check-clang-import-template-specialization" />
      <config projectName="LLVM" targetName="install-clang_rt.ubsan_standalone-dynamic-i386" />
      <config projectName="LLVM" targetName="AArch64Tests" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-objdump-amdgpu" />
      <config projectName="LLVM" targetName="clangAST" />
      <config projectName="LLVM" targetName="clangARCMigrate" />
      <config projectName="LLVM" targetName="LLVMAnalysis" />
      <config projectName="LLVM" targetName="check-llvm-transforms-deadstoreelimination" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.export" />
      <config projectName="LLVM" targetName="check-llvm-transforms-simpleloopunswitch" />
      <config projectName="LLVM" targetName="LLVMX86Utils" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-lanai" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.life" />
      <config projectName="LLVM" targetName="check-clang-astmerge-class-template" />
      <config projectName="LLVM" targetName="TAsan-x86_64-calls-Benchmark" />
      <config projectName="LLVM" targetName="install-clang_rt.profile-x86_64" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopsimplifycfg" />
      <config projectName="LLVM" targetName="ClangDiagnosticAST" />
      <config projectName="LLVM" targetName="install-clang_rt.asan-preinit-i386" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-mips" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.dcl-dcl.asm" />
      <config projectName="LLVM" targetName="check-clang-cxx-stmt.stmt-stmt.jump-stmt.break" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation-hwaddresssanitizer" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopversioning" />
      <config projectName="LLVM" targetName="check-llvm-codegen-amdgpu-globalisel" />
      <config projectName="LLVM" targetName="check-llvm-codegen-hexagon-intrinsics" />
      <config projectName="LLVM" targetName="install-LLVMPowerPCInfo-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.stc-basic.stc.dynamic-basic.stc.dynamic.safety" />
      <config projectName="LLVM" targetName="install-clang-rename" />
      <config projectName="LLVM" targetName="check-llvm-tools-lto" />
      <config projectName="LLVM" targetName="check-llvm-transforms-simplifycfg-x86" />
      <config projectName="LLVM" targetName="install-clang_rt.asan_cxx-x86_64" />
      <config projectName="LLVM" targetName="LLVMIRReader" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.dcl-basic.namespace-namespace.udecl" />
      <config projectName="LLVM" targetName="UtilsTests" />
      <config projectName="LLVM" targetName="check-llvm-executionengine-mcjit-remote" />
      <config projectName="LLVM" targetName="check-clang-cxx-concepts-ts-temp" />
      <config projectName="LLVM" targetName="clang_rt.scudo-dynamic-i386" />
      <config projectName="LLVM" targetName="check-llvm-transforms-divrempairs-x86" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.start-basic.start.main" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.comma" />
      <config projectName="LLVM" targetName="install-llvm-c-test-stripped" />
      <config projectName="LLVM" targetName="LLVMipo" />
      <config projectName="LLVM" targetName="install-ubsan-minimal-stripped" />
      <config projectName="LLVM" targetName="check-llvm-analysis-costmodel-amdgpu" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.str.strstreams" />
      <config projectName="LLVM" targetName="check-llvm-transforms-simplifycfg-aarch64" />
      <config projectName="LLVM" targetName="llvm-cat" />
      <config projectName="LLVM" targetName="install-clang_rt.asan-x86_64" />
      <config projectName="LLVM" targetName="check-clang-cxx-over-over.match-over.match.best-over.best.ics-over.ics.user" />
      <config projectName="LLVM" targetName="install-llvm-bcanalyzer-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-over-over.load" />
      <config projectName="LLVM" targetName="check-llvm-transforms-safestack-arm" />
      <config projectName="LLVM" targetName="check-llvm-executionengine-runtimedyld-systemz" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-dlltool" />
      <config projectName="LLVM" targetName="install-llvm-stress-stripped" />
      <config projectName="LLVM" targetName="check-scudo" />
      <config projectName="LLVM" targetName="check-llvm-transforms-slpvectorizer-x86" />
      <config projectName="LLVM" targetName="check-llvm-analysis-assumptioncache" />
      <config projectName="LLVM" targetName="BugpointPasses_exports" />
      <config projectName="LLVM" targetName="check-clang-cxx-stmt.stmt-stmt.late" />
      <config projectName="LLVM" targetName="check-llvm-codegen-x86" />
      <config projectName="LLVM" targetName="check-clang-cxx-modules-ts-dcl.dcl-dcl.module" />
      <config projectName="LLVM" targetName="install-libclang-stripped" />
      <config projectName="LLVM" targetName="install-llvm-readobj-stripped" />
      <config projectName="LLVM" targetName="intrinsics_gen" />
      <config projectName="LLVM" targetName="check-llvm-mc-elf-arm" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.fct.spec-temp.deduct-temp.deduct.call" />
      <config projectName="LLVM" targetName="check-llvm-mc-coff" />
      <config projectName="LLVM" targetName="check-llvm-transforms-divrempairs-powerpc" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopdeletion" />
      <config projectName="LLVM" targetName="install-LLVMPowerPCDisassembler-stripped" />
      <config projectName="LLVM" targetName="install-LLVMX86Info" />
      <config projectName="LLVM" targetName="llvm-ar" />
      <config projectName="LLVM" targetName="LLVMAArch64Disassembler" />
      <config projectName="LLVM" targetName="llvm-as" />
      <config projectName="LLVM" targetName="LLVMAMDGPUUtils" />
      <config projectName="LLVM" targetName="check-clang-cxx-stmt.stmt-stmt.select-stmt.switch" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.decls-temp.concept.map" />
      <config projectName="LLVM" targetName="check-llvm-codegen-x86-avx512-shuffles" />
      <config projectName="LLVM" targetName="ClangCommentCommandInfo" />
      <config projectName="LLVM" targetName="BuildingAJIT-Ch5-Server" />
      <config projectName="LLVM" targetName="check-clang-cxx-over-over.match-over.match.funcs-over.match.class.deduct" />
      <config projectName="LLVM" targetName="check-clang-codegen-include" />
      <config projectName="LLVM" targetName="RewriteTests" />
      <config projectName="LLVM" targetName="install-LLVMWindowsManifest" />
      <config projectName="LLVM" targetName="check-clang-cxx-cpp-cpp.null" />
      <config projectName="LLVM" targetName="check-clang-cxx-except-except.special-except.uncaught" />
      <config projectName="LLVM" targetName="check-llvm-transforms-ipconstantprop" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.scope" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.scope-basic.funscope" />
      <config projectName="LLVM" targetName="check-clang-cxx-special-class.conv-class.conv.ctor" />
      <config projectName="LLVM" targetName="LLVMMipsCodeGen" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.str.strstreams-depr.ostrstream-depr.ostrstream.members" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.decl-dcl.fct.def" />
      <config projectName="LLVM" targetName="install-LLVMAArch64Utils" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.post-expr.type.conv" />
      <config projectName="LLVM" targetName="install-llvm-modextract-stripped" />
      <config projectName="LLVM" targetName="install-LLVMAMDGPUDesc" />
      <config projectName="LLVM" targetName="check-llvm-symbolrewriter" />
      <config projectName="LLVM" targetName="RcTableGen" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips-compactbranches" />
      <config projectName="LLVM" targetName="check-llvm-analysis-profilesummary" />
      <config projectName="LLVM" targetName="check-clang-import-missing-import" />
      <config projectName="LLVM" targetName="install-clang_rt.lsan-i386-stripped" />
      <config projectName="LLVM" targetName="install-LLVMARMInfo-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-special-class.init-class.inhctor.init" />
      <config projectName="LLVM" targetName="AttributeCompatFuncTableGen" />
      <config projectName="LLVM" targetName="FrontendTests" />
      <config projectName="LLVM" targetName="install-LLVMPowerPCInfo" />
      <config projectName="LLVM" targetName="check-llvm-object-mips" />
      <config projectName="LLVM" targetName="install-LLVMMipsCodeGen-stripped" />
      <config projectName="LLVM" targetName="DynamicLibraryTests" />
      <config projectName="LLVM" targetName="check-clang-cxx-except-except.special-except.terminate" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopstrengthreduce-x86" />
      <config projectName="LLVM" targetName="llvm-go" />
      <config projectName="LLVM" targetName="check-llvm-objectyaml-elf" />
      <config projectName="LLVM" targetName="check-clang-semaobjc" />
      <config projectName="LLVM" targetName="check-llvm-bindings-go" />
      <config projectName="LLVM" targetName="RTSanitizerCommonNoHooks.i386" />
      <config projectName="LLVM" targetName="install-LLVMCore" />
      <config projectName="LLVM" targetName="clang_rt.fuzzer_no_main-x86_64" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.fct.spec-temp.deduct-temp.deduct.funcaddr" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopstrengthreduce" />
      <config projectName="LLVM" targetName="check-llvm-mc-riscv" />
      <config projectName="LLVM" targetName="RTUbsan.x86_64" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.def" />
      <config projectName="LLVM" targetName="install-LLVMInterpreter-stripped" />
      <config projectName="LLVM" targetName="LLVMNVPTXDesc" />
      <config projectName="LLVM" targetName="install-clang_rt.ubsan_standalone_cxx-x86_64" />
      <config projectName="LLVM" targetName="install-llvm-profdata" />
      <config projectName="LLVM" targetName="TInterception-i386-Test" />
      <config projectName="LLVM" targetName="install-yaml2obj" />
      <config projectName="LLVM" targetName="install-LLVMMipsDisassembler-stripped" />
      <config projectName="LLVM" targetName="ClangAttrClasses" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.dcl-basic.namespace" />
      <config projectName="LLVM" targetName="install-LLVMDebugInfoMSF-stripped" />
      <config projectName="LLVM" targetName="check-llvm-analysis-dominators" />
      <config projectName="LLVM" targetName="LLVMDebugInfoCodeView" />
      <config projectName="LLVM" targetName="check-llvm-transforms-nameanonfunctions" />
      <config projectName="LLVM" targetName="TFuzzer-x86_64-Test" />
      <config projectName="LLVM" targetName="check-clang-vfs" />
      <config projectName="LLVM" targetName="check-clang-layout" />
      <config projectName="LLVM" targetName="LineEditorTests" />
      <config projectName="LLVM" targetName="clangStaticAnalyzerCore" />
      <config projectName="LLVM" targetName="install-libclang-headers" />
      <config projectName="LLVM" targetName="check-llvm-analysis-aliasset" />
      <config projectName="LLVM" targetName="LLVMAsmParser" />
      <config projectName="LLVM" targetName="check-llvm-transforms-branchfolding" />
      <config projectName="LLVM" targetName="check-llvm-transforms-inline-aarch64" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.lookup-basic.lookup.elab" />
      <config projectName="LLVM" targetName="check-llvm-linker" />
      <config projectName="LLVM" targetName="install-clang_rt.ubsan_minimal-dynamic-i386" />
      <config projectName="LLVM" targetName="RTSanitizerCommon.test.i386" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.start-basic.start.init" />
      <config projectName="LLVM" targetName="check-llvm-transforms-pgoprofile" />
      <config projectName="LLVM" targetName="install-clang_rt.asan-dynamic-i386" />
      <config projectName="LLVM" targetName="check-llvm-transforms-lowerguardintrinsic" />
      <config projectName="LLVM" targetName="install-llvm-split-stripped" />
      <config projectName="LLVM" targetName="install-llvm-ar-stripped" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-arc" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.post-expr.ref" />
      <config projectName="LLVM" targetName="TAsan-x86_64-inline-Test" />
      <config projectName="LLVM" targetName="ClangARMNeon" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-arm" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopunroll-amdgpu" />
      <config projectName="LLVM" targetName="SecondLib" />
      <config projectName="LLVM" targetName="check-clang-cxx-concepts-ts-temp-temp.constr" />
      <config projectName="LLVM" targetName="check-clang-cxx-concepts-ts-dcl.dcl-dcl.spec-dcl.spec.concept" />
      <config projectName="LLVM" targetName="check-llvm-transforms-rewritestatepointsforgc" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.lib.binders-depr.lib.bind.2nd" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-readobj" />
      <config projectName="LLVM" targetName="check-clang-cxx-class.derived-class.member.lookup" />
      <config projectName="LLVM" targetName="install-llvm-modextract" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-dwp" />
      <config projectName="LLVM" targetName="ClangSACheckers" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-concept-concept.def-concept.assoc" />
      <config projectName="LLVM" targetName="LLVMMipsInfo" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.scope-basic.scope.hiding" />
      <config projectName="LLVM" targetName="install-LLVMBPFInfo" />
      <config projectName="LLVM" targetName="install-LLVMMC-stripped" />
      <config projectName="LLVM" targetName="install-clang_rt.msan_cxx-x86_64" />
      <config projectName="LLVM" targetName="check-llvm-tools-yaml2obj" />
      <config projectName="LLVM" targetName="llvm-opt-fuzzer" />
      <config projectName="LLVM" targetName="install-llvm-mt-stripped" />
      <config projectName="LLVM" targetName="not" />
      <config projectName="LLVM" targetName="check-llvm-transforms-constanthoisting-arm" />
      <config projectName="LLVM" targetName="check-llvm-transforms-thinltobitcodewriter" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.decls-temp.class.spec-temp.class.spec.match" />
      <config projectName="LLVM" targetName="check-llvm-transforms-partiallyinlinelibcalls" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.dcl-dcl.spec-dcl.type-dcl.type.simple" />
      <config projectName="LLVM" targetName="check-clang-cxx-conv-conv.ptr" />
      <config projectName="LLVM" targetName="check-clang-cxx-class.access-class.access.virt" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.type" />
      <config projectName="LLVM" targetName="check-llvm-analysis-branchprobabilityinfo" />
      <config projectName="LLVM" targetName="check-llvm-transforms-safestack-x86" />
      <config projectName="LLVM" targetName="install-llvm-cat-stripped" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-x86" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.lib.iterator.primitives-iterator.backward" />
      <config projectName="LLVM" targetName="check-clang-import-forward-declared-struct" />
      <config projectName="LLVM" targetName="check-llvm-examples-kaleidoscope" />
      <config projectName="LLVM" targetName="LLVMObject" />
      <config projectName="LLVM" targetName="check-llvm-transforms-naryreassociate" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.decls-temp.class.spec" />
      <config projectName="LLVM" targetName="install-clang_rt.msan_cxx-x86_64-stripped" />
      <config projectName="LLVM" targetName="install-LLVMAArch64CodeGen" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.post" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.prim-expr.prim.lambda" />
      <config projectName="LLVM" targetName="install-LLVMMIRParser" />
      <config projectName="LLVM" targetName="clang_rt.ubsan_minimal-dynamic-i386" />
      <config projectName="LLVM" targetName="install-LLVMBPFDisassembler" />
      <config projectName="LLVM" targetName="llvm-lto2" />
      <config projectName="LLVM" targetName="check-clang-cxx-conv-conv.fpint" />
      <config projectName="LLVM" targetName="install-LLVMXCoreDisassembler-stripped" />
      <config projectName="LLVM" targetName="install-LLVMPowerPCAsmParser-stripped" />
      <config projectName="LLVM" targetName="install-clang-format-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-inferaddressspaces" />
      <config projectName="LLVM" targetName="check-clang-cxx-class-class.bit" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.lookup-basic.lookup.qual-concept.qual" />
      <config projectName="LLVM" targetName="install-clang_rt.stats_client-i386" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-concept-concept.def-concept.axiom" />
      <config projectName="LLVM" targetName="install-llvm-readelf" />
      <config projectName="LLVM" targetName="check-llvm-lto-resolution" />
      <config projectName="LLVM" targetName="check-clang-cxx-over-over.match-over.match.best-over.best.ics-over.ics.ellipsis" />
      <config projectName="LLVM" targetName="check-llvm-transforms-irce" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-mt" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.fct.spec-temp.over" />
      <config projectName="LLVM" targetName="check-clang-index-core" />
      <config projectName="LLVM" targetName="LLVMAMDGPUDesc" />
      <config projectName="LLVM" targetName="install-LLVMDebugInfoDWARF" />
      <config projectName="LLVM" targetName="check-clang-cxx-lex-lex.separate" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-mips32" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-size" />
      <config projectName="LLVM" targetName="LLVMMSP430Desc" />
      <config projectName="LLVM" targetName="check-llvm-transforms-objcarc" />
      <config projectName="LLVM" targetName="TSanitizer-i386-Test" />
      <config projectName="LLVM" targetName="check-llvm-analysis-cflaliasanalysis-andersen" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopvectorize-x86" />
      <config projectName="LLVM" targetName="check-llvm-transforms-interleavedaccess-aarch64" />
      <config projectName="LLVM" targetName="install-LLVMBPFCodeGen" />
      <config projectName="LLVM" targetName="DllOptionsTableGen" />
      <config projectName="LLVM" targetName="check-clang-frontend" />
      <config projectName="LLVM" targetName="check-tsan" />
      <config projectName="LLVM" targetName="check-clang-cxx-cpp-cpp.replace-cpp.stringize" />
      <config projectName="LLVM" targetName="install-LLVMX86CodeGen-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-globalopt" />
      <config projectName="LLVM" targetName="check-llvm-codegen-arm-windows" />
      <config projectName="LLVM" targetName="ClangAttrParsedAttrImpl" />
      <config projectName="LLVM" targetName="install-clang_rt.esan-x86_64-stripped" />
      <config projectName="LLVM" targetName="install-clang_rt.cfi_diag-x86_64" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-opt-fuzzer" />
      <config projectName="LLVM" targetName="check-llvm-transforms-rewritestatepointsforgc-deopt-bundles" />
      <config projectName="LLVM" targetName="check-llvm-transforms-slpvectorizer-powerpc" />
      <config projectName="LLVM" targetName="clang_rt.tsan_cxx-x86_64-symbols" />
      <config projectName="LLVM" targetName="LLVMLanaiCodeGen" />
      <config projectName="LLVM" targetName="bugpoint" />
      <config projectName="LLVM" targetName="check-clang-cxx-stmt.stmt-stmt.iter-stmt.do" />
      <config projectName="LLVM" targetName="install-clang_rt.dyndd-dynamic-x86_64-stripped" />
      <config projectName="LLVM" targetName="AsmParserTests" />
      <config projectName="LLVM" targetName="LLVMBPFCodeGen" />
      <config projectName="LLVM" targetName="llvm-config" />
      <config projectName="LLVM" targetName="install-LLVMSystemZDisassembler" />
      <config projectName="LLVM" targetName="check-llvm-filecheck" />
      <config projectName="LLVM" targetName="install-LLVMInstCombine" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.constrained-temp.req" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.decl-dcl.init" />
      <config projectName="LLVM" targetName="check-clang-cxx-class-class.static-class.static.data" />
      <config projectName="LLVM" targetName="RTAsan_dynamic_version_script_dummy.x86_64" />
      <config projectName="LLVM" targetName="check-clang-astmerge-typedef" />
      <config projectName="LLVM" targetName="check-clang-cxx-cpp-cpp.error" />
      <config projectName="LLVM" targetName="install-llvm-profdata-stripped" />
      <config projectName="LLVM" targetName="LLVMBitReader" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopstrengthreduce-arm" />
      <config projectName="LLVM" targetName="install-clang_rt.builtins-i386-stripped" />
      <config projectName="LLVM" targetName="BrainF" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.start-basic.start.term" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.spec-temp.inst" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.decls" />
      <config projectName="LLVM" targetName="FuzzMutateTests" />
      <config projectName="LLVM" targetName="check-clang-cxx-class.derived-class.virtual" />
      <config projectName="LLVM" targetName="install-LLVMSparcAsmParser-stripped" />
      <config projectName="LLVM" targetName="install-LLVMNVPTXDesc-stripped" />
      <config projectName="LLVM" targetName="llvm-nm" />
      <config projectName="LLVM" targetName="install-LLVMMIRParser-stripped" />
      <config projectName="LLVM" targetName="install-LLVMXCoreCodeGen-stripped" />
      <config projectName="LLVM" targetName="check-clang-codecompletion" />
      <config projectName="LLVM" targetName="check-ubsan-minimal" />
      <config projectName="LLVM" targetName="llvm-mt" />
      <config projectName="LLVM" targetName="install-llvm-rtdyld-stripped" />
      <config projectName="LLVM" targetName="install-llvm-symbolizer" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-micromips-dsp" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-mips64" />
      <config projectName="LLVM" targetName="check-clang-cxx-cpp-cpp.replace-cpp.concat" />
      <config projectName="LLVM" targetName="LLVMLanaiInfo" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.fct.spec" />
      <config projectName="LLVM" targetName="LLVMLTO" />
      <config projectName="LLVM" targetName="check-llvm-tools-sancov" />
      <config projectName="LLVM" targetName="llvm-mc" />
      <config projectName="LLVM" targetName="install-LLVMMSP430Desc" />
      <config projectName="LLVM" targetName="ClangDiagnosticGroups" />
      <config projectName="LLVM" targetName="check-clang-cxx-intro-intro.defs-defns.diagnostic" />
      <config projectName="LLVM" targetName="llvm-isel-fuzzer" />
      <config projectName="LLVM" targetName="install-LLVMExecutionEngine" />
      <config projectName="LLVM" targetName="install-clang_rt.safestack-i386" />
      <config projectName="LLVM" targetName="clangHandleCXX" />
      <config projectName="LLVM" targetName="check-clang-preprocessor-headermap-rel-foo.framework-headers" />
      <config projectName="LLVM" targetName="install-LLVMMipsAsmPrinter-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-indvarsimplify" />
      <config projectName="LLVM" targetName="clangIndex" />
      <config projectName="LLVM" targetName="LLVMXCoreDesc" />
      <config projectName="LLVM" targetName="clang-test" />
      <config projectName="LLVM" targetName="Kaleidoscope" />
      <config projectName="LLVM" targetName="check-clang-cxx-intro-intro.object" />
      <config projectName="LLVM" targetName="check-interception" />
      <config projectName="LLVM" targetName="check-llvm-mc-asmparser-include" />
      <config projectName="LLVM" targetName="clang_rt.ubsan_minimal-x86_64" />
      <config projectName="LLVM" targetName="install-LLVMDebugInfoCodeView" />
      <config projectName="LLVM" targetName="check-clang-cxx-conv-conv.mem" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-micromips" />
      <config projectName="LLVM" targetName="install-LLVMPasses" />
      <config projectName="LLVM" targetName="clang-offload-bundler" />
      <config projectName="LLVM" targetName="install-clang_rt.asan-preinit-i386-stripped" />
      <config projectName="LLVM" targetName="install-llvm-config" />
      <config projectName="LLVM" targetName="LLVMCoroutines" />
      <config projectName="LLVM" targetName="LLVMSystemZInfo" />
      <config projectName="LLVM" targetName="install-LLVMAArch64Disassembler-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-argumentpromotion" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.res-temp.dep-temp.dep.constexpr" />
      <config projectName="LLVM" targetName="llvm-headers" />
      <config projectName="LLVM" targetName="check-llvm-transforms-indirectbrexpand" />
      <config projectName="LLVM" targetName="check-llvm-transforms-gvn-pre" />
      <config projectName="LLVM" targetName="check-clang-cxx-modules-ts-basic-basic.search" />
      <config projectName="LLVM" targetName="LLVMSupport" />
      <config projectName="LLVM" targetName="check-llvm-jitlistener" />
      <config projectName="LLVM" targetName="MipsCommonTableGen" />
      <config projectName="LLVM" targetName="clang_rt.asan-i386" />
      <config projectName="LLVM" targetName="install-clang" />
      <config projectName="LLVM" targetName="install-LLVMTarget-stripped" />
      <config projectName="LLVM" targetName="install-clang_rt.profile-x86_64-stripped" />
      <config projectName="LLVM" targetName="install-sancov" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.dcl-dcl.attr-dcl.attr.fallthrough" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.str.strstreams-depr.strstreambuf" />
      <config projectName="LLVM" targetName="clangParse" />
      <config projectName="LLVM" targetName="install-LLVMAArch64AsmParser-stripped" />
      <config projectName="LLVM" targetName="PowerPCCommonTableGen" />
      <config projectName="LLVM" targetName="RTAsan.i386" />
      <config projectName="LLVM" targetName="llvm-rc" />
      <config projectName="LLVM" targetName="count" />
      <config projectName="LLVM" targetName="TAsan-i386-inline-Noinst-Test" />
      <config projectName="LLVM" targetName="check-clang-codegen" />
      <config projectName="LLVM" targetName="install-LLVMAnalysis" />
      <config projectName="LLVM" targetName="ClangDriverOptions" />
      <config projectName="LLVM" targetName="check-llvm-analysis-costmodel" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-size-x86" />
      <config projectName="LLVM" targetName="install-clang-import-test-stripped" />
      <config projectName="LLVM" targetName="install-LLVMMCDisassembler" />
      <config projectName="LLVM" targetName="install-llvm-symbolizer-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-sroa" />
      <config projectName="LLVM" targetName="clang_rt.stats_client-i386" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.dcl-dcl.spec-dcl.type-dcl.spec.auto" />
      <config projectName="LLVM" targetName="install-llvm-headers-stripped" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation-boundschecking" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.fct.spec-temp.deduct" />
      <config projectName="LLVM" targetName="install-LLVMBinaryFormat" />
      <config projectName="LLVM" targetName="check-llvm-transforms-tailcallelim" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.decl-dcl.meaning-dcl.ref" />
      <config projectName="LLVM" targetName="ClangDiagnosticSema" />
      <config projectName="LLVM" targetName="scan-view" />
      <config projectName="LLVM" targetName="TTsanRtlTest" />
      <config projectName="LLVM" targetName="check-llvm-analysis-memorydependenceanalysis" />
      <config projectName="LLVM" targetName="StmtDataCollectors" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-mir" />
      <config projectName="LLVM" targetName="check-llvm-integer" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.res-temp.dep.res-temp.dep.candidate" />
      <config projectName="LLVM" targetName="check-clang-cxx-modules-ts-basic-basic.def.odr" />
      <config projectName="LLVM" targetName="check-clang-astmerge-codegen-body" />
      <config projectName="LLVM" targetName="check-clang-index-reparse-with-remaps" />
      <config projectName="LLVM" targetName="check-llvm-object-riscv" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.unary-expr.pre.incr" />
      <config projectName="LLVM" targetName="check-clang-cxx-over-over.match-over.match.viable" />
      <config projectName="LLVM" targetName="check-clang-cxx-class-class.mfct-class.mfct.non-static" />
      <config projectName="LLVM" targetName="install-LLVMMSP430CodeGen" />
      <config projectName="LLVM" targetName="check-clang-import-extern-c-function" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips-cconv" />
      <config projectName="LLVM" targetName="install-LLVMNVPTXInfo" />
      <config projectName="LLVM" targetName="clang-rename" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.decl-dcl.meaning-dcl.mptr" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation-dataflowsanitizer" />
      <config projectName="LLVM" targetName="check-clang-astmerge-function" />
      <config projectName="LLVM" targetName="check-clang-refactor-localrename" />
      <config projectName="LLVM" targetName="ScalarTests" />
      <config projectName="LLVM" targetName="install-LLVMHexagonDesc" />
      <config projectName="LLVM" targetName="LLVMBPFInfo" />
      <config projectName="LLVM" targetName="check-clang-codegenopencl" />
      <config projectName="LLVM" targetName="check-llvm-analysis-costmodel-x86" />
      <config projectName="LLVM" targetName="install-LLVMInterpreter" />
      <config projectName="LLVM" targetName="check-ubsan" />
      <config projectName="LLVM" targetName="clangSerialization" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.scope-basic.scope.declarative" />
      <config projectName="LLVM" targetName="check-asan" />
      <config projectName="LLVM" targetName="check-clang-cxx-cpp-cpp.replace" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.unary-expr.new" />
      <config projectName="LLVM" targetName="XCoreCommonTableGen" />
      <config projectName="LLVM" targetName="RTUbsan_standalone.i386" />
      <config projectName="LLVM" targetName="check-llvm-transforms-bdce" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.decl-dcl.decomp" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.dcl-basic.namespace-namespace.def-namespace.memdef" />
      <config projectName="LLVM" targetName="install-LLVMARMAsmParser-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-class-class.local" />
      <config projectName="LLVM" targetName="check-llvm-transforms-slpvectorizer" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mir-mips" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopvectorize-xcore" />
      <config projectName="LLVM" targetName="check-llvm-analysis-divergenceanalysis-nvptx" />
      <config projectName="LLVM" targetName="check-llvm-mc-bpf" />
      <config projectName="LLVM" targetName="check-llvm-analysis-loopaccessanalysis" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-cfi-verify-x86" />
      <config projectName="LLVM" targetName="install-LLVMX86Disassembler-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-stmt.stmt-stmt.jump" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopvectorize-arm" />
      <config projectName="LLVM" targetName="check-clang-cxx-intro-intro.multithread" />
      <config projectName="LLVM" targetName="install-clang_rt.ubsan_standalone-x86_64-stripped" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips" />
      <config projectName="LLVM" targetName="check-clang-preprocessor-headermap-rel" />
      <config projectName="LLVM" targetName="check-llvm-mc-avr-out-of-range-fixups" />
      <config projectName="LLVM" targetName="LLVMBPFAsmPrinter" />
      <config projectName="LLVM" targetName="install-clang_rt.ubsan_standalone_cxx-i386-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.dcl-dcl.spec-dcl.inline" />
      <config projectName="LLVM" targetName="check-clang-import-local-struct" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.ass" />
      <config projectName="LLVM" targetName="check-llvm-other" />
      <config projectName="LLVM" targetName="check-clang-astmerge-codegen-exprs" />
      <config projectName="LLVM" targetName="LLVMAMDGPUDisassembler" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.dcl-dcl.attr-dcl.attr.deprecated" />
      <config projectName="LLVM" targetName="install-LLVMX86Info-stripped" />
      <config projectName="LLVM" targetName="install-LLVMARMAsmPrinter" />
      <config projectName="LLVM" targetName="check-clang-cxx-lex-lex.header" />
      <config projectName="LLVM" targetName="check-clang-cxx-intro-intro.defs-defns.parameter" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-mips64r6" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-mips64r5" />
      <config projectName="LLVM" targetName="check-llvm-transforms-memcpyopt" />
      <config projectName="LLVM" targetName="RTSanitizerCommonLibcNoHooks.i386" />
      <config projectName="LLVM" targetName="AMDGPUCommonTableGen" />
      <config projectName="LLVM" targetName="install-dfsan" />
      <config projectName="LLVM" targetName="check-llvm-lto-resolution-x86" />
      <config projectName="LLVM" targetName="check-llvm-transforms-constanthoisting-x86" />
      <config projectName="LLVM" targetName="check-lsan" />
      <config projectName="LLVM" targetName="RTfuzzer_main.x86_64" />
      <config projectName="LLVM" targetName="install-clang_rt.scudo_cxx-i386" />
      <config projectName="LLVM" targetName="check-clang-cxx-class.access-class.friend" />
      <config projectName="LLVM" targetName="install-LLVMBPFDisassembler-stripped" />
      <config projectName="LLVM" targetName="install-LLVMLanaiAsmParser" />
      <config projectName="LLVM" targetName="check-clang-cxx-cpp-cpp.replace-cpp.rescan" />
      <config projectName="LLVM" targetName="clang_rt.asan-x86_64" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-mips64r3" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-mips64r2" />
      <config projectName="LLVM" targetName="LLVMLanaiAsmParser" />
      <config projectName="LLVM" targetName="check-llvm-bugpoint" />
      <config projectName="LLVM" targetName="check-llvm-codegen-riscv" />
      <config projectName="LLVM" targetName="check-clang-cxx-class.access-class.access.nest" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-systemz" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-dspr2" />
      <config projectName="LLVM" targetName="check-clang-sema" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopinterchange" />
      <config projectName="LLVM" targetName="check-llvm-codegen-aarch64" />
      <config projectName="LLVM" targetName="check-clang-cxx-intro-intro.scope" />
      <config projectName="LLVM" targetName="check-clang-cxx-intro-intro.memory" />
      <config projectName="LLVM" targetName="check-esan" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mir" />
      <config projectName="LLVM" targetName="check-llvm-transforms-structurizecfg" />
      <config projectName="LLVM" targetName="install-LLVMObject-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-concept-concept.map-concept.map.assoc" />
      <config projectName="LLVM" targetName="install-llvm-mcmarkup" />
      <config projectName="LLVM" targetName="install-LLVMipo-stripped" />
      <config projectName="LLVM" targetName="install-LLVMBinaryFormat-stripped" />
      <config projectName="LLVM" targetName="llvm-stress" />
      <config projectName="LLVM" targetName="RTSanitizerCommonLibcNoHooks.x86_64" />
      <config projectName="LLVM" targetName="check-clang-import-error-in-import" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.unary-expr.delete" />
      <config projectName="LLVM" targetName="install-llvm-cfi-verify-stripped" />
      <config projectName="LLVM" targetName="install-LTO" />
      <config projectName="LLVM" targetName="clang_rt.ubsan_minimal-x86_64-symbols" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-cnmips" />
      <config projectName="LLVM" targetName="MSP430CommonTableGen" />
      <config projectName="LLVM" targetName="check-llvm-transforms-util" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.dcl-dcl.spec-dcl.type-dcl.type.cv" />
      <config projectName="LLVM" targetName="install-LLVMARMAsmParser" />
      <config projectName="LLVM" targetName="install-LLVMSystemZCodeGen-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-concept-concept.refine-concept.member.lookup" />
      <config projectName="LLVM" targetName="LLVMOrcJIT" />
      <config projectName="LLVM" targetName="check-clang-arcmt" />
      <config projectName="LLVM" targetName="check-llvm-tools-dsymutil" />
      <config projectName="LLVM" targetName="Kaleidoscope-Ch2" />
      <config projectName="LLVM" targetName="Kaleidoscope-Ch3" />
      <config projectName="LLVM" targetName="install-llvm-dis-stripped" />
      <config projectName="LLVM" targetName="ObjectYAMLTests" />
      <config projectName="LLVM" targetName="Kaleidoscope-Ch4" />
      <config projectName="LLVM" targetName="install-LLVMMSP430Desc-stripped" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-mir-aarch64" />
      <config projectName="LLVM" targetName="Kaleidoscope-Ch5" />
      <config projectName="LLVM" targetName="TAsan-i386-calls-Dynamic-Test" />
      <config projectName="LLVM" targetName="Kaleidoscope-Ch6" />
      <config projectName="LLVM" targetName="Kaleidoscope-Ch7" />
      <config projectName="LLVM" targetName="LLVMPowerPCCodeGen" />
      <config projectName="LLVM" targetName="Kaleidoscope-Ch8" />
      <config projectName="LLVM" targetName="LLVMObjCARCOpts" />
      <config projectName="LLVM" targetName="Kaleidoscope-Ch9" />
      <config projectName="LLVM" targetName="check-llvm-mc-lanai" />
      <config projectName="LLVM" targetName="install-LLVMObjCARCOpts-stripped" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation-efficiencysanitizer" />
      <config projectName="LLVM" targetName="check-llvm-transforms-instcombine-x86" />
      <config projectName="LLVM" targetName="clang_rt.stats_client-x86_64" />
      <config projectName="LLVM" targetName="MCJITTests" />
      <config projectName="LLVM" targetName="check-llvm-mc-aarch64" />
      <config projectName="LLVM" targetName="install-llvm-cov-stripped" />
      <config projectName="LLVM" targetName="clang_rt.cfi-i386" />
      <config projectName="LLVM" targetName="check-llvm-feature-operandbundles" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loadcombine" />
      <config projectName="LLVM" targetName="check-llvm-mc-hexagon-instructions" />
      <config projectName="LLVM" targetName="install-llvm-nm-stripped" />
      <config projectName="LLVM" targetName="check-llvm-tools-gold-powerpc" />
      <config projectName="LLVM" targetName="install-LLVMARMCodeGen" />
      <config projectName="LLVM" targetName="check-llvm-transforms-slpvectorizer-xcore" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.dcl-basic.namespace-namespace.udir" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.post-expr.post.incr" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.res-temp.local" />
      <config projectName="LLVM" targetName="check-llvm-transforms-crossdsocfi" />
      <config projectName="LLVM" targetName="dd" />
      <config projectName="LLVM" targetName="clangLex" />
      <config projectName="LLVM" targetName="LLVMMCDisassembler" />
      <config projectName="LLVM" targetName="install-asan-stripped" />
      <config projectName="LLVM" targetName="check-llvm-codegen-msp430" />
      <config projectName="LLVM" targetName="clangFrontendTool" />
      <config projectName="LLVM" targetName="check-clang-cxx-stmt.stmt-stmt.jump-stmt.return" />
      <config projectName="LLVM" targetName="check-clang-cxx-over-over.match-over.match.funcs-over.match.call-over.call.func" />
      <config projectName="LLVM" targetName="check-clang-import-in-class-initializer" />
      <config projectName="LLVM" targetName="check-llvm-transforms-lowertypetests" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-x86" />
      <config projectName="LLVM" targetName="LLVMAArch64AsmParser" />
      <config projectName="LLVM" targetName="install-libclang" />
      <config projectName="LLVM" targetName="install-llvm-diff" />
      <config projectName="LLVM" targetName="check-llvm-transforms-bbvectorize" />
      <config projectName="LLVM" targetName="check-llvm-codegen-avr-atomics" />
      <config projectName="LLVM" targetName="install-LLVMTransformUtils-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-simplifycfg-hexagon" />
      <config projectName="LLVM" targetName="install-LLVMXRay" />
      <config projectName="LLVM" targetName="TAsan-i386-inline-Dynamic-Test" />
      <config projectName="LLVM" targetName="install-LLVMAArch64Info" />
      <config projectName="LLVM" targetName="check-llvm-transforms-stripsymbols" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopvectorize" />
      <config projectName="LLVM" targetName="LLVMDlltoolDriver" />
      <config projectName="LLVM" targetName="check-llvm-mc-arm-windows" />
      <config projectName="LLVM" targetName="check-clang-cxx-intro-intro.defs-defns.impl.defined" />
      <config projectName="LLVM" targetName="PrintFunctionNames_exports" />
      <config projectName="LLVM" targetName="RTAsanTest.x86_64" />
      <config projectName="LLVM" targetName="install-LLVMBPFAsmPrinter-stripped" />
      <config projectName="LLVM" targetName="LLVMAMDGPUCodeGen" />
      <config projectName="LLVM" targetName="LLVMSystemZCodeGen" />
      <config projectName="LLVM" targetName="check-xray" />
      <config projectName="LLVM" targetName="install-LLVMBitReader-stripped" />
      <config projectName="LLVM" targetName="install-LLVMMCParser-stripped" />
      <config projectName="LLVM" targetName="ClangDiagnosticFrontend" />
      <config projectName="LLVM" targetName="ClangStmtNodes" />
      <config projectName="LLVM" targetName="check-clang-cxx-over-over.match-over.match.funcs-over.match.call" />
      <config projectName="LLVM" targetName="install-clang_rt.builtins-x86_64-stripped" />
      <config projectName="LLVM" targetName="RTSanitizerCommon.test.nolibc.x86_64" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.arg" />
      <config projectName="LLVM" targetName="check-llvm-analysis-costmodel-arm" />
      <config projectName="LLVM" targetName="install-clang_rt.asan-dynamic-x86_64" />
      <config projectName="LLVM" targetName="install-llvm-bcanalyzer" />
      <config projectName="LLVM" targetName="check-llvm-examples" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.constrained-temp.constrained.inst" />
      <config projectName="LLVM" targetName="install-LLVMSparcDesc" />
      <config projectName="LLVM" targetName="LLVMSystemZAsmPrinter" />
      <config projectName="LLVM" targetName="check-llvm-analysis-demandedbits" />
      <config projectName="LLVM" targetName="X86CommonTableGen" />
      <config projectName="LLVM" targetName="check-llvm-mc-hexagon-packetrules" />
      <config projectName="LLVM" targetName="check-llvm-transforms-looppredication" />
      <config projectName="LLVM" targetName="clang_rt.asan_cxx-i386" />
      <config projectName="LLVM" targetName="check-clang-astmerge-macro" />
      <config projectName="LLVM" targetName="check-clang-cxx-lex-lex.digraph" />
      <config projectName="LLVM" targetName="check-llvm-mc-arm-alignedbundling" />
      <config projectName="LLVM" targetName="ClangAttrDump" />
      <config projectName="LLVM" targetName="RTAsan_preinit.i386" />
      <config projectName="LLVM" targetName="install-LLVMRuntimeDyld-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-slpvectorizer-aarch64" />
      <config projectName="LLVM" targetName="clang_rt.ubsan_minimal-i386" />
      <config projectName="LLVM" targetName="llvm-readelf" />
      <config projectName="LLVM" targetName="check-llvm-analysis-delinearization" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.lib.binders-depr.lib.binder.2nd" />
      <config projectName="LLVM" targetName="check-llvm-mc-aarch64-sve-disassembler_tests" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-micromips32r6" />
      <config projectName="LLVM" targetName="check-clang-codegencxx" />
      <config projectName="LLVM" targetName="check-clang-cxx-class.access" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-micromips32r3" />
      <config projectName="LLVM" targetName="check-clang-cxx-class-class.union-class.union.anon" />
      <config projectName="LLVM" targetName="check-llvm-other-x86" />
      <config projectName="LLVM" targetName="BitcodeTests" />
      <config projectName="LLVM" targetName="check-llvm-verifier" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.res-temp.dep-temp.dep.type" />
      <config projectName="LLVM" targetName="check-llvm-codegen-systemz" />
      <config projectName="LLVM" targetName="LLVMExecutionEngine" />
      <config projectName="LLVM" targetName="check-llvm-codegen-avr-instrumentation" />
      <config projectName="LLVM" targetName="c-arcmt-test" />
      <config projectName="LLVM" targetName="check-profile" />
      <config projectName="LLVM" targetName="check-llvm-tools-sanstats" />
      <config projectName="LLVM" targetName="check-clang-astmerge-class" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.names" />
      <config projectName="LLVM" targetName="check-clang-cxx-over-over.oper-over.inc" />
      <config projectName="LLVM" targetName="check-llvm-analysis-cflaliasanalysis" />
      <config projectName="LLVM" targetName="LLVMTableGen" />
      <config projectName="LLVM" targetName="install-llvm-lib-stripped" />
      <config projectName="LLVM" targetName="compiler-rt" />
      <config projectName="LLVM" targetName="install-LLVMMipsAsmParser" />
      <config projectName="LLVM" targetName="check-clang-cxx-modules-ts-dcl.dcl" />
      <config projectName="LLVM" targetName="check-llvm-transforms-licm" />
      <config projectName="LLVM" targetName="install-LLVMMC" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.lib.binders-depr.lib.bind.1st" />
      <config projectName="LLVM" targetName="llvm-demangle-fuzzer" />
      <config projectName="LLVM" targetName="install-llvm-xray-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-simplifycfg-amdgpu" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopstrengthreduce-nvptx" />
      <config projectName="LLVM" targetName="install-LLVMPasses-stripped" />
      <config projectName="LLVM" targetName="install-llvm-config-stripped" />
      <config projectName="LLVM" targetName="clangDynamicASTMatchers" />
      <config projectName="LLVM" targetName="install-LLVMXCoreAsmPrinter-stripped" />
      <config projectName="LLVM" targetName="clang_rt.lsan-i386" />
      <config projectName="LLVM" targetName="check-llvm-transforms-codegenprepare-nvptx" />
      <config projectName="LLVM" targetName="check-llvm-assembler" />
      <config projectName="LLVM" targetName="check-llvm-tools-gold-x86" />
      <config projectName="LLVM" targetName="check-llvm-transforms-sink" />
      <config projectName="LLVM" targetName="diagtool" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-dwarfdump" />
      <config projectName="LLVM" targetName="check-llvm-transforms-jumpthreading" />
      <config projectName="LLVM" targetName="check-clang-lexer" />
      <config projectName="LLVM" targetName="check-clang-cxx-over-over.dcl" />
      <config projectName="LLVM" targetName="install-LLVMSparcDisassembler" />
      <config projectName="LLVM" targetName="LLVMX86Info" />
      <config projectName="LLVM" targetName="TAsan-x86_64-inline-Noinst-Test" />
      <config projectName="LLVM" targetName="LLVMMIRParser" />
      <config projectName="LLVM" targetName="check-clang-cxx-over-over.built" />
      <config projectName="LLVM" targetName="check-llvm-tools-gold-x86-v1.12" />
      <config projectName="LLVM" targetName="check-llvm-transforms-interleavedaccess-arm" />
      <config projectName="LLVM" targetName="install-LLVMSystemZAsmPrinter" />
      <config projectName="LLVM" targetName="install-scudo-stripped" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation" />
      <config projectName="LLVM" targetName="LLVMARMCodeGen" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-concept-concept.map" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-webassembly" />
      <config projectName="LLVM" targetName="install-llvm-dwp-stripped" />
      <config projectName="LLVM" targetName="install-stats-stripped" />
      <config projectName="LLVM" targetName="install-llvm-mc" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.dcl-basic.namespace-namespace.alias" />
      <config projectName="LLVM" targetName="check-llvm-mc-amdgpu" />
      <config projectName="LLVM" targetName="install-LLVMSymbolize" />
      <config projectName="LLVM" targetName="clangToolingRefactor" />
      <config projectName="LLVM" targetName="LLVMWindowsManifest" />
      <config projectName="LLVM" targetName="install-LLVMARMUtils" />
      <config projectName="LLVM" targetName="install-LLVMHexagonDisassembler" />
      <config projectName="LLVM" targetName="check-clang-coverage" />
      <config projectName="LLVM" targetName="install-LLVMNVPTXAsmPrinter-stripped" />
      <config projectName="LLVM" targetName="install-llvm-mt" />
      <config projectName="LLVM" targetName="install-LLVMFuzzMutate" />
      <config projectName="LLVM" targetName="install-llvm-dis" />
      <config projectName="LLVM" targetName="install-clang_rt.asan-x86_64-stripped" />
      <config projectName="LLVM" targetName="check-llvm-codegen-thumb" />
      <config projectName="LLVM" targetName="ClangCommentCommandList" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-ar" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.auto.ptr" />
      <config projectName="LLVM" targetName="check-llvm-transforms-instcombine-powerpc" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.post-expr.static.cast" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopunswitch" />
      <config projectName="LLVM" targetName="check-clang-driver-xray" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic" />
      <config projectName="LLVM" targetName="install-LLVMSystemZDesc" />
      <config projectName="LLVM" targetName="check-llvm-mc-macho" />
      <config projectName="LLVM" targetName="check-llvm-analysis-regioninfo" />
      <config projectName="LLVM" targetName="install-clang_rt.scudo-x86_64-stripped" />
      <config projectName="LLVM" targetName="install-clang_rt.scudo_cxx-i386-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-lex-lex.phases" />
      <config projectName="LLVM" targetName="llvm-diff" />
      <config projectName="LLVM" targetName="install-LLVMBPFDesc-stripped" />
      <config projectName="LLVM" targetName="install-LLVMMipsAsmPrinter" />
      <config projectName="LLVM" targetName="clang_rt.asan_cxx-x86_64-symbols" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.res-temp.dep-temp.dep.expr" />
      <config projectName="LLVM" targetName="esan" />
      <config projectName="LLVM" targetName="install-llvm-dsymutil" />
      <config projectName="LLVM" targetName="check-llvm-transforms-globaldce" />
      <config projectName="LLVM" targetName="install-llvm-extract" />
      <config projectName="LLVM" targetName="clang_rt.ubsan_standalone_cxx-i386" />
      <config projectName="LLVM" targetName="install-LLVMHexagonInfo-stripped" />
      <config projectName="LLVM" targetName="clang_rt.builtins-x86_64" />
      <config projectName="LLVM" targetName="clangStaticAnalyzerFrontend" />
      <config projectName="LLVM" targetName="check-llvm-codegen-bpf" />
      <config projectName="LLVM" targetName="check-clang-cxx-except-except.spec" />
      <config projectName="LLVM" targetName="check-llvm-executionengine-runtimedyld-mips" />
      <config projectName="LLVM" targetName="check-clang-cxx-conv-conv.func" />
      <config projectName="LLVM" targetName="DynamicLibraryLib" />
      <config projectName="LLVM" targetName="LLVMBPFDisassembler" />
      <config projectName="LLVM" targetName="sanstats" />
      <config projectName="LLVM" targetName="install-obj2yaml-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-class.access-class.access.spec" />
      <config projectName="LLVM" targetName="install-llvm-nm" />
      <config projectName="LLVM" targetName="llvm-symbolizer" />
      <config projectName="LLVM" targetName="check-clang-cxx-special-class.ctor" />
      <config projectName="LLVM" targetName="install-LLVMTableGen" />
      <config projectName="LLVM" targetName="LLVMOption" />
      <config projectName="LLVM" targetName="check-llvm-transforms-codegenprepare-aarch64" />
      <config projectName="LLVM" targetName="install-LLVMSystemZAsmPrinter-stripped" />
      <config projectName="LLVM" targetName="check-llvm-mc-macho-arm" />
      <config projectName="LLVM" targetName="check-llvm-safepointirverifier" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.decl-dcl.init-dcl.init.list" />
      <config projectName="LLVM" targetName="ASTMatchersTests" />
      <config projectName="LLVM" targetName="ClangAttrSubMatchRulesParserStringSwitches" />
      <config projectName="LLVM" targetName="llvm-strings" />
      <config projectName="LLVM" targetName="check-clang-arcmt-designated-init-in-header" />
      <config projectName="LLVM" targetName="clang_rt.asan-dynamic-x86_64" />
      <config projectName="LLVM" targetName="check-llvm-metal-avr" />
      <config projectName="LLVM" targetName="check-clang-cxx-modules-ts-dcl.dcl-dcl.module-dcl.module.import" />
      <config projectName="LLVM" targetName="clang_rt.asan-dynamic-i386-version-list" />
      <config projectName="LLVM" targetName="install-clang_rt.cfi_diag-x86_64-stripped" />
      <config projectName="LLVM" targetName="FuzzerUnitTests" />
      <config projectName="LLVM" targetName="scudo" />
      <config projectName="LLVM" targetName="clang_rt.asan_cxx-x86_64" />
      <config projectName="LLVM" targetName="check-llvm-transforms-mergefunc" />
      <config projectName="LLVM" targetName="install-LLVMPowerPCDisassembler" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-concept-concept.refine-concept.refine.maps" />
      <config projectName="LLVM" targetName="install-llvm-rc" />
      <config projectName="LLVM" targetName="check-clang-cxx-over-over.oper-over.unary" />
      <config projectName="LLVM" targetName="check-clang-cxx-over" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.str.strstreams-depr.strstream-depr.strstream.cons" />
      <config projectName="LLVM" targetName="check-clang-astmerge-exprs-cpp" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.post-expr.const.cast" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.cast" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.c.headers" />
      <config projectName="LLVM" targetName="RTSanitizerCommon.i386" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.rel" />
      <config projectName="LLVM" targetName="install-LLVMSparcInfo-stripped" />
      <config projectName="LLVM" targetName="clangBasic" />
      <config projectName="LLVM" targetName="gtest_main" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.add" />
      <config projectName="LLVM" targetName="check-llvm-executionengine" />
      <config projectName="LLVM" targetName="check-clang-import-multiple-forward-declarations" />
      <config projectName="LLVM" targetName="FormatTests" />
      <config projectName="LLVM" targetName="RTSanitizerCommonLibc.i386" />
      <config projectName="LLVM" targetName="check-clang-cxx-class-class.union" />
      <config projectName="LLVM" targetName="RTDD.x86_64" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loadstorevectorizer-amdgpu" />
      <config projectName="LLVM" targetName="check-llvm-transforms-interleavedaccess-x86" />
      <config projectName="LLVM" targetName="check-llvm-transforms-newgvn" />
      <config projectName="LLVM" targetName="install-LLVMLanaiDesc-stripped" />
      <config projectName="LLVM" targetName="install-LLVMLanaiDesc" />
      <config projectName="LLVM" targetName="ClangDiagnosticSerialization" />
      <config projectName="LLVM" targetName="check-llvm-codegen-systemz-large" />
      <config projectName="LLVM" targetName="install-llvm-opt-report-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.lib.binders" />
      <config projectName="LLVM" targetName="LLVMNVPTXCodeGen" />
      <config projectName="LLVM" targetName="install-LLVMHexagonDisassembler-stripped" />
      <config projectName="LLVM" targetName="MsanUnitTests" />
      <config projectName="LLVM" targetName="clang_rt.dyndd-dynamic-x86_64" />
      <config projectName="LLVM" targetName="DynamicASTMatchersTests" />
      <config projectName="LLVM" targetName="check-llvm-codegen-hexagon-loop-idiom" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-mc" />
      <config projectName="LLVM" targetName="tsan" />
      <config projectName="LLVM" targetName="check-clang-cxx-lex-lex.charset" />
      <config projectName="LLVM" targetName="install-LLVMBitWriter-stripped" />
      <config projectName="LLVM" targetName="install-LLVMAsmParser" />
      <config projectName="LLVM" targetName="check-llvm-objectyaml" />
      <config projectName="LLVM" targetName="install-LLVMCodeGen" />
      <config projectName="LLVM" targetName="check-clang-cxx-conv-conv.array" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.def.odr" />
      <config projectName="LLVM" targetName="install-clang_rt.asan_cxx-i386-stripped" />
      <config projectName="LLVM" targetName="BuildingAJIT-Ch5" />
      <config projectName="LLVM" targetName="BuildingAJIT-Ch2" />
      <config projectName="LLVM" targetName="BuildingAJIT-Ch1" />
      <config projectName="LLVM" targetName="BuildingAJIT-Ch4" />
      <config projectName="LLVM" targetName="BuildingAJIT-Ch3" />
      <config projectName="LLVM" targetName="check-llvm-analysis" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation-instrprofiling-x86" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-cxxdump-x86" />
      <config projectName="LLVM" targetName="install-llvm-stress" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-micromips-dspr2" />
      <config projectName="LLVM" targetName="RTAsan_cxx.i386" />
      <config projectName="LLVM" targetName="install-llvm-mc-stripped" />
      <config projectName="LLVM" targetName="install-clang-refactor-stripped" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-micromips-dspr3" />
      <config projectName="LLVM" targetName="install-c-index-test-stripped" />
      <config projectName="LLVM" targetName="msan_blacklist" />
      <config projectName="LLVM" targetName="check-clang-cxx-conv-conv.prom" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.post-expr.typeid" />
      <config projectName="LLVM" targetName="LLVMFuzzMutate" />
      <config projectName="LLVM" targetName="SparcCommonTableGen" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.dcl-dcl.link" />
      <config projectName="LLVM" targetName="check-llvm-transforms-forcedfunctionattrs" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-concept" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.str.strstreams-depr.strstream-depr.strstream.dest" />
      <config projectName="LLVM" targetName="check-llvm-codegen-sparc" />
      <config projectName="LLVM" targetName="LLVMObjectYAML" />
      <config projectName="LLVM" targetName="check-clang-cxx-stmt.stmt-stmt.iter-stmt.while" />
      <config projectName="LLVM" targetName="check-llvm-codegen-nvptx" />
      <config projectName="LLVM" targetName="check-clang-astmerge-interface" />
      <config projectName="LLVM" targetName="ocaml_make_directory" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-mips4" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-mips3" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-mips2" />
      <config projectName="LLVM" targetName="check-llvm-transforms-calledvaluepropagation" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-mips1" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-concept-concept.support" />
      <config projectName="LLVM" targetName="LLVMARMAsmPrinter" />
      <config projectName="LLVM" targetName="yaml-bench" />
      <config projectName="LLVM" targetName="LLVMTarget" />
      <config projectName="LLVM" targetName="check-llvm-mc-asmparser-aarch64" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.post-expr.call" />
      <config projectName="LLVM" targetName="install-llvm-cxxdump" />
      <config projectName="LLVM" targetName="RTSanitizerCommonNoLibc.i386" />
      <config projectName="LLVM" targetName="check-llvm-analysis-scopednoaliasaa" />
      <config projectName="LLVM" targetName="ARMCommonTableGen" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.const" />
      <config projectName="LLVM" targetName="clang_rt.builtins-i386" />
      <config projectName="LLVM" targetName="check-clang-cxx-stmt.stmt" />
      <config projectName="LLVM" targetName="install-LLVMSystemZAsmParser" />
      <config projectName="LLVM" targetName="clang_rt.ubsan_standalone_cxx-x86_64-symbols" />
      <config projectName="LLVM" targetName="RTXray.x86_64" />
      <config projectName="LLVM" targetName="check-clang-cxx-class-class.base-class.base.init" />
      <config projectName="LLVM" targetName="llvm-profdata" />
      <config projectName="LLVM" targetName="install-clang_rt.profile-i386" />
      <config projectName="LLVM" targetName="check-clang-analysis-objc" />
      <config projectName="LLVM" targetName="RTLSanCommon.i386" />
      <config projectName="LLVM" targetName="check-llvm-analysis-callgraph" />
      <config projectName="LLVM" targetName="stats" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mir-lanai" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.types-basic.fundamental" />
      <config projectName="LLVM" targetName="AArch64CommonTableGen" />
      <config projectName="LLVM" targetName="install-clang_rt.fuzzer_no_main-x86_64-stripped" />
      <config projectName="LLVM" targetName="install-LLVMXCoreDisassembler" />
      <config projectName="LLVM" targetName="llvm-objcopy" />
      <config projectName="LLVM" targetName="check-llvm-transforms-wholeprogramdevirt" />
      <config projectName="LLVM" targetName="install-LLVMGlobalISel-stripped" />
      <config projectName="LLVM" targetName="check-clang-semaobjcxx" />
      <config projectName="LLVM" targetName="LLVMBPFAsmParser" />
      <config projectName="LLVM" targetName="check-dfsan" />
      <config projectName="LLVM" targetName="check-llvm-unit" />
      <config projectName="LLVM" targetName="clang_rt.tsan-x86_64-symbols" />
      <config projectName="LLVM" targetName="check-llvm-transforms-lowerinvoke" />
      <config projectName="LLVM" targetName="install-fuzzer" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.mul" />
      <config projectName="LLVM" targetName="profile" />
      <config projectName="LLVM" targetName="check-llvm-mc-powerpc" />
      <config projectName="LLVM" targetName="install-clang_rt.scudo-i386" />
      <config projectName="LLVM" targetName="check-llvm-transforms-instnamer" />
      <config projectName="LLVM" targetName="verify-uselistorder" />
      <config projectName="LLVM" targetName="ClangRenameTests" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-vtabledump" />
      <config projectName="LLVM" targetName="install-LLVMX86AsmParser" />
      <config projectName="LLVM" targetName="llvm-ranlib" />
      <config projectName="LLVM" targetName="install-LLVMXCoreInfo" />
      <config projectName="LLVM" targetName="LLVMHexagonCodeGen" />
      <config projectName="LLVM" targetName="clang_rt.dfsan-x86_64" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.auto.ptr-auto.ptr-auto.ptr.conv" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-concept-concept.def-concept.req" />
      <config projectName="LLVM" targetName="install-clang_rt.cfi_diag-i386-stripped" />
      <config projectName="LLVM" targetName="install-ubsan" />
      <config projectName="LLVM" targetName="install-clang_rt.tsan_cxx-x86_64-stripped" />
      <config projectName="LLVM" targetName="LLVMSparcDesc" />
      <config projectName="LLVM" targetName="check-clang-cxx-lex-lex.trigraph" />
      <config projectName="LLVM" targetName="libclang-headers" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.auto.ptr-auto.ptr-auto.ptr.cons" />
      <config projectName="LLVM" targetName="ClangDiagnosticRefactoring" />
      <config projectName="LLVM" targetName="check-llvm-tools" />
      <config projectName="LLVM" targetName="install-LLVMHexagonAsmParser" />
      <config projectName="LLVM" targetName="install-verify-uselistorder-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopstrengthreduce-aarch64" />
      <config projectName="LLVM" targetName="DebugInfoDWARFTests" />
      <config projectName="LLVM" targetName="LLVMHello" />
      <config projectName="LLVM" targetName="TAsan-x86_64-calls-Noinst-Test" />
      <config projectName="LLVM" targetName="clang_rt.ubsan_standalone-x86_64-symbols" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.decls-temp.mem" />
      <config projectName="LLVM" targetName="install-LLVMRuntimeDyld" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.dcl-dcl.spec-dcl.fct.spec" />
      <config projectName="LLVM" targetName="llvm-tblgen" />
      <config projectName="LLVM" targetName="check-llvm-transforms-functionattrs" />
      <config projectName="LLVM" targetName="check-clang-cxx-lex-lex.literal-lex.literal.kinds" />
      <config projectName="LLVM" targetName="LLVMAArch64AsmPrinter" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-mt" />
      <config projectName="LLVM" targetName="clang_rt.asan-preinit-i386" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.param" />
      <config projectName="LLVM" targetName="install-LLVMMCParser" />
      <config projectName="LLVM" targetName="install-LLVMNVPTXInfo-stripped" />
      <config projectName="LLVM" targetName="CodeGenTests" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips-tailcall" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-nm" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-modextract" />
      <config projectName="LLVM" targetName="install-clang_rt.stats_client-x86_64" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips-mips64r6" />
      <config projectName="LLVM" targetName="check-clang-unit" />
      <config projectName="LLVM" targetName="install-LLVMNVPTXAsmPrinter" />
      <config projectName="LLVM" targetName="RTUbsan_minimal.i386" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopdataprefetch-powerpc" />
      <config projectName="LLVM" targetName="install-obj2yaml" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-readobj-arm" />
      <config projectName="LLVM" targetName="check-llvm-analysis-blockfrequencyinfo" />
      <config projectName="LLVM" targetName="check-llvm-analysis-dependenceanalysis" />
      <config projectName="LLVM" targetName="check-llvm-mc-x86" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopunroll-powerpc" />
      <config projectName="LLVM" targetName="check-all" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.stc-basic.stc.dynamic" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-coff" />
      <config projectName="LLVM" targetName="check-msan" />
      <config projectName="LLVM" targetName="check-llvm-objectyaml-macho" />
      <config projectName="LLVM" targetName="check-clang-cxx-special-class.cdtor" />
      <config projectName="LLVM" targetName="install-LLVMMSP430Info-stripped" />
      <config projectName="LLVM" targetName="LLVMLibDriver" />
      <config projectName="LLVM" targetName="install-clang_rt.fuzzer-x86_64-stripped" />
      <config projectName="LLVM" targetName="TAsan-i386-calls-Benchmark" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-msa" />
      <config projectName="LLVM" targetName="ClangAttrSpellingListIndex" />
      <config projectName="LLVM" targetName="check-clang-cxx-over-over.match-over.match.funcs-over.match.call-over.call.object" />
      <config projectName="LLVM" targetName="LanaiCommonTableGen" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.start" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.scope-basic.scope.namespace" />
      <config projectName="LLVM" targetName="check-llvm-object-amdgpu" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-objdump-aarch64" />
      <config projectName="LLVM" targetName="check-clang-cxx-conv" />
      <config projectName="LLVM" targetName="LTO" />
      <config projectName="LLVM" targetName="LLVMAArch64Info" />
      <config projectName="LLVM" targetName="CFIVerifyTests" />
      <config projectName="LLVM" targetName="install-LLVMObjectYAML-stripped" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-cxxfilt" />
      <config projectName="LLVM" targetName="install-LLVMSelectionDAG-stripped" />
      <config projectName="LLVM" targetName="check-clang" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.decls-temp.variadic" />
      <config projectName="LLVM" targetName="check-llvm-tools-gold" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.constrained-temp.req-temp.req.sat" />
      <config projectName="LLVM" targetName="install-LLVMBPFAsmPrinter" />
      <config projectName="LLVM" targetName="llvm-dlltool" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-mips32" />
      <config projectName="LLVM" targetName="check-llvm-analysis-typebasedaliasanalysis" />
      <config projectName="LLVM" targetName="check" />
      <config projectName="LLVM" targetName="check-llvm-transforms-globalsplit" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopdataprefetch" />
      <config projectName="LLVM" targetName="install-LLVMProfileData" />
      <config projectName="LLVM" targetName="ObjectTests" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopidiom" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.decl-dcl.init-dcl.init.string" />
      <config projectName="LLVM" targetName="install-LLVMTransformUtils" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-pdb-native" />
      <config projectName="LLVM" targetName="check-llvm-metal" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.access.dcl" />
      <config projectName="LLVM" targetName="DebugInfoMSFTests" />
      <config projectName="LLVM" targetName="install-LLVMScalarOpts-stripped" />
      <config projectName="LLVM" targetName="clang_rt.ubsan_minimal-dynamic-x86_64" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo" />
      <config projectName="LLVM" targetName="install-llc" />
      <config projectName="LLVM" targetName="LLVMVectorize" />
      <config projectName="LLVM" targetName="install-clang_rt.ubsan_minimal-i386" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-rc" />
      <config projectName="LLVM" targetName="install-lli" />
      <config projectName="LLVM" targetName="check-llvm-object-aarch64" />
      <config projectName="LLVM" targetName="install-LLVMScalarOpts" />
      <config projectName="LLVM" targetName="check-llvm-codegen-nios2" />
      <config projectName="LLVM" targetName="check-clang-cxx-class-class.name" />
      <config projectName="LLVM" targetName="install-LLVMSparcAsmPrinter" />
      <config projectName="LLVM" targetName="clang-tablegen-targets" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-dwarfdump-aarch64" />
      <config projectName="LLVM" targetName="install-LLVMARMUtils-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopdistribute" />
      <config projectName="LLVM" targetName="install-clang_rt.profile-i386-stripped" />
      <config projectName="LLVM" targetName="RTUbsan_standalone.x86_64" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.decl-dcl.meaning-dcl.fct-dcl.fct.def.default" />
      <config projectName="LLVM" targetName="LLVMSparcAsmPrinter" />
      <config projectName="LLVM" targetName="msan" />
      <config projectName="LLVM" targetName="check-clang-cxx-cpp-cpp.pragma" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.str.strstreams-depr.istrstream" />
      <config projectName="LLVM" targetName="install-LLVMPowerPCAsmPrinter" />
      <config projectName="LLVM" targetName="install-LLVMAsmParser-stripped" />
      <config projectName="LLVM" targetName="install-clang_rt.asan-dynamic-i386-stripped" />
      <config projectName="LLVM" targetName="clang_rt.lsan-x86_64" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.decl-dcl.ambig.res" />
      <config projectName="LLVM" targetName="install-clang-stripped" />
      <config projectName="LLVM" targetName="ClangUnitTests" />
      <config projectName="LLVM" targetName="check-clang-cxx-intro-intro.structure" />
      <config projectName="LLVM" targetName="check-clang-cxx-stmt.stmt-stmt.jump-stmt.goto" />
      <config projectName="LLVM" targetName="RTInterception.test.i386" />
      <config projectName="LLVM" targetName="LLVMNVPTXInfo" />
      <config projectName="LLVM" targetName="check-clang-import-struct-layout" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.decls-temp.class-temp.mem.enum" />
      <config projectName="LLVM" targetName="check-llvm-codegen-aarch64-globalisel" />
      <config projectName="LLVM" targetName="install-llvm-dwp" />
      <config projectName="LLVM" targetName="LLVMDebugInfoDWARF" />
      <config projectName="LLVM" targetName="RTSanitizerCommonLibc.x86_64" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-lanai" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation-instrprofiling" />
      <config projectName="LLVM" targetName="check-llvm-transforms-deadargelim" />
      <config projectName="LLVM" targetName="install-llvm-objcopy-stripped" />
      <config projectName="LLVM" targetName="LLVMRuntimeDyld" />
      <config projectName="LLVM" targetName="check-clang-cxx-over-over.match-over.match.funcs-over.match.conv" />
      <config projectName="LLVM" targetName="check-clang-fixit" />
      <config projectName="LLVM" targetName="TXRayFDRLoggingTest-x86_64-Test" />
      <config projectName="LLVM" targetName="lli-child-target" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-mips64" />
      <config projectName="LLVM" targetName="libclangTests" />
      <config projectName="LLVM" targetName="install-LLVMHexagonDesc-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.decls-temp.class-temp.static" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.scope-basic.scope.local" />
      <config projectName="LLVM" targetName="install-LLVMMipsInfo-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-lex-lex.literal-lex.string" />
      <config projectName="LLVM" targetName="check-clang-astmerge-enum" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-concept-concept.def-concept.fct" />
      <config projectName="LLVM" targetName="install-LLVMMCDisassembler-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-separateconstoffsetfromgep-nvptx" />
      <config projectName="LLVM" targetName="check-clang-cxx-class-class.nest" />
      <config projectName="LLVM" targetName="LLVMHexagonDisassembler" />
      <config projectName="LLVM" targetName="SanitizerUnitTests" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.spec-temp.expl.spec" />
      <config projectName="LLVM" targetName="IPOTests" />
      <config projectName="LLVM" targetName="install-profile" />
      <config projectName="LLVM" targetName="check-llvm-transforms-straightlinestrengthreduce-nvptx" />
      <config projectName="LLVM" targetName="TInterception-x86_64-Test" />
      <config projectName="LLVM" targetName="install-clang_rt.builtins-i386" />
      <config projectName="LLVM" targetName="LLVMX86AsmParser" />
      <config projectName="LLVM" targetName="check-llvm-mc" />
      <config projectName="LLVM" targetName="install-LLVMSparcDesc-stripped" />
      <config projectName="LLVM" targetName="install-llvm-headers" />
      <config projectName="LLVM" targetName="install-LLVMDebugInfoPDB" />
      <config projectName="LLVM" targetName="install-LLVMARMAsmPrinter-stripped" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-lto2" />
      <config projectName="LLVM" targetName="install-llvm-readelf-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-lex-lex.operators" />
      <config projectName="LLVM" targetName="install-llvm-as" />
      <config projectName="LLVM" targetName="install-cmake-exports" />
      <config projectName="LLVM" targetName="install-llvm-ar" />
      <config projectName="LLVM" targetName="install-clang_rt.stats-x86_64-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-except-except.throw" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.lib.binders-depr.lib.binder.1st" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-xcore" />
      <config projectName="LLVM" targetName="install-LLVMARMDisassembler-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-straightlinestrengthreduce" />
      <config projectName="LLVM" targetName="check-clang-astmerge-anonymous-fields" />
      <config projectName="LLVM" targetName="install-LLVMAArch64CodeGen-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-adce" />
      <config projectName="LLVM" targetName="llvm-c-test" />
      <config projectName="LLVM" targetName="clang_rt.tsan_cxx-x86_64" />
      <config projectName="LLVM" targetName="install-LLVMMipsDisassembler" />
      <config projectName="LLVM" targetName="install-LLVMX86AsmParser-stripped" />
      <config projectName="LLVM" targetName="install-bugpoint" />
      <config projectName="LLVM" targetName="check-clang-cxx-class.access-class.access.dcl" />
      <config projectName="LLVM" targetName="check-clang-index-skip-parsed-bodies" />
      <config projectName="LLVM" targetName="LLVMARMDesc" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation-threadsanitizer" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.arg-temp.arg.type" />
      <config projectName="LLVM" targetName="check-clang-astmerge-class-template-partial-spec" />
      <config projectName="LLVM" targetName="llvm-readobj" />
      <config projectName="LLVM" targetName="install-LLVMBPFDesc" />
      <config projectName="LLVM" targetName="check-llvm-transforms-slpvectorizer-arm" />
      <config projectName="LLVM" targetName="install-llvm-cvtres-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-intro-intro.defs" />
      <config projectName="LLVM" targetName="check-llvm-transforms-pruneeh" />
      <config projectName="LLVM" targetName="check-clang-analysis-engine" />
      <config projectName="LLVM" targetName="check-llvm-codegen-arc" />
      <config projectName="LLVM" targetName="check-llvm-tablegen" />
      <config projectName="LLVM" targetName="LLVMInterpreter" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips-micromips-sizereduction" />
      <config projectName="LLVM" targetName="obj2yaml" />
      <config projectName="LLVM" targetName="check-clang-cxx-intro-intro.defs-defns.argument" />
      <config projectName="LLVM" targetName="check-llvm-codegen-arm" />
      <config projectName="LLVM" targetName="install-clang_rt.asan_cxx-x86_64-stripped" />
      <config projectName="LLVM" targetName="check-llvm-codegen-avr-calling-conv" />
      <config projectName="LLVM" targetName="check-llvm-mc-arm" />
      <config projectName="LLVM" targetName="install-llvm-pdbutil" />
      <config projectName="LLVM" targetName="LLVMMipsAsmParser" />
      <config projectName="LLVM" targetName="install-llvm-rtdyld" />
      <config projectName="LLVM" targetName="LLVMHexagonAsmParser" />
      <config projectName="LLVM" targetName="check-clang-cxx-cpp" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-concept-concept.def" />
      <config projectName="LLVM" targetName="check-clang-rewriter" />
      <config projectName="LLVM" targetName="check-clang-cxx-lex-lex.name" />
      <config projectName="LLVM" targetName="clang-format" />
      <config projectName="LLVM" targetName="LLVMBitWriter" />
      <config projectName="LLVM" targetName="check-clang-cxx-over-over.match-over.match.best" />
      <config projectName="LLVM" targetName="SupportTests" />
      <config projectName="LLVM" targetName="RTLSanCommon.x86_64" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr" />
      <config projectName="LLVM" targetName="check-clang-cxx-except-except.special-except.unexpected" />
      <config projectName="LLVM" targetName="clang_rt.scudo-i386" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.res-temp.nondep" />
      <config projectName="LLVM" targetName="check-cfi-and-supported" />
      <config projectName="LLVM" targetName="XRayTests" />
      <config projectName="LLVM" targetName="install-LLVMMCJIT-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopvectorize-systemz" />
      <config projectName="LLVM" targetName="clang-test-depends" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-sparc" />
      <config projectName="LLVM" targetName="check-clang-cxx-conv-conv.fpprom" />
      <config projectName="LLVM" targetName="install-stats" />
      <config projectName="LLVM" targetName="check-llvm-transforms-instcombine-aarch64" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.post-expr.sub" />
      <config projectName="LLVM" targetName="install-clang_rt.lsan-i386" />
      <config projectName="LLVM" targetName="OrcJITTests" />
      <config projectName="LLVM" targetName="ClangAttrPCHWrite" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-cvtres" />
      <config projectName="LLVM" targetName="check-clang-cxx-over-over.oper-over.ref" />
      <config projectName="LLVM" targetName="LLVMHexagonDesc" />
      <config projectName="LLVM" targetName="TAsan-x86_64-inline-Benchmark" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.decls-temp.fct-temp.over.link" />
      <config projectName="LLVM" targetName="check-clang-cxx-class.access-class.paths" />
      <config projectName="LLVM" targetName="check-llvm-transforms-inline-amdgpu" />
      <config projectName="LLVM" targetName="install-clang_rt.scudo-x86_64" />
      <config projectName="LLVM" targetName="LLVMTransformUtils" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-systemz" />
      <config projectName="LLVM" targetName="RTSanitizerCommon.test.x86_64" />
      <config projectName="LLVM" targetName="clang_rt.safestack-x86_64" />
      <config projectName="LLVM" targetName="install-LLVMMSP430Info" />
      <config projectName="LLVM" targetName="ClangDeclNodes" />
      <config projectName="LLVM" targetName="check-clang-cxx-intro-intro.defs-defns.unspecified" />
      <config projectName="LLVM" targetName="Fibonacci" />
      <config projectName="LLVM" targetName="install-LLVMFuzzMutate-stripped" />
      <config projectName="LLVM" targetName="check-llvm-tools-obj2yaml" />
      <config projectName="LLVM" targetName="check-clang-cxx-special-class.conv" />
      <config projectName="LLVM" targetName="check-llvm-transforms-inferaddressspaces-amdgpu" />
      <config projectName="LLVM" targetName="install-LTO-stripped" />
      <config projectName="LLVM" targetName="check-llvm-analysis-dominancefrontier" />
      <config projectName="LLVM" targetName="install-clang_rt.safestack-i386-stripped" />
      <config projectName="LLVM" targetName="SanitizerLintCheck" />
      <config projectName="LLVM" targetName="check-clang-cxx-class.access-class.access.base" />
      <config projectName="LLVM" targetName="check-clang-cxx-stmt.stmt-stmt.iter-stmt.ranged" />
      <config projectName="LLVM" targetName="install-llvm-split" />
      <config projectName="LLVM" targetName="install-dd-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-lex" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation-memorysanitizer-mips" />
      <config projectName="LLVM" targetName="install-LLVMAArch64Utils-stripped" />
      <config projectName="LLVM" targetName="check-llvm-mc-avr" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-dsp" />
      <config projectName="LLVM" targetName="check-llvm-codegen-avr" />
      <config projectName="LLVM" targetName="check-clang-index-usr" />
      <config projectName="LLVM" targetName="install-LLVMMipsInfo" />
      <config projectName="LLVM" targetName="check-clang-cxx-lex-lex.key" />
      <config projectName="LLVM" targetName="TTsanUnitTest" />
      <config projectName="LLVM" targetName="check-clang-cxx-class-class.friend" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.decl-dcl.meaning-dcl.ptr" />
      <config projectName="LLVM" targetName="clang_rt.fuzzer-x86_64" />
      <config projectName="LLVM" targetName="install-llvm-link" />
      <config projectName="LLVM" targetName="check-llvm-codegen-wineh" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-micromips-dspr2" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-micromips-dspr3" />
      <config projectName="LLVM" targetName="install-llvm-size" />
      <config projectName="LLVM" targetName="install-msan-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-over-over.oper-over.call" />
      <config projectName="LLVM" targetName="install-LLVMAArch64Info-stripped" />
      <config projectName="LLVM" targetName="check-clang-cxx-temp-temp.res-temp.dep.res" />
      <config projectName="LLVM" targetName="check-llvm-transforms-util-predicateinfo" />
      <config projectName="LLVM" targetName="install-LLVMObjCARCOpts" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-pdbdump" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.align" />
      <config projectName="LLVM" targetName="RTAsan.x86_64" />
      <config projectName="LLVM" targetName="check-clang-cxx-expr-expr.unary" />
      <config projectName="LLVM" targetName="check-clang-cxx-basic-basic.lookup-basic.lookup.udir" />
      <config projectName="LLVM" targetName="check-clang-cxx-special-class.copy" />
      <config projectName="LLVM" targetName="install-LLVMARMInfo" />
      <config projectName="LLVM" targetName="LLVMPowerPCDesc" />
      <config projectName="LLVM" targetName="LLVMNVPTXAsmPrinter" />
      <config projectName="LLVM" targetName="clangFrontend" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.dcl-dcl.attr-dcl.attr.grammar" />
      <config projectName="LLVM" targetName="install-LLVMVectorize-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-scalarrepl" />
      <config projectName="LLVM" targetName="check-llvm-transforms-correlatedvaluepropagation" />
      <config projectName="LLVM" targetName="check-clang-cxx-dcl.dcl-dcl.spec-dcl.stc" />
      <config projectName="LLVM" targetName="install-llvm-cvtres" />
      <config projectName="LLVM" targetName="clang_rt.scudo_cxx-i386" />
      <config projectName="LLVM" targetName="check-clang-codegenobjcxx" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-dwp-x86" />
      <config projectName="LLVM" targetName="check-clang-cxx-depr-depr.str.strstreams-depr.strstreambuf-depr.strstreambuf.cons" />
      <config projectName="LLVM" targetName="check-llvm-transforms-partiallyinlinelibcalls-x86" />
      <config projectName="LLVM" targetName="install-LLVMHexagonAsmParser-stripped" />
      <config projectName="LLVM" targetName="LLVMPowerPCDisassembler" />
      <config projectName="LLVM" targetName="check-llvm-analysis-costmodel-systemz" />
      <config projectName="LLVM" targetName="TAsan-i386-calls-Noinst-Test" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loadstorevectorizer" />
      <config projectName="LLVM" targetName="install-llvm-strings-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-structurizecfg-amdgpu" />
      <config projectName="LLVM" targetName="ExecutionEngineTests" />
    </generated>
  </component>
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="Debug" ENABLED="true" CONFIG_NAME="Debug" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="0dfd0955-631a-49f2-996b-b3dbfdc2efba" name="Changes" comment="Changes">
      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/cache-v2-baad5452cbe22e9b856a.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/cmakeFiles-v1-bfc2eb992b7cba426400.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/codemodel-v2-44d563e2d804500c7485.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/index-2024-04-22T13-40-45-0767.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-AArch64Tests-Debug-f058847071e84d19e53e.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-ADTTests-Debug-143fe3225760fff26417.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-ASTMatchersTests-Debug-a7f35287d276ee3897b7.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-ASTTests-Debug-3defe45dc61795a4e0de.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-AnalysisTests-Debug-8b8e6f2ef37c14b601dc.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-AnnotateFunctions-Debug-d0fc8012670cba80e754.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-AsmParserTests-Debug-8343557d4d42698e62ac.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-BasicTests-Debug-9f746bee4577abc9ec78.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-BinaryFormatTests-Debug-7e4aae2e4f8cefc03c90.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-BitcodeTests-Debug-6ed1a751b05fd3df7733.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-BrainF-Debug-6c3e3704587be7644810.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-BugpointPasses-Debug-869d47cac469eb6ea0a7.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-BuildingAJIT-Ch1-Debug-fd3b41b64a3fd1c7089c.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-BuildingAJIT-Ch2-Debug-b857a3e8b08daf96aa51.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-BuildingAJIT-Ch3-Debug-c203f1b4fed218e7063c.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-BuildingAJIT-Ch4-Debug-a5bd9044564575d18d8d.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-BuildingAJIT-Ch5-Debug-ac4726cf7b4c3beaefbe.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-BuildingAJIT-Ch5-Server-Debug-f1287a54c1ba3491ed1d.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-CFIVerifyTests-Debug-e851f8cb2d369a786f9c.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-ClangAnalysisTests-Debug-cf8f9d3cbb9dda24d9f0.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-ClangCodeGenTests-Debug-3fb38fe5378762d675d4.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-ClangDriverTests-Debug-8d7956fe1219d61ee7ee.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-ClangRenameTests-Debug-e124f805339f616fd0dd.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-CodeGenTests-Debug-feb0f82e167545b27cea.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-CrossTUTests-Debug-63f130e3d9cf6d48d51b.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-DebugInfoCodeViewTests-Debug-a05469ccf3668b073c2b.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-DebugInfoDWARFTests-Debug-0513e6e7ce3d8b3033e9.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-DebugInfoMSFTests-Debug-1cb12a31b0a513951844.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-DebugInfoPDBTests-Debug-4e572cc7d9a0fcbf2cda.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-DynamicASTMatchersTests-Debug-4cb646e6bc0e5ee26f58.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-DynamicLibraryLib-Debug-fc9380d4aee3963e1bb6.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-DynamicLibraryTests-Debug-1b6e2469a607216b4b96.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-ExecutionEngineTests-Debug-31d6806ca418b29b9ed8.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-Fibonacci-Debug-5a3cc4eaca9aef341686.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-FileCheck-Debug-12477f7c00c274326b23.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-FormatTests-Debug-c45f012e7269ced2e283.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-FrontendTests-Debug-fbcf18b123207d52740d.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-FuzzMutateTests-Debug-a280c41e29490b8d6ceb.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-GlobalISelTests-Debug-0e42b0ca3839ba8bca27.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-HowToUseJIT-Debug-28655186fbb4546b4301.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-IPOTests-Debug-fd13b479c7beab0ec537.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-IRTests-Debug-8eae011a640505471638.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-Kaleidoscope-Ch2-Debug-01aaac7ed0c88b990028.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-Kaleidoscope-Ch3-Debug-d066eb1167699941f825.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-Kaleidoscope-Ch4-Debug-5d6c6b71a99a1fc1af26.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-Kaleidoscope-Ch5-Debug-a9129a8af8928bd76403.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-Kaleidoscope-Ch6-Debug-0a24343b2a477c817b8f.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-Kaleidoscope-Ch7-Debug-7878982f38fece5098ac.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-Kaleidoscope-Ch8-Debug-251594d8a63e77ee97f8.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-Kaleidoscope-Ch9-Debug-6c023dbbc06c9624eac5.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMAArch64AsmParser-Debug-363917466fc0be855d59.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMAArch64AsmPrinter-Debug-5392bbe5fcd32d028b9c.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMAArch64CodeGen-Debug-4db7c6ab8589910f474f.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMAArch64Desc-Debug-940f04fdfb834c1d0271.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMAArch64Disassembler-Debug-5ffcc2f19c8fe2d37453.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMAArch64Info-Debug-4133d5e31a0ad2a8ae43.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMAArch64Utils-Debug-b38cd0db3e952109a606.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMAMDGPUAsmParser-Debug-39bdef1d5261821749d0.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMAMDGPUAsmPrinter-Debug-21f549dd6726369dbbe1.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMAMDGPUCodeGen-Debug-0623a064a9da92c33035.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMAMDGPUDesc-Debug-45c5bb9f5e853f720dca.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMAMDGPUDisassembler-Debug-baffc302a1e9ebb74891.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMAMDGPUInfo-Debug-bf5a7a0f5cecdd98f7b0.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMAMDGPUUtils-Debug-557a729aae46588087df.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMARMAsmParser-Debug-786785c4f0de1ab8f7ea.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMARMAsmPrinter-Debug-2736ec430d2cbbcac6b1.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMARMCodeGen-Debug-94f03dfa9e51fd106b66.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMARMDesc-Debug-55031dc6e916012c42c9.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMARMDisassembler-Debug-160f68b0680ced5610b4.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMARMInfo-Debug-681624939a3ce0ec15cb.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMARMUtils-Debug-d23ae58943cdb216971b.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMAnalysis-Debug-de45d95e16b39a69c50b.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMAsmParser-Debug-4677a045ca7f0b3df494.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMAsmPrinter-Debug-07b7b6984bdad810e3ec.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMBPFAsmParser-Debug-be5e01b94985322f9660.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMBPFAsmPrinter-Debug-d0fd976608f60997d4e7.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMBPFCodeGen-Debug-c1b3092e8ce25ef01188.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMBPFDesc-Debug-56105905471539787b63.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMBPFDisassembler-Debug-adf7630f915110f010d0.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMBPFInfo-Debug-f1116bfb97b13a860865.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMBinaryFormat-Debug-2272e9117023a60268b0.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMBitReader-Debug-14936185785dfc08854d.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMBitWriter-Debug-8f49358a8b8e998e0de1.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMCFIVerify-Debug-3afdbfe31a2a9c6ffc00.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMCodeGen-Debug-711ab48505ab703d9d87.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMCore-Debug-db9349665681854e7324.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMCoroutines-Debug-e64c582b03f01f82f530.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMCoverage-Debug-02643622d8b05acf6fdc.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMDebugInfoCodeView-Debug-cb8330c2f751b24b03b8.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMDebugInfoDWARF-Debug-7ad0bad0cd0430c6c3dd.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMDebugInfoMSF-Debug-7f65108a8840cb797c06.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMDebugInfoPDB-Debug-f25e6b7621dd1745317c.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMDemangle-Debug-179578d924bb74822b1f.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMDlltoolDriver-Debug-73ddf1d61ef578826598.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMExecutionEngine-Debug-4ba7d2c703ebee9fdbec.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMFuzzMutate-Debug-5bdfd839e10bc78ae6d9.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMGlobalISel-Debug-390a4dd6e596b493ac94.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMHello-Debug-b973475afaa9462b91f2.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMHexagonAsmParser-Debug-0635b14be50554339a10.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMHexagonCodeGen-Debug-ab9e68163101975610fd.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMHexagonDesc-Debug-84eafd4361547ba2f796.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMHexagonDisassembler-Debug-83b8bf03c66a0cdbf309.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMHexagonInfo-Debug-6b0a3c9feff0ff8d348d.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMIRReader-Debug-0159345bf5fe9a9de988.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMInstCombine-Debug-0e94166c902818f92d2b.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMInstrumentation-Debug-885e34f439346819b699.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMInterpreter-Debug-9e6a944465c77c314050.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMLTO-Debug-b63c878f070bc64f7ddf.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMLanaiAsmParser-Debug-a94dcb87f833caf83a92.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMLanaiAsmPrinter-Debug-4e054e34e0175f18ded1.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMLanaiCodeGen-Debug-3d4985dff117c61da1ac.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMLanaiDesc-Debug-49e11111a5a0ce193d65.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMLanaiDisassembler-Debug-0f16eff7cdac640b1ef9.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMLanaiInfo-Debug-0327f66935282e14ccd6.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMLibDriver-Debug-2bdd4ab14d90b53fbaff.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMLineEditor-Debug-5cb2b3142059c1fedcec.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMLinker-Debug-41023357c3c85204443b.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMMC-Debug-5327cdf5db73be2f112d.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMMCDisassembler-Debug-da6bccdfaafaf485750e.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMMCJIT-Debug-37ee4e742917d9412a72.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMMCParser-Debug-248836c688481327042c.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMMIRParser-Debug-a12238f92d986b5c1e94.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMMSP430AsmPrinter-Debug-d639d9fedf1d44e0fae8.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMMSP430CodeGen-Debug-1e346f5fdc286774629a.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMMSP430Desc-Debug-d38387fea0635f8b9ea1.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMMSP430Info-Debug-47e8ca0a15bddb4e68f2.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMMipsAsmParser-Debug-28cfbfd5beee5a67f529.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMMipsAsmPrinter-Debug-a03ec8be7e40be12430f.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMMipsCodeGen-Debug-642b6770153bcb2c6bdf.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMMipsDesc-Debug-172c25336e2272c9ebe6.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMMipsDisassembler-Debug-d16257580adf1b83a571.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMMipsInfo-Debug-e771d17af81fbfc11433.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMNVPTXAsmPrinter-Debug-c73972246f3591b15789.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMNVPTXCodeGen-Debug-71cbb849d69b4a45e920.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMNVPTXDesc-Debug-ef9ddea04805a9b2bb67.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMNVPTXInfo-Debug-3d683118526ee392081c.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMObjCARCOpts-Debug-471bc91175623be2101a.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMObject-Debug-c6387603e9846bca95e1.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMObjectYAML-Debug-1dbb0653f2f7f3006461.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMOption-Debug-3d2f1561f5fe3f17cdca.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMOrcJIT-Debug-2a703c6b96d92ca93714.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMPasses-Debug-9eb37818c167146055d3.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMPowerPCAsmParser-Debug-bbdc7ef8a2643a201127.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMPowerPCAsmPrinter-Debug-2fee610a047c8a6b8c47.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMPowerPCCodeGen-Debug-246c2c529db69b15ebbf.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMPowerPCDesc-Debug-5cd7075f08596e082695.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMPowerPCDisassembler-Debug-2a1f4faa417c1d693e14.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMPowerPCInfo-Debug-709b66875ac1690dc061.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMProfileData-Debug-8e8e023c8e49201423f0.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMRuntimeDyld-Debug-94bdd06525a00fbb04d0.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMScalarOpts-Debug-4f9166cdc6f37162de07.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMSelectionDAG-Debug-975a25192e75b5b9e170.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMSparcAsmParser-Debug-c14547a1b8bc99e5e259.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMSparcAsmPrinter-Debug-ba063168352bf5f04f9b.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMSparcCodeGen-Debug-a52f3d76808ae3191239.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMSparcDesc-Debug-558775c9c31ae0ceda24.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMSparcDisassembler-Debug-b5c359defedce7d0b6bf.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMSparcInfo-Debug-eaca720a5efd2a978e42.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMSupport-Debug-4c9a207056656f3a4e5b.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMSymbolize-Debug-908e7f9c7d284e7eb422.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMSystemZAsmParser-Debug-6a66f2da27b5355c9b16.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMSystemZAsmPrinter-Debug-77ae6b5884a0ea9a088f.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMSystemZCodeGen-Debug-87222a3d8b683f76b7ec.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMSystemZDesc-Debug-89dfce0a4b5e480bbd69.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMSystemZDisassembler-Debug-c17cfb10392bfd37b0d4.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMSystemZInfo-Debug-ecdc77ba8c6c362d081e.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMTableGen-Debug-4dadd1c1c54ef660de0d.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMTarget-Debug-99eee8d2d470ad17966b.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMTestingSupport-Debug-20d03cfe6b1156d67845.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMTransformUtils-Debug-4a56d4be710152952275.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMVectorize-Debug-6d0899f072b8ae719ade.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMWindowsManifest-Debug-3ecab7d3a83ef1f43296.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMX86AsmParser-Debug-d0a589b745d1d19a8acd.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMX86AsmPrinter-Debug-1d4db5091ff1cf49f878.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMX86CodeGen-Debug-8e2cd9ebb9a24d300454.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMX86Desc-Debug-76abf0cc39f95f705645.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMX86Disassembler-Debug-ff87377fc2f80d865727.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMX86Info-Debug-ebdaa5509b6af16c0e11.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMX86Utils-Debug-7b1ade9a4c42649b2343.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMXCoreAsmPrinter-Debug-88a95fc71a0a662af00e.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMXCoreCodeGen-Debug-12a2232bde5c4e641c81.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMXCoreDesc-Debug-b103e64fcdfaf7562cfc.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMXCoreDisassembler-Debug-a1c3bc4a09a87eacd78e.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMXCoreInfo-Debug-a52c11fe627dbb19da49.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMXRay-Debug-f5f482c11f99cf4f6e9b.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LLVMipo-Debug-268e4568ab460dfddff6.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LTO-Debug-6dbf759df5bdaec06f93.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LexTests-Debug-5791fc2708226d4565c2.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LineEditorTests-Debug-f10ff5919ef488f6d513.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-LinkerTests-Debug-2fde050ad6052e9ff1d9.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-MCJITTests-Debug-4d0518b39f1e73d87ceb.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-MCTests-Debug-9c4c0f54514bb03f25c2.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-MITests-Debug-068da22db41935dcb8d4.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-ModuleMaker-Debug-31a04f2570a68843e115.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-ObjectTests-Debug-0f61f2ebee08b617ad7a.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-ObjectYAMLTests-Debug-c2ea27f0b26e43dd2509.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-OptionTests-Debug-95f21afb24415ee651b2.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-OrcJITTests-Debug-45505c8784274399921f.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-ParallelJIT-Debug-5592d914a9dee00d5f5a.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-PipSqueak-Debug-12389a1afb47f3f7772f.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-PrintFunctionNames-Debug-6cac0c17e92939884cfd.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-ProfileDataTests-Debug-8833d24d3653c6c9b724.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTAsan.i386-Debug-8dc88fd2f9761b4137d0.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTAsan.x86_64-Debug-b4e1a3945aab096f752c.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTAsan_cxx.i386-Debug-4a10f0be7822a186dc57.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTAsan_cxx.x86_64-Debug-4b0dec10bdfda8d3e1ff.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTAsan_dynamic.i386-Debug-e32f900e9a2729657eb1.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTAsan_dynamic.x86_64-Debug-5e4e2d9aba51dcf1cafa.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTAsan_dynamic_version_script_dummy.i386-Debug-1398c5cfd2f95040b95a.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTAsan_dynamic_version_script_dummy.x86_64-Debug-2a7507aedef1e050c863.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTAsan_preinit.i386-Debug-a82f03585defc18b6437.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTAsan_preinit.x86_64-Debug-c05dbb6f82e24c6df036.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTDD.x86_64-Debug-09858ddde64d41d8e63b.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTInterception.i386-Debug-62e85750fe7c1c67adcd.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTInterception.x86_64-Debug-9d126f15bc8d48a07b6d.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTLSanCommon.i386-Debug-b34c5aa28147219fa230.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTLSanCommon.x86_64-Debug-6709bce99708f578d063.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTSanitizerCommon.i386-Debug-52cf74a65dd3e0faaaad.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTSanitizerCommon.x86_64-Debug-62bfea25ec1e40f50238.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTSanitizerCommonLibc.i386-Debug-442306bd5939573ff085.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTSanitizerCommonLibc.x86_64-Debug-a318431768f49fc3d6a6.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTSanitizerCommonLibcNoHooks.i386-Debug-c7ed545cf3b38c75c6a4.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTSanitizerCommonLibcNoHooks.x86_64-Debug-87da133c7497a0dd7411.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTSanitizerCommonNoHooks.i386-Debug-d3c93de177b74c92062e.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTSanitizerCommonNoHooks.x86_64-Debug-23aacb5edc0768cc1704.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTSanitizerCommonNoLibc.i386-Debug-4a1392b46dce60d0c141.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTSanitizerCommonNoLibc.x86_64-Debug-5e94817799ab431b8c2a.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTSanitizerCommonNoTermination.i386-Debug-da0ec1da9232b627e1b0.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTSanitizerCommonNoTermination.x86_64-Debug-61accec073b8f17aeb85.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTUbsan.i386-Debug-2e92a2873f6f495a793e.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTUbsan.x86_64-Debug-77a6b4002779b392bf0a.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTUbsan_cxx.i386-Debug-e9e145b1698ff8236410.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTUbsan_cxx.x86_64-Debug-b048e128628019d4c23f.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTUbsan_minimal.i386-Debug-039ae8b252aa94ca5203.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTUbsan_minimal.x86_64-Debug-5dc1244a36214651eb48.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTUbsan_standalone.i386-Debug-b1224bfe8b181f4a1cbe.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTUbsan_standalone.x86_64-Debug-a7ae94e8c2eee7e7e558.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTXray.x86_64-Debug-ed152e6f4c856738dae6.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTfuzzer.x86_64-Debug-49ed73c1d8bf71f9cef7.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RTfuzzer_main.x86_64-Debug-14f9ecf3debb4356ee11.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-RewriteTests-Debug-4b7442bf410bbbfdc81c.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-SampleAnalyzerPlugin-Debug-c70f57d4bb044c35037d.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-ScalarTests-Debug-cb0d8c3d2a67e4fe1a1d.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-SecondLib-Debug-0689a61390672d90b151.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-SemaTests-Debug-e1d4b42a7a86e302119a.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-StaticAnalysisTests-Debug-c30371e3012a3e611cf2.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-SupportTests-Debug-6e7eb05fc8527c726914.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-ToolingTests-Debug-b00c1af3b51b1434d8e1.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-UtilsTests-Debug-d53bd41e92b80625a07f.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-XRayTests-Debug-a86e2cdb4451b296c0e9.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-arcmt-test-Debug-f6ddb10ef4c68b976523.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-bugpoint-Debug-0b14158f157a2853aa2f.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-c-arcmt-test-Debug-dba3f5327c73e3118a01.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-c-index-test-Debug-5a0482716612bf03d948.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang-Debug-992a22029d433676e738.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang-check-Debug-2ce3fd6ef86b529b94cc.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang-diff-Debug-2858de7d8d1452e5b81d.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang-format-Debug-cf6f34c0d4b689fbcd26.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang-func-mapping-Debug-e3a7d4c34c31a378ceb9.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang-fuzzer-Debug-fa805679b861916046df.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang-import-test-Debug-e4468628929634dafbd4.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang-interpreter-Debug-f4dddb2d4c0720923287.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang-offload-bundler-Debug-87461f290f497d0b0aba.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang-refactor-Debug-0e44e52e390fa1e2dd04.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang-rename-Debug-9cc0b2e4a5759dc59a59.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang-tblgen-Debug-d7bef963691f8fae07e5.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clangARCMigrate-Debug-a24a0a7874adcf57e7ff.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clangAST-Debug-ff4ee2a2b89248982386.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clangASTMatchers-Debug-7c2893f4cff1167977de.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clangAnalysis-Debug-487d82cb1ddeeb8e1c48.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clangBasic-Debug-a52b5bb68a544304cd83.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clangCodeGen-Debug-4c7557797d21caa30d84.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clangCrossTU-Debug-0f3a7d4d2f8e820c599b.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clangDriver-Debug-ce136dc4c48e96f7a0f9.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clangDynamicASTMatchers-Debug-ea9c6de110af387c756a.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clangEdit-Debug-09f529ff8d09adf4a0bc.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clangFormat-Debug-88610f8ad40eeda61ce7.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clangFrontend-Debug-b2b8978a80f847af5a0f.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clangFrontendTool-Debug-65758b163eced1132797.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clangHandleCXX-Debug-b91de602e02962072c6c.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clangIndex-Debug-6bbcf9adaa15d97bdf55.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clangLex-Debug-fcae11773ec48100df09.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clangParse-Debug-6dd76513726991b426c3.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clangRewrite-Debug-e5411c9ecb1a42b6fdcf.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clangRewriteFrontend-Debug-b9a58eac7a8910cb06a5.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clangSema-Debug-f24426497f7d930ad64b.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clangSerialization-Debug-b8f4e446ada1a3e8e57b.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clangStaticAnalyzerCheckers-Debug-2d957bc27040df172d27.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clangStaticAnalyzerCore-Debug-5d7214f5239a2e8df33b.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clangStaticAnalyzerFrontend-Debug-658674455220112c10e6.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clangTooling-Debug-4165e7c106df138e2100.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clangToolingASTDiff-Debug-350d825a5ba489adaf7f.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clangToolingCore-Debug-e6f1c377d38f204d2aeb.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clangToolingRefactor-Debug-86fbb0d466f23a1e88e5.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang_rt.asan-dynamic-i386-Debug-68539046be2c4e29a8b9.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang_rt.asan-dynamic-x86_64-Debug-bb68e7173cb7a65d8a90.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang_rt.builtins-i386-Debug-2bad45a05900be705c0e.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang_rt.builtins-x86_64-Debug-ba3c30d1fd9404423ca9.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang_rt.cfi-i386-Debug-7abcca8fb8441a66a4af.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang_rt.cfi-x86_64-Debug-d95739a39a51ef816ca6.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang_rt.cfi_diag-i386-Debug-c3253ed5ff3b6dc1cda9.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang_rt.cfi_diag-x86_64-Debug-e42d3dfaaacb5193dd29.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang_rt.dd-x86_64-Debug-97fcf487b3bb0ab3d963.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang_rt.dfsan-x86_64-Debug-7b7e5c07fa8f84578ba2.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang_rt.esan-x86_64-Debug-9d043fc521f2850547ce.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang_rt.lsan-i386-Debug-c14e8964d5508949a09e.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang_rt.lsan-x86_64-Debug-175672bb35fff0fbe66d.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang_rt.msan-x86_64-Debug-7f5a9ff1aebb6f477e14.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang_rt.msan_cxx-x86_64-Debug-edf23e3546896c7d5b46.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang_rt.profile-i386-Debug-e0005338b7be22d91133.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang_rt.profile-x86_64-Debug-ed66e9ed7d412771d568.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang_rt.safestack-i386-Debug-7ca6cacc1a1243ebec0b.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang_rt.safestack-x86_64-Debug-cbcdfb60b422c71649b6.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang_rt.scudo-dynamic-i386-Debug-2446c8f99af8ec30a2cb.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang_rt.scudo-dynamic-x86_64-Debug-391abf1dc8dd55ccebca.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang_rt.scudo-i386-Debug-dfd25ee7a3479ed2f9a6.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang_rt.scudo-x86_64-Debug-eedcf594877c41c2adc5.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang_rt.scudo_cxx-i386-Debug-bf25a3b031d26e46562d.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang_rt.scudo_cxx-x86_64-Debug-d3528da99b120764ff19.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang_rt.stats-i386-Debug-48975a74f5f6b4a9ec31.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang_rt.stats-x86_64-Debug-33dac161eb173e416f50.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang_rt.stats_client-i386-Debug-0829aaf2ddbe6d91108e.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang_rt.stats_client-x86_64-Debug-38a586e928790291805d.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang_rt.tsan-x86_64-Debug-b3166716ff15b717c934.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang_rt.tsan_cxx-x86_64-Debug-268bb399c2ff1922049c.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-clang_rt.xray-x86_64-Debug-2c5aa03072b21399ef39.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-count-Debug-03fa9283800ab7209efa.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-diagtool-Debug-f9ef360f686af15c3d33.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-gtest-Debug-00d926c5cf8d4649a950.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-gtest_main-Debug-2cbeccd316faf9cc0b5e.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-libclang-Debug-106bb8a02ba6adf8273f.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-libclangTests-Debug-8966f0abcef822245d6e.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llc-Debug-94cd41e2abaf132456a1.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-lli-Debug-97c4abe180d6673825c6.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-lli-child-target-Debug-45408a6f61007025fa00.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-PerfectShuffle-Debug-876e4c6607b967eecb80.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-ar-Debug-ffb22a3ac9d142d44e88.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-as-Debug-87bbbbfe90c0cae9783a.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-bcanalyzer-Debug-403a49f7f4d593e982b8.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-c-test-Debug-9a82aa1e2eedb0b0243b.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-cat-Debug-179895a20edfad739b5d.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-cfi-verify-Debug-a1b69bc9cc9b6e02f846.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-config-Debug-5d37a7d1545979f4345a.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-cov-Debug-8ddbba06dd5edc719196.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-cvtres-Debug-08e2e6fd035e4a90ce30.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-cxxdump-Debug-802b996fd436f0e85592.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-cxxfilt-Debug-a2bb5532ae5de2a8d91b.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-demangle-fuzzer-Debug-9925a1455a8c0eac50ca.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-diff-Debug-3239a25f9e8451804c3f.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-dis-Debug-6037a3805baf318cdb6f.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-dsymutil-Debug-0bbd3e257d49a7e69996.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-dwarfdump-Debug-0e20ea6b6f94b1649fb9.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-dwp-Debug-d981826f3c7333fb0736.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-extract-Debug-f925a4f71a00780cbea2.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-isel-fuzzer-Debug-71fb11e4d3949917325a.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-link-Debug-1c9de20e1174db259ad2.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-lto-Debug-a2984c7aa4285d1c62f0.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-lto2-Debug-2f37d947882acee14e8b.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-mc-Debug-48eb7647670060cfa11a.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-mcmarkup-Debug-08e15f26a750f20e95d3.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-modextract-Debug-dfb18fbb0b2e9f5156c5.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-mt-Debug-71a6421ffdc246c8748f.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-nm-Debug-bbf022cdf0b3161fea24.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-objcopy-Debug-c2c00465bca4b27aec34.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-objdump-Debug-a65cbf1882e8fb5d685d.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-opt-fuzzer-Debug-f39ce1ae2f59a7c29624.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-opt-report-Debug-4756ebbeecae3587c87a.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-pdbutil-Debug-15c3b74cb0d809d82f58.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-profdata-Debug-718b4beb3a5e3c903046.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-rc-Debug-f06b1239e8ae1a53be9a.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-readobj-Debug-18a4535d97def04f8874.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-rtdyld-Debug-6d4fe6d9f66f57a53203.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-size-Debug-8bc9cefd3a0ebcab4c01.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-special-case-list-fuzzer-Debug-583d924135d4ae9e1266.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-split-Debug-515901cff5bba78d4490.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-stress-Debug-37a2466f690ae89011ab.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-strings-Debug-5cfe786fb1b43dc28eff.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-symbolizer-Debug-a967ab98a8b42600d335.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-tblgen-Debug-092333142f499d115df7.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-llvm-xray-Debug-1893c88c13f5d3fbacbe.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-not-Debug-1a930320781a71daac6a.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-obj2yaml-Debug-f06d6f899c185e351028.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-opt-Debug-9b36b98827d39112be63.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-sancov-Debug-5c6458f07aa8b20023e6.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-sanstats-Debug-b66086306115d2992248.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-verify-uselistorder-Debug-c101d30569a4b1d2b211.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-yaml-bench-Debug-3a35cfa4a6cf6a2fa7ca.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-yaml2obj-Debug-647cb090d863c2f066c4.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeCache.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeCache.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/.uuid" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/CMakeConfigureLog.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/CMakeConfigureLog.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/CMakeError.log" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/CMakeError.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/TargetDirectories.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/TargetDirectories.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/clion-Debug-log.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/clion-Debug-log.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/rules.ninja" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/rules.ninja" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CPackConfig.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CPackConfig.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CPackSourceConfig.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CPackSourceConfig.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/LLVMBuild.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/LLVMBuild.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/Testing/Temporary/LastTest.log" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/Testing/Temporary/LastTest.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/bin/llvm-lit" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/bin/llvm-lit" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/build.ninja" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/build.ninja" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/cmake/modules/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/cmake/modules/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/compile_commands.json" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/compile_commands.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/docs/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/docs/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/examples/BrainF/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/examples/BrainF/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/examples/Fibonacci/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/examples/Fibonacci/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/examples/HowToUseJIT/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/examples/HowToUseJIT/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/examples/Kaleidoscope/BuildingAJIT/Chapter1/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/examples/Kaleidoscope/BuildingAJIT/Chapter1/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/examples/Kaleidoscope/BuildingAJIT/Chapter2/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/examples/Kaleidoscope/BuildingAJIT/Chapter2/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/examples/Kaleidoscope/BuildingAJIT/Chapter3/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/examples/Kaleidoscope/BuildingAJIT/Chapter3/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/examples/Kaleidoscope/BuildingAJIT/Chapter4/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/examples/Kaleidoscope/BuildingAJIT/Chapter4/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/examples/Kaleidoscope/BuildingAJIT/Chapter5/Server/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/examples/Kaleidoscope/BuildingAJIT/Chapter5/Server/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/examples/Kaleidoscope/BuildingAJIT/Chapter5/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/examples/Kaleidoscope/BuildingAJIT/Chapter5/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/examples/Kaleidoscope/BuildingAJIT/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/examples/Kaleidoscope/BuildingAJIT/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/examples/Kaleidoscope/Chapter2/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/examples/Kaleidoscope/Chapter2/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/examples/Kaleidoscope/Chapter3/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/examples/Kaleidoscope/Chapter3/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/examples/Kaleidoscope/Chapter4/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/examples/Kaleidoscope/Chapter4/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/examples/Kaleidoscope/Chapter5/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/examples/Kaleidoscope/Chapter5/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/examples/Kaleidoscope/Chapter6/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/examples/Kaleidoscope/Chapter6/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/examples/Kaleidoscope/Chapter7/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/examples/Kaleidoscope/Chapter7/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/examples/Kaleidoscope/Chapter8/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/examples/Kaleidoscope/Chapter8/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/examples/Kaleidoscope/Chapter9/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/examples/Kaleidoscope/Chapter9/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/examples/Kaleidoscope/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/examples/Kaleidoscope/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/examples/ModuleMaker/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/examples/ModuleMaker/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/examples/ParallelJIT/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/examples/ParallelJIT/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/examples/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/examples/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/include/llvm/IR/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/include/llvm/IR/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/include/llvm/Support/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/include/llvm/Support/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/include/llvm/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/include/llvm/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Analysis/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Analysis/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/AsmParser/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/AsmParser/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/BinaryFormat/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/BinaryFormat/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Bitcode/Reader/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Bitcode/Reader/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Bitcode/Writer/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Bitcode/Writer/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Bitcode/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Bitcode/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/CodeGen/AsmPrinter/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/CodeGen/AsmPrinter/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/CodeGen/GlobalISel/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/CodeGen/GlobalISel/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/CodeGen/MIRParser/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/CodeGen/MIRParser/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/CodeGen/SelectionDAG/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/CodeGen/SelectionDAG/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/CodeGen/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/CodeGen/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/DebugInfo/CodeView/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/DebugInfo/CodeView/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/DebugInfo/DWARF/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/DebugInfo/DWARF/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/DebugInfo/MSF/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/DebugInfo/MSF/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/DebugInfo/PDB/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/DebugInfo/PDB/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/DebugInfo/Symbolize/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/DebugInfo/Symbolize/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/DebugInfo/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/DebugInfo/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Demangle/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Demangle/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/ExecutionEngine/Interpreter/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/ExecutionEngine/Interpreter/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/ExecutionEngine/MCJIT/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/ExecutionEngine/MCJIT/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/ExecutionEngine/Orc/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/ExecutionEngine/Orc/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/ExecutionEngine/RuntimeDyld/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/ExecutionEngine/RuntimeDyld/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/ExecutionEngine/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/ExecutionEngine/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/FuzzMutate/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/FuzzMutate/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/IR/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/IR/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/IRReader/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/IRReader/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/LTO/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/LTO/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/LineEditor/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/LineEditor/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Linker/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Linker/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/MC/MCDisassembler/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/MC/MCDisassembler/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/MC/MCParser/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/MC/MCParser/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/MC/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/MC/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Object/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Object/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/ObjectYAML/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/ObjectYAML/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Option/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Option/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Passes/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Passes/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/ProfileData/Coverage/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/ProfileData/Coverage/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/ProfileData/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/ProfileData/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Support/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Support/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/TableGen/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/TableGen/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/AArch64/AsmParser/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/AArch64/AsmParser/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/AArch64/Disassembler/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/AArch64/Disassembler/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/AArch64/InstPrinter/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/AArch64/InstPrinter/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/AArch64/MCTargetDesc/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/AArch64/MCTargetDesc/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/AArch64/TargetInfo/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/AArch64/TargetInfo/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/AArch64/Utils/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/AArch64/Utils/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/AArch64/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/AArch64/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/AMDGPU/AsmParser/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/AMDGPU/AsmParser/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/AMDGPU/Disassembler/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/AMDGPU/Disassembler/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/AMDGPU/InstPrinter/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/AMDGPU/InstPrinter/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/AMDGPU/MCTargetDesc/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/AMDGPU/MCTargetDesc/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/AMDGPU/TargetInfo/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/AMDGPU/TargetInfo/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/AMDGPU/Utils/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/AMDGPU/Utils/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/AMDGPU/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/AMDGPU/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/ARM/AsmParser/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/ARM/AsmParser/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/ARM/Disassembler/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/ARM/Disassembler/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/ARM/InstPrinter/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/ARM/InstPrinter/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/ARM/MCTargetDesc/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/ARM/MCTargetDesc/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/ARM/TargetInfo/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/ARM/TargetInfo/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/ARM/Utils/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/ARM/Utils/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/ARM/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/ARM/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/BPF/AsmParser/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/BPF/AsmParser/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/BPF/Disassembler/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/BPF/Disassembler/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/BPF/InstPrinter/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/BPF/InstPrinter/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/BPF/MCTargetDesc/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/BPF/MCTargetDesc/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/BPF/TargetInfo/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/BPF/TargetInfo/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/BPF/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/BPF/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Hexagon/AsmParser/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Hexagon/AsmParser/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Hexagon/Disassembler/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Hexagon/Disassembler/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Hexagon/MCTargetDesc/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Hexagon/MCTargetDesc/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Hexagon/TargetInfo/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Hexagon/TargetInfo/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Hexagon/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Hexagon/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Lanai/AsmParser/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Lanai/AsmParser/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Lanai/Disassembler/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Lanai/Disassembler/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Lanai/InstPrinter/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Lanai/InstPrinter/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Lanai/MCTargetDesc/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Lanai/MCTargetDesc/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Lanai/TargetInfo/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Lanai/TargetInfo/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Lanai/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Lanai/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/MSP430/InstPrinter/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/MSP430/InstPrinter/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/MSP430/MCTargetDesc/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/MSP430/MCTargetDesc/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/MSP430/TargetInfo/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/MSP430/TargetInfo/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/MSP430/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/MSP430/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Mips/AsmParser/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Mips/AsmParser/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Mips/Disassembler/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Mips/Disassembler/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Mips/InstPrinter/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Mips/InstPrinter/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Mips/MCTargetDesc/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Mips/MCTargetDesc/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Mips/TargetInfo/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Mips/TargetInfo/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Mips/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Mips/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/NVPTX/InstPrinter/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/NVPTX/InstPrinter/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/NVPTX/MCTargetDesc/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/NVPTX/MCTargetDesc/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/NVPTX/TargetInfo/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/NVPTX/TargetInfo/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/NVPTX/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/NVPTX/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/PowerPC/AsmParser/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/PowerPC/AsmParser/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/PowerPC/Disassembler/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/PowerPC/Disassembler/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/PowerPC/InstPrinter/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/PowerPC/InstPrinter/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/PowerPC/MCTargetDesc/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/PowerPC/MCTargetDesc/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/PowerPC/TargetInfo/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/PowerPC/TargetInfo/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/PowerPC/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/PowerPC/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Sparc/AsmParser/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Sparc/AsmParser/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Sparc/Disassembler/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Sparc/Disassembler/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Sparc/InstPrinter/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Sparc/InstPrinter/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Sparc/MCTargetDesc/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Sparc/MCTargetDesc/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Sparc/TargetInfo/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Sparc/TargetInfo/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Sparc/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/Sparc/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/SystemZ/AsmParser/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/SystemZ/AsmParser/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/SystemZ/Disassembler/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/SystemZ/Disassembler/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/SystemZ/InstPrinter/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/SystemZ/InstPrinter/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/SystemZ/MCTargetDesc/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/SystemZ/MCTargetDesc/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/SystemZ/TargetInfo/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/SystemZ/TargetInfo/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/SystemZ/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/SystemZ/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/X86/AsmParser/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/X86/AsmParser/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/X86/Disassembler/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/X86/Disassembler/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/X86/InstPrinter/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/X86/InstPrinter/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/X86/MCTargetDesc/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/X86/MCTargetDesc/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/X86/TargetInfo/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/X86/TargetInfo/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/X86/Utils/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/X86/Utils/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/X86/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/X86/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/XCore/Disassembler/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/XCore/Disassembler/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/XCore/InstPrinter/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/XCore/InstPrinter/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/XCore/MCTargetDesc/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/XCore/MCTargetDesc/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/XCore/TargetInfo/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/XCore/TargetInfo/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/XCore/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/XCore/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Target/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Target/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Testing/Support/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Testing/Support/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Testing/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Testing/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/ToolDrivers/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/ToolDrivers/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/ToolDrivers/llvm-dlltool/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/ToolDrivers/llvm-dlltool/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/ToolDrivers/llvm-lib/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/ToolDrivers/llvm-lib/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Transforms/Coroutines/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Transforms/Coroutines/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Transforms/Hello/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Transforms/Hello/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Transforms/IPO/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Transforms/IPO/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Transforms/InstCombine/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Transforms/InstCombine/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Transforms/Instrumentation/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Transforms/Instrumentation/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Transforms/ObjCARC/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Transforms/ObjCARC/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Transforms/Scalar/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Transforms/Scalar/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Transforms/Utils/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Transforms/Utils/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Transforms/Vectorize/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Transforms/Vectorize/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/Transforms/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/Transforms/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/WindowsManifest/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/WindowsManifest/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/XRay/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/XRay/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/cmake/clang/ClangConfig.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/cmake/clang/ClangConfig.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/cmake/clang/ClangTargets.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/cmake/clang/ClangTargets.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/cmake/llvm/LLVMBuildTreeOnlyTargets.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/cmake/llvm/LLVMBuildTreeOnlyTargets.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/cmake/llvm/LLVMConfig.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/cmake/llvm/LLVMConfig.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/cmake/llvm/LLVMExports.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/cmake/llvm/LLVMExports.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/lib/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/lib/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/include/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/include/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/asan/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/asan/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/asan/scripts/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/asan/scripts/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/asan/tests/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/asan/tests/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/builtins/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/builtins/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/cfi/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/cfi/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/dfsan/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/dfsan/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/esan/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/esan/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/fuzzer/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/fuzzer/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/fuzzer/tests/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/fuzzer/tests/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/interception/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/interception/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/interception/tests/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/interception/tests/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/lsan/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/lsan/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/msan/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/msan/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/msan/tests/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/msan/tests/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/profile/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/profile/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/safestack/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/safestack/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/sanitizer_common/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/sanitizer_common/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/sanitizer_common/tests/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/sanitizer_common/tests/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/scudo/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/scudo/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/stats/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/stats/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/tsan/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/tsan/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/tsan/dd/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/tsan/dd/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/tsan/tests/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/tsan/tests/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/tsan/tests/rtl/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/tsan/tests/rtl/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/tsan/tests/unit/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/tsan/tests/unit/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/ubsan/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/ubsan/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/ubsan_minimal/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/ubsan_minimal/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/xray/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/xray/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/xray/tests/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/xray/tests/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/xray/tests/unit/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/lib/xray/tests/unit/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/asan/I386LinuxConfig/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/asan/I386LinuxConfig/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/asan/I386LinuxDynamicConfig/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/asan/I386LinuxDynamicConfig/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/asan/Unit/dynamic/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/asan/Unit/dynamic/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/asan/Unit/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/asan/Unit/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/asan/X86_64LinuxConfig/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/asan/X86_64LinuxConfig/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/asan/X86_64LinuxDynamicConfig/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/asan/X86_64LinuxDynamicConfig/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/asan/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/asan/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/builtins/Unit/I386LinuxConfig/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/builtins/Unit/I386LinuxConfig/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/builtins/Unit/X86_64LinuxConfig/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/builtins/Unit/X86_64LinuxConfig/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/builtins/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/builtins/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/builtins/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/builtins/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/cfi/Devirt-i386/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/cfi/Devirt-i386/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/cfi/Devirt-thinlto-i386/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/cfi/Devirt-thinlto-i386/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/cfi/Devirt-thinlto-x86_64/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/cfi/Devirt-thinlto-x86_64/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/cfi/Devirt-x86_64/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/cfi/Devirt-x86_64/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/cfi/Standalone-i386/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/cfi/Standalone-i386/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/cfi/Standalone-thinlto-i386/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/cfi/Standalone-thinlto-i386/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/cfi/Standalone-thinlto-x86_64/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/cfi/Standalone-thinlto-x86_64/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/cfi/Standalone-x86_64/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/cfi/Standalone-x86_64/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/cfi/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/cfi/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/dfsan/X86_64Config/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/dfsan/X86_64Config/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/dfsan/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/dfsan/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/esan/X86_64Config/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/esan/X86_64Config/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/esan/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/esan/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/fuzzer/X86_64LinuxConfig/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/fuzzer/X86_64LinuxConfig/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/fuzzer/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/fuzzer/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/fuzzer/unit/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/fuzzer/unit/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/interception/Unit/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/interception/Unit/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/interception/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/interception/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/lit.common.configured" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/lit.common.configured" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/lsan/I386AsanConfig/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/lsan/I386AsanConfig/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/lsan/I386LsanConfig/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/lsan/I386LsanConfig/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/lsan/X86_64AsanConfig/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/lsan/X86_64AsanConfig/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/lsan/X86_64LsanConfig/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/lsan/X86_64LsanConfig/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/lsan/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/lsan/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/msan/X86_64/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/msan/X86_64/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/msan/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/msan/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/profile/Profile-i386/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/profile/Profile-i386/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/profile/Profile-x86_64/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/profile/Profile-x86_64/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/profile/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/profile/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/safestack/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/safestack/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/safestack/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/safestack/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/sanitizer_common/Unit/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/sanitizer_common/Unit/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/sanitizer_common/asan-i386-Linux/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/sanitizer_common/asan-i386-Linux/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/sanitizer_common/asan-x86_64-Linux/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/sanitizer_common/asan-x86_64-Linux/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/sanitizer_common/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/sanitizer_common/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/sanitizer_common/lsan-i386-Linux/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/sanitizer_common/lsan-i386-Linux/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/sanitizer_common/lsan-x86_64-Linux/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/sanitizer_common/lsan-x86_64-Linux/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/sanitizer_common/msan-x86_64-Linux/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/sanitizer_common/msan-x86_64-Linux/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/sanitizer_common/tsan-x86_64-Linux/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/sanitizer_common/tsan-x86_64-Linux/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/sanitizer_common/ubsan-i386-Linux/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/sanitizer_common/ubsan-i386-Linux/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/sanitizer_common/ubsan-x86_64-Linux/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/sanitizer_common/ubsan-x86_64-Linux/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/scudo/I386LinuxConfig/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/scudo/I386LinuxConfig/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/scudo/X86_64LinuxConfig/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/scudo/X86_64LinuxConfig/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/scudo/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/scudo/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/scudo/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/scudo/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/tsan/Unit/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/tsan/Unit/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/tsan/X86_64Config/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/tsan/X86_64Config/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/tsan/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/tsan/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/ubsan/AddressSanitizer-i386/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/ubsan/AddressSanitizer-i386/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/ubsan/AddressSanitizer-x86_64/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/ubsan/AddressSanitizer-x86_64/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/ubsan/MemorySanitizer-x86_64/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/ubsan/MemorySanitizer-x86_64/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/ubsan/Standalone-i386/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/ubsan/Standalone-i386/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/ubsan/Standalone-x86_64/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/ubsan/Standalone-x86_64/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/ubsan/ThreadSanitizer-x86_64/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/ubsan/ThreadSanitizer-x86_64/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/ubsan/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/ubsan/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/ubsan_minimal/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/ubsan_minimal/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/ubsan_minimal/i386/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/ubsan_minimal/i386/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/ubsan_minimal/x86_64/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/ubsan_minimal/x86_64/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/xray/Unit/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/xray/Unit/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/xray/X86_64LinuxConfig/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/xray/X86_64LinuxConfig/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/xray/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/test/xray/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/unittests/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/unittests/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/unittests/lit.common.unit.configured" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/projects/compiler-rt/unittests/lit.common.unit.configured" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/runtimes/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/runtimes/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/test/Unit/lit.site.cfg.py" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/test/Unit/lit.site.cfg.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/test/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/test/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/test/lit.site.cfg.py" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/test/lit.site.cfg.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/bugpoint-passes/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/bugpoint-passes/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/bugpoint/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/bugpoint/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/cmake/modules/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/cmake/modules/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/docs/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/docs/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/examples/AnnotateFunctions/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/examples/AnnotateFunctions/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/examples/PrintFunctionNames/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/examples/PrintFunctionNames/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/examples/analyzer-plugin/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/examples/analyzer-plugin/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/examples/clang-interpreter/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/examples/clang-interpreter/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/examples/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/examples/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/include/clang/AST/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/include/clang/AST/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/include/clang/Basic/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/include/clang/Basic/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/include/clang/Driver/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/include/clang/Driver/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/include/clang/Parse/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/include/clang/Parse/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/include/clang/Sema/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/include/clang/Sema/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/include/clang/Serialization/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/include/clang/Serialization/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/include/clang/StaticAnalyzer/Checkers/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/include/clang/StaticAnalyzer/Checkers/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/include/clang/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/include/clang/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/include/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/include/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/ARCMigrate/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/ARCMigrate/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/AST/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/AST/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/ASTMatchers/Dynamic/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/ASTMatchers/Dynamic/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/ASTMatchers/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/ASTMatchers/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Analysis/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Analysis/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Basic/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Basic/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/CodeGen/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/CodeGen/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/CrossTU/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/CrossTU/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Driver/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Driver/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Edit/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Edit/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Format/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Format/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Frontend/Rewrite/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Frontend/Rewrite/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Frontend/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Frontend/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/FrontendTool/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/FrontendTool/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Headers/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Headers/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Index/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Index/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Lex/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Lex/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Parse/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Parse/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Rewrite/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Rewrite/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Sema/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Sema/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Serialization/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Serialization/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/StaticAnalyzer/Checkers/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/StaticAnalyzer/Checkers/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/StaticAnalyzer/Core/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/StaticAnalyzer/Core/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/StaticAnalyzer/Frontend/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/StaticAnalyzer/Frontend/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/StaticAnalyzer/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/StaticAnalyzer/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Tooling/ASTDiff/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Tooling/ASTDiff/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Tooling/Core/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Tooling/Core/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Tooling/Refactoring/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Tooling/Refactoring/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Tooling/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/Tooling/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/lib/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/runtime/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/runtime/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/test/Unit/lit.site.cfg.py" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/test/Unit/lit.site.cfg.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/test/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/test/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/test/lit.site.cfg.py" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/test/lit.site.cfg.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/arcmt-test/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/arcmt-test/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/c-arcmt-test/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/c-arcmt-test/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/c-index-test/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/c-index-test/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/clang-check/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/clang-check/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/clang-diff/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/clang-diff/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/clang-format-vs/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/clang-format-vs/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/clang-format/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/clang-format/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/clang-func-mapping/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/clang-func-mapping/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/clang-fuzzer/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/clang-fuzzer/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/clang-fuzzer/handle-cxx/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/clang-fuzzer/handle-cxx/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/clang-import-test/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/clang-import-test/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/clang-offload-bundler/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/clang-offload-bundler/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/clang-refactor/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/clang-refactor/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/clang-rename/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/clang-rename/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/diagtool/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/diagtool/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/driver/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/driver/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/libclang/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/libclang/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/scan-build/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/scan-build/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/scan-view/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/tools/scan-view/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/AST/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/AST/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/ASTMatchers/Dynamic/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/ASTMatchers/Dynamic/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/ASTMatchers/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/ASTMatchers/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/Analysis/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/Analysis/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/Basic/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/Basic/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/CodeGen/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/CodeGen/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/CrossTU/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/CrossTU/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/Driver/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/Driver/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/Format/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/Format/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/Frontend/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/Frontend/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/Lex/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/Lex/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/Rename/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/Rename/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/Rewrite/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/Rewrite/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/Sema/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/Sema/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/StaticAnalyzer/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/StaticAnalyzer/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/Tooling/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/Tooling/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/libclang/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/unittests/libclang/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/utils/TableGen/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/utils/TableGen/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/clang/utils/perf-training/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/clang/utils/perf-training/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/dsymutil/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/dsymutil/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/gold/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/gold/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llc/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llc/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/lli/ChildTarget/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/lli/ChildTarget/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/lli/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/lli/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-ar/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-ar/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-as-fuzzer/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-as-fuzzer/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-as/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-as/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-bcanalyzer/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-bcanalyzer/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-c-test/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-c-test/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-cat/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-cat/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-cfi-verify/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-cfi-verify/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-cfi-verify/lib/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-cfi-verify/lib/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-config/BuildVariables.inc" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-config/BuildVariables.inc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-config/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-config/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-cov/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-cov/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-cvtres/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-cvtres/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-cxxdump/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-cxxdump/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-cxxfilt/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-cxxfilt/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-demangle-fuzzer/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-demangle-fuzzer/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-diff/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-diff/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-dis/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-dis/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-dwarfdump/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-dwarfdump/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-dwarfdump/fuzzer/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-dwarfdump/fuzzer/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-dwp/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-dwp/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-extract/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-extract/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-go/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-go/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-isel-fuzzer/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-isel-fuzzer/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-link/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-link/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-lto/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-lto/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-lto2/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-lto2/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-mc-assemble-fuzzer/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-mc-assemble-fuzzer/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-mc-disassemble-fuzzer/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-mc-disassemble-fuzzer/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-mc/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-mc/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-mcmarkup/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-mcmarkup/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-modextract/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-modextract/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-mt/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-mt/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-nm/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-nm/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-objcopy/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-objcopy/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-objdump/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-objdump/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-opt-fuzzer/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-opt-fuzzer/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-opt-report/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-opt-report/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-pdbutil/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-pdbutil/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-profdata/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-profdata/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-rc/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-rc/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-readobj/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-readobj/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-rtdyld/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-rtdyld/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-size/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-size/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-special-case-list-fuzzer/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-special-case-list-fuzzer/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-split/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-split/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-stress/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-stress/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-strings/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-strings/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-symbolizer/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-symbolizer/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-xray/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/llvm-xray/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/lto/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/lto/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/msbuild/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/msbuild/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/obj2yaml/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/obj2yaml/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/opt-viewer/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/opt-viewer/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/opt/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/opt/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/sancov/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/sancov/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/sanstats/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/sanstats/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/verify-uselistorder/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/verify-uselistorder/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/xcode-toolchain/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/xcode-toolchain/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/tools/yaml2obj/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/tools/yaml2obj/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/ADT/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/ADT/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/Analysis/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/Analysis/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/AsmParser/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/AsmParser/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/BinaryFormat/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/BinaryFormat/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/Bitcode/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/Bitcode/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/CodeGen/GlobalISel/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/CodeGen/GlobalISel/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/CodeGen/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/CodeGen/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/DebugInfo/CodeView/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/DebugInfo/CodeView/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/DebugInfo/DWARF/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/DebugInfo/DWARF/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/DebugInfo/MSF/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/DebugInfo/MSF/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/DebugInfo/PDB/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/DebugInfo/PDB/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/DebugInfo/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/DebugInfo/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/ExecutionEngine/MCJIT/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/ExecutionEngine/MCJIT/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/ExecutionEngine/Orc/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/ExecutionEngine/Orc/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/ExecutionEngine/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/ExecutionEngine/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/FuzzMutate/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/FuzzMutate/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/IR/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/IR/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/LineEditor/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/LineEditor/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/Linker/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/Linker/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/MC/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/MC/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/MI/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/MI/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/Object/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/Object/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/ObjectYAML/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/ObjectYAML/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/Option/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/Option/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/ProfileData/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/ProfileData/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/Support/DynamicLibrary/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/Support/DynamicLibrary/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/Support/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/Support/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/Target/AArch64/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/Target/AArch64/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/Target/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/Target/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/Transforms/IPO/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/Transforms/IPO/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/Transforms/Scalar/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/Transforms/Scalar/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/Transforms/Utils/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/Transforms/Utils/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/Transforms/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/Transforms/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/XRay/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/XRay/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/tools/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/tools/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/unittests/tools/llvm-cfi-verify/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/unittests/tools/llvm-cfi-verify/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/utils/FileCheck/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/utils/FileCheck/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/utils/PerfectShuffle/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/utils/PerfectShuffle/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/utils/TableGen/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/utils/TableGen/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/utils/count/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/utils/count/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/utils/lit/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/utils/lit/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/utils/lit/lit.site.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/utils/lit/lit.site.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/utils/llvm-lit/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/utils/llvm-lit/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/utils/not/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/utils/not/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/utils/unittest/UnitTestMain/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/utils/unittest/UnitTestMain/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/utils/unittest/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/utils/unittest/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/utils/yaml-bench/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/utils/yaml-bench/cmake_install.cmake" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Debug" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectApplicationVersion">
    <option name="ide" value="CLion" />
    <option name="majorVersion" value="2023" />
    <option name="minorVersion" value="3" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 1
}</component>
  <component name="ProjectId" id="2fRsxXhZVGcKz0rhCPr3XbFAAuS" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.readMode.enableVisualFormatting&quot;: &quot;true&quot;,
    &quot;cf.advertisement.text.overridden&quot;: &quot;true&quot;,
    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,
    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;project.propVCSSupport.DirectoryMappings&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RdControllerToolWindowsLayoutState" isNewUi="true">
    <layout>
      <window_info id="Space Code Reviews" show_stripe_button="false" />
      <window_info id="Bookmarks" show_stripe_button="false" side_tool="true" />
      <window_info id="VcsChanges" weight="0.33015046" />
      <window_info id="Merge Requests" show_stripe_button="false" />
      <window_info id="Commit_Guest" show_stripe_button="false" />
      <window_info id="Pull Requests" show_stripe_button="false" />
      <window_info id="Learn" show_stripe_button="false" />
      <window_info id="DFA" show_stripe_button="false" />
      <window_info active="true" content_ui="combo" id="Project" order="0" sideWeight="0.5010549" visible="true" weight="0.26765046" />
      <window_info id="Commit" order="1" weight="0.26765046" />
      <window_info id="Structure" order="2" sideWeight="0.49894515" side_tool="true" weight="0.33015046" />
      <window_info anchor="bottom" id="CMake" weight="0.6041666" />
      <window_info anchor="bottom" id="Database Changes" show_stripe_button="false" />
      <window_info anchor="bottom" id="TypeScript" show_stripe_button="false" />
      <window_info anchor="bottom" id="Python Packages" show_stripe_button="false" />
      <window_info anchor="bottom" id="TODO" show_stripe_button="false" />
      <window_info anchor="bottom" id="Messages" weight="0.49675924" />
      <window_info anchor="bottom" id="File Transfer" show_stripe_button="false" />
      <window_info anchor="bottom" id="Vcpkg" show_stripe_button="false" />
      <window_info anchor="bottom" id="Find" weight="0.6041666" />
      <window_info anchor="bottom" id="clangd" show_stripe_button="false" />
      <window_info anchor="bottom" id="Version Control" order="0" weight="0.52361107" />
      <window_info anchor="bottom" id="Problems View" order="1" />
      <window_info active="true" anchor="bottom" id="Terminal" order="2" visible="true" weight="0.6041666" />
      <window_info anchor="bottom" id="Services" order="3" />
      <window_info anchor="right" id="Notifications" order="0" weight="0.20283565" />
      <window_info anchor="right" id="AIAssistant" order="1" weight="0.33015046" />
      <window_info anchor="right" id="Database" order="2" weight="0.25" />
      <window_info anchor="right" id="make" order="3" show_stripe_button="false" side_tool="true" />
    </layout>
  </component>
  <component name="RunManager" selected="CMake Application.AArch64CommonTableGen">
    <configuration name="AArch64Tests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="AArch64Tests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="AArch64Tests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ADTTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ADTTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="ADTTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ASTMatchersTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ASTMatchersTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="ASTMatchersTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ASTTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ASTTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="ASTTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="AnalysisTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="AnalysisTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="AnalysisTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="AsmParserTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="AsmParserTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="AsmParserTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BasicTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="BasicTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="BasicTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BinaryFormatTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="BinaryFormatTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="BinaryFormatTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BitcodeTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="BitcodeTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="BitcodeTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="CFIVerifyTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="CFIVerifyTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="CFIVerifyTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangAnalysisTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangAnalysisTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="ClangAnalysisTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangCodeGenTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangCodeGenTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="ClangCodeGenTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangDriverTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangDriverTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="ClangDriverTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangRenameTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangRenameTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="ClangRenameTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="CodeGenTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="CodeGenTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="CodeGenTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="CrossTUTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="CrossTUTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="CrossTUTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="DebugInfoCodeViewTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="DebugInfoCodeViewTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="DebugInfoCodeViewTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="DebugInfoDWARFTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="DebugInfoDWARFTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="DebugInfoDWARFTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="DebugInfoMSFTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="DebugInfoMSFTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="DebugInfoMSFTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="DebugInfoPDBTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="DebugInfoPDBTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="DebugInfoPDBTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="DynamicASTMatchersTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="DynamicASTMatchersTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="DynamicASTMatchersTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="DynamicLibraryTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="DynamicLibraryTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="DynamicLibraryTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExecutionEngineTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ExecutionEngineTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="ExecutionEngineTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="FormatTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="FormatTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="FormatTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="FrontendTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="FrontendTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="FrontendTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="FuzzMutateTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="FuzzMutateTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="FuzzMutateTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="GlobalISelTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="GlobalISelTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="GlobalISelTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="IPOTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="IPOTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="IPOTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="IRTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="IRTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="IRTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LexTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LexTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="LexTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LineEditorTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LineEditorTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="LineEditorTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LinkerTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LinkerTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="LinkerTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="MCJITTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="MCJITTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="MCJITTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="MCTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="MCTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="MCTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="MITests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="MITests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="MITests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ObjectTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ObjectTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="ObjectTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ObjectYAMLTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ObjectYAMLTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="ObjectYAMLTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="OptionTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="OptionTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="OptionTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="OrcJITTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="OrcJITTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="OrcJITTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ProfileDataTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ProfileDataTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="ProfileDataTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RewriteTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RewriteTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="RewriteTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ScalarTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ScalarTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="ScalarTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="SemaTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="SemaTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="SemaTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="StaticAnalysisTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="StaticAnalysisTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="StaticAnalysisTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="SupportTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="SupportTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="SupportTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ToolingTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ToolingTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="ToolingTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="UtilsTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="UtilsTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="UtilsTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="XRayTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="XRayTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="XRayTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="libclangTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="libclangTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="libclangTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="AArch64CommonTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="AArch64CommonTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="AMDGPUCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="AMDGPUCommonTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ARMCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ARMCommonTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="AnnotateFunctions" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="AnnotateFunctions" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="AsanBenchmarks" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="AsanBenchmarks" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="AsanDynamicUnitTests" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="AsanDynamicUnitTests" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="AsanUnitTests" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="AsanUnitTests" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="AttributeCompatFuncTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="AttributeCompatFuncTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BPFCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="BPFCommonTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BrainF" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="BrainF" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="BrainF">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BugpointPasses" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="BugpointPasses" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BugpointPasses_exports" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="BugpointPasses_exports" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BuildingAJIT-Ch1" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="BuildingAJIT-Ch1" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="BuildingAJIT-Ch1">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BuildingAJIT-Ch2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="BuildingAJIT-Ch2" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="BuildingAJIT-Ch2">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BuildingAJIT-Ch3" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="BuildingAJIT-Ch3" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="BuildingAJIT-Ch3">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BuildingAJIT-Ch4" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="BuildingAJIT-Ch4" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="BuildingAJIT-Ch4">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BuildingAJIT-Ch5-Server" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="BuildingAJIT-Ch5-Server" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="BuildingAJIT-Ch5-Server">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BuildingAJIT-Ch5" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="BuildingAJIT-Ch5" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="BuildingAJIT-Ch5">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangARMNeon" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangARMNeon" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangAttrClasses" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangAttrClasses" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangAttrDump" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangAttrDump" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangAttrHasAttributeImpl" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangAttrHasAttributeImpl" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangAttrImpl" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangAttrImpl" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangAttrList" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangAttrList" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangAttrPCHRead" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangAttrPCHRead" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangAttrPCHWrite" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangAttrPCHWrite" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangAttrParsedAttrImpl" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangAttrParsedAttrImpl" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangAttrParsedAttrKinds" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangAttrParsedAttrKinds" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangAttrParsedAttrList" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangAttrParsedAttrList" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangAttrParserStringSwitches" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangAttrParserStringSwitches" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangAttrSpellingListIndex" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangAttrSpellingListIndex" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangAttrSubMatchRulesParserStringSwitches" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangAttrSubMatchRulesParserStringSwitches" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangAttrSubjectMatchRuleList" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangAttrSubjectMatchRuleList" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangAttrTemplateInstantiate" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangAttrTemplateInstantiate" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangAttrVisitor" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangAttrVisitor" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangCommentCommandInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangCommentCommandInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangCommentCommandList" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangCommentCommandList" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangCommentHTMLNamedCharacterReferences" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangCommentHTMLNamedCharacterReferences" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangCommentHTMLTags" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangCommentHTMLTags" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangCommentHTMLTagsProperties" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangCommentHTMLTagsProperties" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangCommentNodes" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangCommentNodes" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangDeclNodes" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangDeclNodes" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangDiagnosticAST" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangDiagnosticAST" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangDiagnosticAnalysis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangDiagnosticAnalysis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangDiagnosticComment" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangDiagnosticComment" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangDiagnosticCommon" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangDiagnosticCommon" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangDiagnosticCrossTU" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangDiagnosticCrossTU" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangDiagnosticDriver" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangDiagnosticDriver" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangDiagnosticFrontend" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangDiagnosticFrontend" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangDiagnosticGroups" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangDiagnosticGroups" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangDiagnosticIndexName" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangDiagnosticIndexName" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangDiagnosticLex" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangDiagnosticLex" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangDiagnosticParse" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangDiagnosticParse" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangDiagnosticRefactoring" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangDiagnosticRefactoring" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangDiagnosticSema" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangDiagnosticSema" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangDiagnosticSerialization" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangDiagnosticSerialization" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangDriverOptions" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangDriverOptions" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangSACheckers" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangSACheckers" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangStmtNodes" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangStmtNodes" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ClangUnitTests" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ClangUnitTests" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="CvtResTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="CvtResTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="DllOptionsTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="DllOptionsTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="DynamicLibraryLib" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="DynamicLibraryLib" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Fibonacci" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="Fibonacci" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="Fibonacci">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="FileCheck" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="FileCheck" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="FileCheck">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="FuzzerUnitTests" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="FuzzerUnitTests" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="GotsanRuntimeCheck" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="GotsanRuntimeCheck" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="HexagonCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="HexagonCommonTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="HowToUseJIT" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="HowToUseJIT" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="HowToUseJIT">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="InterceptionUnitTests" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="InterceptionUnitTests" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Kaleidoscope-Ch2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="Kaleidoscope-Ch2" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="Kaleidoscope-Ch2">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Kaleidoscope-Ch3" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="Kaleidoscope-Ch3" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="Kaleidoscope-Ch3">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Kaleidoscope-Ch4" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="Kaleidoscope-Ch4" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="Kaleidoscope-Ch4">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Kaleidoscope-Ch5" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="Kaleidoscope-Ch5" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="Kaleidoscope-Ch5">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Kaleidoscope-Ch6" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="Kaleidoscope-Ch6" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="Kaleidoscope-Ch6">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Kaleidoscope-Ch7" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="Kaleidoscope-Ch7" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="Kaleidoscope-Ch7">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Kaleidoscope-Ch8" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="Kaleidoscope-Ch8" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="Kaleidoscope-Ch8">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Kaleidoscope-Ch9" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="Kaleidoscope-Ch9" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="Kaleidoscope-Ch9">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Kaleidoscope" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="Kaleidoscope" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAArch64AsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAArch64AsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAArch64AsmPrinter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAArch64AsmPrinter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAArch64CodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAArch64CodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAArch64Desc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAArch64Desc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAArch64Disassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAArch64Disassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAArch64Info" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAArch64Info" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAArch64Utils" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAArch64Utils" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAMDGPUAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAMDGPUAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAMDGPUAsmPrinter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAMDGPUAsmPrinter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAMDGPUCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAMDGPUCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAMDGPUDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAMDGPUDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAMDGPUDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAMDGPUDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAMDGPUInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAMDGPUInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAMDGPUUtils" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAMDGPUUtils" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMARMAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMARMAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMARMAsmPrinter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMARMAsmPrinter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMARMCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMARMCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMARMDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMARMDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMARMDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMARMDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMARMInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMARMInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMARMUtils" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMARMUtils" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAnalysis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAnalysis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAsmPrinter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAsmPrinter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMBPFAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMBPFAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMBPFAsmPrinter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMBPFAsmPrinter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMBPFCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMBPFCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMBPFDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMBPFDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMBPFDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMBPFDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMBPFInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMBPFInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMBinaryFormat" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMBinaryFormat" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMBitReader" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMBitReader" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMBitWriter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMBitWriter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMCFIVerify" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMCFIVerify" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMCore" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMCore" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMCoroutines" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMCoroutines" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMCoverage" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMCoverage" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMDebugInfoCodeView" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMDebugInfoCodeView" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMDebugInfoDWARF" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMDebugInfoDWARF" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMDebugInfoMSF" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMDebugInfoMSF" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMDebugInfoPDB" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMDebugInfoPDB" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMDemangle" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMDemangle" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMDlltoolDriver" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMDlltoolDriver" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMExecutionEngine" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMExecutionEngine" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMFuzzMutate" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMFuzzMutate" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMGlobalISel" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMGlobalISel" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMHello" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMHello" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMHello_exports" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMHello_exports" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMHexagonAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMHexagonAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMHexagonCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMHexagonCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMHexagonDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMHexagonDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMHexagonDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMHexagonDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMHexagonInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMHexagonInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMIRReader" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMIRReader" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMInstCombine" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMInstCombine" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMInstrumentation" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMInstrumentation" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMInterpreter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMInterpreter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMLTO" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMLTO" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMLanaiAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMLanaiAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMLanaiAsmPrinter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMLanaiAsmPrinter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMLanaiCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMLanaiCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMLanaiDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMLanaiDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMLanaiDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMLanaiDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMLanaiInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMLanaiInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMLibDriver" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMLibDriver" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMLineEditor" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMLineEditor" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMLinker" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMLinker" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMC" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMMC" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMCDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMMCDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMCJIT" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMMCJIT" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMCParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMMCParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMIRParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMMIRParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMSP430AsmPrinter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMMSP430AsmPrinter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMSP430CodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMMSP430CodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMSP430Desc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMMSP430Desc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMSP430Info" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMMSP430Info" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMipsAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMMipsAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMipsAsmPrinter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMMipsAsmPrinter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMipsCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMMipsCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMipsDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMMipsDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMipsDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMMipsDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMipsInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMMipsInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMNVPTXAsmPrinter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMNVPTXAsmPrinter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMNVPTXCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMNVPTXCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMNVPTXDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMNVPTXDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMNVPTXInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMNVPTXInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMObjCARCOpts" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMObjCARCOpts" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMObject" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMObject" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMObjectYAML" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMObjectYAML" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMOption" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMOption" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMOrcJIT" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMOrcJIT" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMPasses" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMPasses" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMPowerPCAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMPowerPCAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMPowerPCAsmPrinter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMPowerPCAsmPrinter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMPowerPCCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMPowerPCCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMPowerPCDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMPowerPCDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMPowerPCDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMPowerPCDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMPowerPCInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMPowerPCInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMProfileData" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMProfileData" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMRuntimeDyld" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMRuntimeDyld" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMScalarOpts" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMScalarOpts" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSelectionDAG" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMSelectionDAG" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSparcAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMSparcAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSparcAsmPrinter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMSparcAsmPrinter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSparcCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMSparcCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSparcDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMSparcDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSparcDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMSparcDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSparcInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMSparcInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSupport" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMSupport" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSymbolize" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMSymbolize" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSystemZAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMSystemZAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSystemZAsmPrinter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMSystemZAsmPrinter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSystemZCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMSystemZCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSystemZDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMSystemZDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSystemZDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMSystemZDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSystemZInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMSystemZInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMTarget" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMTarget" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMTestingSupport" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMTestingSupport" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMTransformUtils" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMTransformUtils" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMVectorize" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMVectorize" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMWindowsManifest" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMWindowsManifest" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMX86AsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMX86AsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMX86AsmPrinter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMX86AsmPrinter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMX86CodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMX86CodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMX86Desc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMX86Desc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMX86Disassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMX86Disassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMX86Info" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMX86Info" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMX86Utils" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMX86Utils" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMXCoreAsmPrinter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMXCoreAsmPrinter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMXCoreCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMXCoreCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMXCoreDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMXCoreDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMXCoreDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMXCoreDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMXCoreInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMXCoreInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMXRay" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMXRay" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMipo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMipo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LTO" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LTO" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LTO_exports" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LTO_exports" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LanaiCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LanaiCommonTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LibOptionsTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LibOptionsTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="MSP430CommonTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="MSP430CommonTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="MipsCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="MipsCommonTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ModuleMaker" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ModuleMaker" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="ModuleMaker">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="MsanUnitTests" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="MsanUnitTests" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="MtTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="MtTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NVPTXCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="NVPTXCommonTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="OptsTestTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="OptsTestTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ParallelJIT" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ParallelJIT" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="ParallelJIT">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="PipSqueak" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="PipSqueak" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="PowerPCCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="PowerPCCommonTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="PrintFunctionNames" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="PrintFunctionNames" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="PrintFunctionNames_exports" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="PrintFunctionNames_exports" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTAsanTest.i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTAsanTest.i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTAsanTest.x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTAsanTest.x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTAsan_cxx.i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTAsan_cxx.i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTAsan_cxx.x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTAsan_cxx.x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTAsan_dynamic.i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTAsan_dynamic.i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTAsan_dynamic_version_script_dummy.i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTAsan_dynamic_version_script_dummy.i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTAsan_dynamic_version_script_dummy.x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTAsan_dynamic_version_script_dummy.x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTAsan_dynamic.x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTAsan_dynamic.x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTAsan.i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTAsan.i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTAsan_preinit.i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTAsan_preinit.i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTAsan_preinit.x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTAsan_preinit.x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTAsan.x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTAsan.x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTDD.x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTDD.x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTFuzzerTest.x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTFuzzerTest.x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTInterception.i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTInterception.i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTInterception.test.i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTInterception.test.i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTInterception.test.x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTInterception.test.x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTInterception.x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTInterception.x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTLSanCommon.i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTLSanCommon.i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTLSanCommon.x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTLSanCommon.x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTSanitizerCommonLibcNoHooks.i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTSanitizerCommonLibcNoHooks.i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTSanitizerCommonLibcNoHooks.x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTSanitizerCommonLibcNoHooks.x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTSanitizerCommonLibc.i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTSanitizerCommonLibc.i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTSanitizerCommonLibc.x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTSanitizerCommonLibc.x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTSanitizerCommonNoHooks.i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTSanitizerCommonNoHooks.i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTSanitizerCommonNoHooks.x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTSanitizerCommonNoHooks.x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTSanitizerCommonNoLibc.i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTSanitizerCommonNoLibc.i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTSanitizerCommonNoLibc.x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTSanitizerCommonNoLibc.x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTSanitizerCommonNoTermination.i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTSanitizerCommonNoTermination.i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTSanitizerCommonNoTermination.x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTSanitizerCommonNoTermination.x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTSanitizerCommon.i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTSanitizerCommon.i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTSanitizerCommon.test.i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTSanitizerCommon.test.i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTSanitizerCommon.test.nolibc.x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTSanitizerCommon.test.nolibc.x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTSanitizerCommon.test.x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTSanitizerCommon.test.x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTSanitizerCommon.x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTSanitizerCommon.x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTUbsan_cxx.i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTUbsan_cxx.i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTUbsan_cxx.x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTUbsan_cxx.x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTUbsan.i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTUbsan.i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTUbsan_minimal.i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTUbsan_minimal.i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTUbsan_minimal.x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTUbsan_minimal.x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTUbsan_standalone.i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTUbsan_standalone.i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTUbsan_standalone.x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTUbsan_standalone.x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTUbsan.x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTUbsan.x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTXray.x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTXray.x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTfuzzer_main.x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTfuzzer_main.x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RTfuzzer.x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RTfuzzer.x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RcTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RcTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="SampleAnalyzerPlugin" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="SampleAnalyzerPlugin" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="SampleAnalyzerPlugin_exports" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="SampleAnalyzerPlugin_exports" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="SanitizerLintCheck" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="SanitizerLintCheck" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="SanitizerUnitTests" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="SanitizerUnitTests" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="SecondLib" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="SecondLib" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="SparcCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="SparcCommonTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="StmtDataCollectors" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="StmtDataCollectors" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="SystemZCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="SystemZCommonTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="TAsan-i386-calls-Benchmark" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="TAsan-i386-calls-Benchmark" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="TAsan-i386-calls-Dynamic-Test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="TAsan-i386-calls-Dynamic-Test" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="TAsan-i386-calls-Noinst-Test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="TAsan-i386-calls-Noinst-Test" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="TAsan-i386-calls-Test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="TAsan-i386-calls-Test" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="TAsan-i386-inline-Benchmark" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="TAsan-i386-inline-Benchmark" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="TAsan-i386-inline-Dynamic-Test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="TAsan-i386-inline-Dynamic-Test" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="TAsan-i386-inline-Noinst-Test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="TAsan-i386-inline-Noinst-Test" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="TAsan-i386-inline-Test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="TAsan-i386-inline-Test" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="TAsan-x86_64-calls-Benchmark" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="TAsan-x86_64-calls-Benchmark" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="TAsan-x86_64-calls-Dynamic-Test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="TAsan-x86_64-calls-Dynamic-Test" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="TAsan-x86_64-calls-Noinst-Test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="TAsan-x86_64-calls-Noinst-Test" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="TAsan-x86_64-calls-Test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="TAsan-x86_64-calls-Test" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="TAsan-x86_64-inline-Benchmark" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="TAsan-x86_64-inline-Benchmark" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="TAsan-x86_64-inline-Dynamic-Test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="TAsan-x86_64-inline-Dynamic-Test" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="TAsan-x86_64-inline-Noinst-Test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="TAsan-x86_64-inline-Noinst-Test" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="TAsan-x86_64-inline-Test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="TAsan-x86_64-inline-Test" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="TFuzzer-x86_64-Test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="TFuzzer-x86_64-Test" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="TInterception-i386-Test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="TInterception-i386-Test" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="TInterception-x86_64-Test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="TInterception-x86_64-Test" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="TSanitizer-i386-Test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="TSanitizer-i386-Test" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="TSanitizer-x86_64-Test-Nolibc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="TSanitizer-x86_64-Test-Nolibc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="TSanitizer-x86_64-Test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="TSanitizer-x86_64-Test" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="TTsanRtlTest" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="TTsanRtlTest" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="TTsanUnitTest" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="TTsanUnitTest" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="TXRayBufferQueueTest-x86_64-Test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="TXRayBufferQueueTest-x86_64-Test" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="TXRayFDRLoggingTest-x86_64-Test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="TXRayFDRLoggingTest-x86_64-Test" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="TsanUnitTests" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="TsanUnitTests" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="UnitTests" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="UnitTests" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="X86CommonTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="X86CommonTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="XCoreCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="XCoreCommonTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="XRayUnitTests" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="XRayUnitTests" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="arcmt-test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="arcmt-test" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="arcmt-test">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="asan" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="asan" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="asan_blacklist" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="asan_blacklist" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="bugpoint" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="bugpoint" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="bugpoint">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="builtins" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="builtins" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="c-arcmt-test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="c-arcmt-test" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="c-arcmt-test">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="c-index-test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="c-index-test" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="c-index-test">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cfi" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="cfi" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cfi_blacklist" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="cfi_blacklist" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-all" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-all" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-asan-dynamic" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-asan-dynamic" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-asan" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-asan" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-builtins" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-builtins" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-cfi-and-supported" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-cfi-and-supported" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-cfi" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-cfi" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-analysis-copypaste" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-analysis-copypaste" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-analysis-diagnostics" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-analysis-diagnostics" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-analysis-engine" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-analysis-engine" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-analysis-inlining" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-analysis-inlining" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-analysis-objc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-analysis-objc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-analysis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-analysis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-arcmt-designated-init-in-header" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-arcmt-designated-init-in-header" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-arcmt-whitelisted" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-arcmt-whitelisted" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-arcmt" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-arcmt" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-astmerge-anonymous-fields" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-astmerge-anonymous-fields" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-astmerge-asm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-astmerge-asm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-astmerge-category" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-astmerge-category" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-astmerge-class-template-partial-spec" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-astmerge-class-template-partial-spec" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-astmerge-class-template" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-astmerge-class-template" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-astmerge-class" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-astmerge-class" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-astmerge-class2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-astmerge-class2" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-astmerge-codegen-body" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-astmerge-codegen-body" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-astmerge-codegen-exprs" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-astmerge-codegen-exprs" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-astmerge-enum" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-astmerge-enum" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-astmerge-exprs-cpp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-astmerge-exprs-cpp" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-astmerge-exprs" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-astmerge-exprs" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-astmerge-function" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-astmerge-function" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-astmerge-inheritance" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-astmerge-inheritance" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-astmerge-init-ctors" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-astmerge-init-ctors" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-astmerge-interface" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-astmerge-interface" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-astmerge-macro" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-astmerge-macro" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-astmerge-namespace" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-astmerge-namespace" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-astmerge-property" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-astmerge-property" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-astmerge-struct" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-astmerge-struct" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-astmerge-typedef" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-astmerge-typedef" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-astmerge-var" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-astmerge-var" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-astmerge" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-astmerge" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-clang-rename" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-clang-rename" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-codecompletion" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-codecompletion" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-codegen-avr-attributes" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-codegen-avr-attributes" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-codegen-avr-target-cpu-defines" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-codegen-avr-target-cpu-defines" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-codegen-avr" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-codegen-avr" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-codegen-include" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-codegen-include" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-codegen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-codegen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-codegencoroutines" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-codegencoroutines" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-codegencuda" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-codegencuda" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-codegencxx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-codegencxx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-codegenobjc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-codegenobjc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-codegenobjcxx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-codegenobjcxx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-codegenopencl" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-codegenopencl" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-coverage" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-coverage" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-coveragemapping" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-coveragemapping" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.align" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.align" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.def" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.def" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.def.odr" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.def.odr" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.life" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.life" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.link" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.link" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.lookup-basic.lookup.argdep" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.lookup-basic.lookup.argdep" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.lookup-basic.lookup.classref" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.lookup-basic.lookup.classref" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.lookup-basic.lookup.elab" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.lookup-basic.lookup.elab" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.lookup-basic.lookup.qual-class.qual" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.lookup-basic.lookup.qual-class.qual" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.lookup-basic.lookup.qual-concept.qual" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.lookup-basic.lookup.qual-concept.qual" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.lookup-basic.lookup.qual-namespace.qual" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.lookup-basic.lookup.qual-namespace.qual" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.lookup-basic.lookup.qual" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.lookup-basic.lookup.qual" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.lookup-basic.lookup.udir" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.lookup-basic.lookup.udir" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.lookup-basic.lookup.unqual" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.lookup-basic.lookup.unqual" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.lookup" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.lookup" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.lval" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.lval" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.scope-basic.funscope" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.scope-basic.funscope" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.scope-basic.scope.class" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.scope-basic.scope.class" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.scope-basic.scope.concept" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.scope-basic.scope.concept" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.scope-basic.scope.declarative" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.scope-basic.scope.declarative" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.scope-basic.scope.enum" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.scope-basic.scope.enum" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.scope-basic.scope.hiding" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.scope-basic.scope.hiding" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.scope-basic.scope.local" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.scope-basic.scope.local" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.scope-basic.scope.namespace" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.scope-basic.scope.namespace" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.scope-basic.scope.pdecl" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.scope-basic.scope.pdecl" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.scope-basic.scope.proto" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.scope-basic.scope.proto" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.scope-basic.scope.req" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.scope-basic.scope.req" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.scope" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.scope" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.start-basic.start.init" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.start-basic.start.init" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.start-basic.start.main" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.start-basic.start.main" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.start-basic.start.term" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.start-basic.start.term" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.start" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.start" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.stc-basic.stc.auto" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.stc-basic.stc.auto" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.stc-basic.stc.dynamic-basic.stc.dynamic.allocation" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.stc-basic.stc.dynamic-basic.stc.dynamic.allocation" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.stc-basic.stc.dynamic-basic.stc.dynamic.deallocation" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.stc-basic.stc.dynamic-basic.stc.dynamic.deallocation" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.stc-basic.stc.dynamic-basic.stc.dynamic.safety" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.stc-basic.stc.dynamic-basic.stc.dynamic.safety" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.stc-basic.stc.dynamic" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.stc-basic.stc.dynamic" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.stc-basic.stc.inherit" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.stc-basic.stc.inherit" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.stc-basic.stc.static" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.stc-basic.stc.static" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.stc-basic.stc.thread" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.stc-basic.stc.thread" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.stc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.stc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.types-basic.compound" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.types-basic.compound" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.types-basic.fundamental" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.types-basic.fundamental" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.types-basic.type.qualifier" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.types-basic.type.qualifier" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic-basic.types" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic-basic.types" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-basic" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-basic" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-class-class.base-class.base.init" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-class-class.base-class.base.init" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-class-class.base" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-class-class.base" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-class-class.bit" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-class-class.bit" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-class-class.friend" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-class-class.friend" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-class-class.local" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-class-class.local" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-class-class.mem" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-class-class.mem" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-class-class.mfct-class.mfct.non-static" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-class-class.mfct-class.mfct.non-static" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-class-class.mfct-class.this" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-class-class.mfct-class.this" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-class-class.mfct" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-class-class.mfct" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-class-class.name" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-class-class.name" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-class-class.nest" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-class-class.nest" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-class-class.nested.type" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-class-class.nested.type" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-class-class.static-class.static.data" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-class-class.static-class.static.data" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-class-class.static-class.static.mfct" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-class-class.static-class.static.mfct" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-class-class.static" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-class-class.static" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-class-class.union-class.union.anon" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-class-class.union-class.union.anon" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-class-class.union" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-class-class.union" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-class" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-class" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-class.access-class.access.base" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-class.access-class.access.base" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-class.access-class.access.dcl" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-class.access-class.access.dcl" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-class.access-class.access.nest" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-class.access-class.access.nest" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-class.access-class.access.spec" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-class.access-class.access.spec" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-class.access-class.access.virt" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-class.access-class.access.virt" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-class.access-class.friend" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-class.access-class.friend" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-class.access-class.paths" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-class.access-class.paths" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-class.access-class.protected" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-class.access-class.protected" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-class.access" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-class.access" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-class.derived-class.abstract" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-class.derived-class.abstract" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-class.derived-class.member.lookup" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-class.derived-class.member.lookup" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-class.derived-class.mi" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-class.derived-class.mi" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-class.derived-class.virtual" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-class.derived-class.virtual" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-class.derived" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-class.derived" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-concepts-ts-dcl.dcl-dcl.spec-dcl.spec.concept" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-concepts-ts-dcl.dcl-dcl.spec-dcl.spec.concept" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-concepts-ts-dcl.dcl-dcl.spec" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-concepts-ts-dcl.dcl-dcl.spec" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-concepts-ts-dcl.dcl" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-concepts-ts-dcl.dcl" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-concepts-ts-temp-temp.constr-temp.constr.decl" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-concepts-ts-temp-temp.constr-temp.constr.decl" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-concepts-ts-temp-temp.constr" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-concepts-ts-temp-temp.constr" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-concepts-ts-temp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-concepts-ts-temp" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-concepts-ts" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-concepts-ts" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-conv-conv.array" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-conv-conv.array" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-conv-conv.bool" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-conv-conv.bool" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-conv-conv.double" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-conv-conv.double" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-conv-conv.fctptr" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-conv-conv.fctptr" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-conv-conv.fpint" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-conv-conv.fpint" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-conv-conv.fpprom" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-conv-conv.fpprom" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-conv-conv.func" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-conv-conv.func" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-conv-conv.integral" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-conv-conv.integral" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-conv-conv.lval" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-conv-conv.lval" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-conv-conv.mem" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-conv-conv.mem" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-conv-conv.prom" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-conv-conv.prom" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-conv-conv.ptr" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-conv-conv.ptr" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-conv-conv.qual" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-conv-conv.qual" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-conv-conv.rank" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-conv-conv.rank" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-conv" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-conv" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-cpp-cpp.cond" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-cpp-cpp.cond" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-cpp-cpp.error" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-cpp-cpp.error" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-cpp-cpp.include" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-cpp-cpp.include" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-cpp-cpp.line" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-cpp-cpp.line" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-cpp-cpp.null" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-cpp-cpp.null" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-cpp-cpp.pragma" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-cpp-cpp.pragma" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-cpp-cpp.pragma.op" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-cpp-cpp.pragma.op" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-cpp-cpp.predefined" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-cpp-cpp.predefined" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-cpp-cpp.replace-cpp.concat" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-cpp-cpp.replace-cpp.concat" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-cpp-cpp.replace-cpp.rescan" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-cpp-cpp.replace-cpp.rescan" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-cpp-cpp.replace-cpp.scope" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-cpp-cpp.replace-cpp.scope" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-cpp-cpp.replace-cpp.stringize" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-cpp-cpp.replace-cpp.stringize" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-cpp-cpp.replace-cpp.subst" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-cpp-cpp.replace-cpp.subst" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-cpp-cpp.replace" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-cpp-cpp.replace" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-cpp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-cpp" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.dcl-basic.namespace-namespace.alias" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.dcl-basic.namespace-namespace.alias" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.dcl-basic.namespace-namespace.def-namespace.memdef" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.dcl-basic.namespace-namespace.def-namespace.memdef" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.dcl-basic.namespace-namespace.def-namespace.unnamed" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.dcl-basic.namespace-namespace.def-namespace.unnamed" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.dcl-basic.namespace-namespace.def" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.dcl-basic.namespace-namespace.def" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.dcl-basic.namespace-namespace.udecl" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.dcl-basic.namespace-namespace.udecl" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.dcl-basic.namespace-namespace.udir" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.dcl-basic.namespace-namespace.udir" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.dcl-basic.namespace" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.dcl-basic.namespace" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.dcl-dcl.asm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.dcl-dcl.asm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.dcl-dcl.attr-dcl.align" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.dcl-dcl.attr-dcl.align" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.dcl-dcl.attr-dcl.attr.depend" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.dcl-dcl.attr-dcl.attr.depend" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.dcl-dcl.attr-dcl.attr.deprecated" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.dcl-dcl.attr-dcl.attr.deprecated" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.dcl-dcl.attr-dcl.attr.fallthrough" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.dcl-dcl.attr-dcl.attr.fallthrough" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.dcl-dcl.attr-dcl.attr.grammar" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.dcl-dcl.attr-dcl.attr.grammar" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.dcl-dcl.attr-dcl.attr.nodiscard" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.dcl-dcl.attr-dcl.attr.nodiscard" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.dcl-dcl.attr-dcl.attr.noreturn" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.dcl-dcl.attr-dcl.attr.noreturn" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.dcl-dcl.attr-dcl.attr.unused" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.dcl-dcl.attr-dcl.attr.unused" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.dcl-dcl.attr" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.dcl-dcl.attr" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.dcl-dcl.enum" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.dcl-dcl.enum" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.dcl-dcl.link" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.dcl-dcl.link" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.dcl-dcl.spec-dcl.constexpr" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.dcl-dcl.spec-dcl.constexpr" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.dcl-dcl.spec-dcl.fct.spec" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.dcl-dcl.spec-dcl.fct.spec" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.dcl-dcl.spec-dcl.friend" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.dcl-dcl.spec-dcl.friend" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.dcl-dcl.spec-dcl.inline" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.dcl-dcl.spec-dcl.inline" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.dcl-dcl.spec-dcl.stc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.dcl-dcl.spec-dcl.stc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.dcl-dcl.spec-dcl.type-dcl.spec.auto" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.dcl-dcl.spec-dcl.type-dcl.spec.auto" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.dcl-dcl.spec-dcl.type-dcl.type.class.deduct" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.dcl-dcl.spec-dcl.type-dcl.type.class.deduct" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.dcl-dcl.spec-dcl.type-dcl.type.cv" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.dcl-dcl.spec-dcl.type-dcl.type.cv" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.dcl-dcl.spec-dcl.type-dcl.type.elab" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.dcl-dcl.spec-dcl.type-dcl.type.elab" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.dcl-dcl.spec-dcl.type-dcl.type.simple" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.dcl-dcl.spec-dcl.type-dcl.type.simple" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.dcl-dcl.spec-dcl.type" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.dcl-dcl.spec-dcl.type" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.dcl-dcl.spec-dcl.typedef" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.dcl-dcl.spec-dcl.typedef" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.dcl-dcl.spec" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.dcl-dcl.spec" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.dcl" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.dcl" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.decl-dcl.ambig.res" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.decl-dcl.ambig.res" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.decl-dcl.decomp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.decl-dcl.decomp" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.decl-dcl.fct.def-dcl.fct.def.default" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.decl-dcl.fct.def-dcl.fct.def.default" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.decl-dcl.fct.def-dcl.fct.def.delete" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.decl-dcl.fct.def-dcl.fct.def.delete" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.decl-dcl.fct.def-dcl.fct.def.general" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.decl-dcl.fct.def-dcl.fct.def.general" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.decl-dcl.fct.def" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.decl-dcl.fct.def" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.decl-dcl.init-dcl.init.aggr" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.decl-dcl.init-dcl.init.aggr" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.decl-dcl.init-dcl.init.list" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.decl-dcl.init-dcl.init.list" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.decl-dcl.init-dcl.init.ref" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.decl-dcl.init-dcl.init.ref" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.decl-dcl.init-dcl.init.string" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.decl-dcl.init-dcl.init.string" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.decl-dcl.init" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.decl-dcl.init" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.decl-dcl.meaning-dcl.array" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.decl-dcl.meaning-dcl.array" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.decl-dcl.meaning-dcl.fct-dcl.fct.def.default" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.decl-dcl.meaning-dcl.fct-dcl.fct.def.default" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.decl-dcl.meaning-dcl.fct" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.decl-dcl.meaning-dcl.fct" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.decl-dcl.meaning-dcl.fct.default" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.decl-dcl.meaning-dcl.fct.default" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.decl-dcl.meaning-dcl.mptr" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.decl-dcl.meaning-dcl.mptr" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.decl-dcl.meaning-dcl.ptr" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.decl-dcl.meaning-dcl.ptr" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.decl-dcl.meaning-dcl.ref" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.decl-dcl.meaning-dcl.ref" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.decl-dcl.meaning" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.decl-dcl.meaning" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.decl-dcl.name" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.decl-dcl.name" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-dcl.decl" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-dcl.decl" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.access.dcl" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.access.dcl" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.auto.ptr-auto.ptr-auto.ptr.cons" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.auto.ptr-auto.ptr-auto.ptr.cons" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.auto.ptr-auto.ptr-auto.ptr.conv" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.auto.ptr-auto.ptr-auto.ptr.conv" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.auto.ptr-auto.ptr-auto.ptr.members" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.auto.ptr-auto.ptr-auto.ptr.members" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.auto.ptr-auto.ptr" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.auto.ptr-auto.ptr" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.auto.ptr" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.auto.ptr" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.c.headers" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.c.headers" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.incr.bool" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.incr.bool" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.ios.members" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.ios.members" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.lib.binders-depr.lib.bind.1st" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.lib.binders-depr.lib.bind.1st" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.lib.binders-depr.lib.bind.2nd" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.lib.binders-depr.lib.bind.2nd" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.lib.binders-depr.lib.binder.1st" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.lib.binders-depr.lib.binder.1st" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.lib.binders-depr.lib.binder.2nd" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.lib.binders-depr.lib.binder.2nd" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.lib.binders" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.lib.binders" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.lib.iterator.primitives-iterator.backward" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.lib.iterator.primitives-iterator.backward" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.lib.iterator.primitives-iterator.basic" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.lib.iterator.primitives-iterator.basic" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.lib.iterator.primitives-iterator.traits" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.lib.iterator.primitives-iterator.traits" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.lib.iterator.primitives-std.iterator.tags" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.lib.iterator.primitives-std.iterator.tags" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.lib.iterator.primitives" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.lib.iterator.primitives" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.static" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.static" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.str.strstreams-depr.istrstream-depr.istrstream.cons" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.str.strstreams-depr.istrstream-depr.istrstream.cons" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.str.strstreams-depr.istrstream-depr.istrstream.members" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.str.strstreams-depr.istrstream-depr.istrstream.members" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.str.strstreams-depr.istrstream" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.str.strstreams-depr.istrstream" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.str.strstreams-depr.ostrstream-depr.ostrstream.cons" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.str.strstreams-depr.ostrstream-depr.ostrstream.cons" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.str.strstreams-depr.ostrstream-depr.ostrstream.members" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.str.strstreams-depr.ostrstream-depr.ostrstream.members" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.str.strstreams-depr.ostrstream" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.str.strstreams-depr.ostrstream" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.str.strstreams-depr.strstream-depr.strstream.cons" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.str.strstreams-depr.strstream-depr.strstream.cons" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.str.strstreams-depr.strstream-depr.strstream.dest" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.str.strstreams-depr.strstream-depr.strstream.dest" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.str.strstreams-depr.strstream-depr.strstream.oper" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.str.strstreams-depr.strstream-depr.strstream.oper" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.str.strstreams-depr.strstream" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.str.strstreams-depr.strstream" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.str.strstreams-depr.strstreambuf-depr.strstreambuf.cons" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.str.strstreams-depr.strstreambuf-depr.strstreambuf.cons" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.str.strstreams-depr.strstreambuf-depr.strstreambuf.members" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.str.strstreams-depr.strstreambuf-depr.strstreambuf.members" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.str.strstreams-depr.strstreambuf-depr.strstreambuf.virtuals" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.str.strstreams-depr.strstreambuf-depr.strstreambuf.virtuals" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.str.strstreams-depr.strstreambuf" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.str.strstreams-depr.strstreambuf" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.str.strstreams" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.str.strstreams" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr-depr.string" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr-depr.string" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-depr" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-depr" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-drs" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-drs" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-except-except.ctor" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-except-except.ctor" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-except-except.handle" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-except-except.handle" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-except-except.spec" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-except-except.spec" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-except-except.special-except.terminate" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-except-except.special-except.terminate" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-except-except.special-except.uncaught" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-except-except.special-except.uncaught" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-except-except.special-except.unexpected" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-except-except.special-except.unexpected" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-except-except.special" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-except-except.special" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-except-except.throw" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-except-except.throw" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-except" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-except" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.add" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.add" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.ass" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.ass" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.bit.and" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.bit.and" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.cast" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.cast" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.comma" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.comma" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.cond" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.cond" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.const" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.const" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.eq" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.eq" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.log.and" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.log.and" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.log.or" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.log.or" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.mptr.oper" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.mptr.oper" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.mul" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.mul" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.or" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.or" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.post-expr.call" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.post-expr.call" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.post-expr.const.cast" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.post-expr.const.cast" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.post-expr.dynamic.cast" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.post-expr.dynamic.cast" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.post-expr.post.incr" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.post-expr.post.incr" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.post-expr.pseudo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.post-expr.pseudo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.post-expr.ref" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.post-expr.ref" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.post-expr.reinterpret.cast" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.post-expr.reinterpret.cast" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.post-expr.static.cast" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.post-expr.static.cast" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.post-expr.sub" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.post-expr.sub" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.post-expr.type.conv" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.post-expr.type.conv" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.post-expr.typeid" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.post-expr.typeid" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.post" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.post" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.prim-expr.prim.general" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.prim-expr.prim.general" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.prim-expr.prim.lambda" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.prim-expr.prim.lambda" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.prim" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.prim" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.rel" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.rel" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.shift" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.shift" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.unary-expr.alignof" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.unary-expr.alignof" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.unary-expr.delete" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.unary-expr.delete" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.unary-expr.new" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.unary-expr.new" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.unary-expr.pre.incr" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.unary-expr.pre.incr" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.unary-expr.sizeof" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.unary-expr.sizeof" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.unary-expr.unary.noexcept" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.unary-expr.unary.noexcept" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.unary-expr.unary.op" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.unary-expr.unary.op" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.unary" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.unary" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr-expr.xor" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr-expr.xor" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-expr" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-expr" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-implimits" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-implimits" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-intro-intro.ack" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-intro-intro.ack" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-intro-intro.compliance" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-intro-intro.compliance" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-intro-intro.defs-defns.argument" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-intro-intro.defs-defns.argument" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-intro-intro.defs-defns.cond.supp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-intro-intro.defs-defns.cond.supp" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-intro-intro.defs-defns.diagnostic" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-intro-intro.defs-defns.diagnostic" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-intro-intro.defs-defns.dynamic.type" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-intro-intro.defs-defns.dynamic.type" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-intro-intro.defs-defns.ill.formed" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-intro-intro.defs-defns.ill.formed" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-intro-intro.defs-defns.impl.defined" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-intro-intro.defs-defns.impl.defined" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-intro-intro.defs-defns.impl.limits" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-intro-intro.defs-defns.impl.limits" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-intro-intro.defs-defns.locale.specific" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-intro-intro.defs-defns.locale.specific" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-intro-intro.defs-defns.multibyte" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-intro-intro.defs-defns.multibyte" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-intro-intro.defs-defns.parameter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-intro-intro.defs-defns.parameter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-intro-intro.defs-defns.signature" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-intro-intro.defs-defns.signature" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-intro-intro.defs-defns.static.type" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-intro-intro.defs-defns.static.type" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-intro-intro.defs-defns.undefined" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-intro-intro.defs-defns.undefined" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-intro-intro.defs-defns.unspecified" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-intro-intro.defs-defns.unspecified" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-intro-intro.defs-defns.well.formed" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-intro-intro.defs-defns.well.formed" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-intro-intro.defs" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-intro-intro.defs" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-intro-intro.execution" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-intro-intro.execution" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-intro-intro.memory" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-intro-intro.memory" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-intro-intro.multithread" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-intro-intro.multithread" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-intro-intro.object" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-intro-intro.object" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-intro-intro.refs" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-intro-intro.refs" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-intro-intro.scope" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-intro-intro.scope" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-intro-intro.structure" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-intro-intro.structure" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-intro-syntax" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-intro-syntax" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-intro" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-intro" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-lex-lex.charset" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-lex-lex.charset" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-lex-lex.comment" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-lex-lex.comment" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-lex-lex.digraph" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-lex-lex.digraph" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-lex-lex.header" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-lex-lex.header" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-lex-lex.key" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-lex-lex.key" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-lex-lex.literal-lex.bool" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-lex-lex.literal-lex.bool" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-lex-lex.literal-lex.ccon" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-lex-lex.literal-lex.ccon" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-lex-lex.literal-lex.ext" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-lex-lex.literal-lex.ext" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-lex-lex.literal-lex.fcon" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-lex-lex.literal-lex.fcon" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-lex-lex.literal-lex.icon" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-lex-lex.literal-lex.icon" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-lex-lex.literal-lex.literal.kinds" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-lex-lex.literal-lex.literal.kinds" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-lex-lex.literal-lex.nullptr" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-lex-lex.literal-lex.nullptr" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-lex-lex.literal-lex.string" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-lex-lex.literal-lex.string" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-lex-lex.literal" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-lex-lex.literal" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-lex-lex.name" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-lex-lex.name" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-lex-lex.operators" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-lex-lex.operators" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-lex-lex.phases" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-lex-lex.phases" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-lex-lex.ppnumber" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-lex-lex.ppnumber" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-lex-lex.pptoken" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-lex-lex.pptoken" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-lex-lex.separate" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-lex-lex.separate" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-lex-lex.token" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-lex-lex.token" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-lex-lex.trigraph" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-lex-lex.trigraph" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-lex" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-lex" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-modules-ts-basic-basic.def.odr-p4" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-modules-ts-basic-basic.def.odr-p4" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-modules-ts-basic-basic.def.odr-p6" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-modules-ts-basic-basic.def.odr-p6" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-modules-ts-basic-basic.def.odr" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-modules-ts-basic-basic.def.odr" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-modules-ts-basic-basic.link-p2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-modules-ts-basic-basic.link-p2" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-modules-ts-basic-basic.link" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-modules-ts-basic-basic.link" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-modules-ts-basic-basic.search" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-modules-ts-basic-basic.search" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-modules-ts-basic" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-modules-ts-basic" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-modules-ts-dcl.dcl-dcl.module-dcl.module.export" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-modules-ts-dcl.dcl-dcl.module-dcl.module.export" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-modules-ts-dcl.dcl-dcl.module-dcl.module.import" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-modules-ts-dcl.dcl-dcl.module-dcl.module.import" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-modules-ts-dcl.dcl-dcl.module-dcl.module.interface" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-modules-ts-dcl.dcl-dcl.module-dcl.module.interface" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-modules-ts-dcl.dcl-dcl.module" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-modules-ts-dcl.dcl-dcl.module" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-modules-ts-dcl.dcl" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-modules-ts-dcl.dcl" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-modules-ts" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-modules-ts" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-over-over.built" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-over-over.built" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-over-over.dcl" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-over-over.dcl" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-over-over.load" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-over-over.load" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-over-over.match-over.match.best-over.best.ics-over.ics.ellipsis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-over-over.match-over.match.best-over.best.ics-over.ics.ellipsis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-over-over.match-over.match.best-over.best.ics-over.ics.list" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-over-over.match-over.match.best-over.best.ics-over.ics.list" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-over-over.match-over.match.best-over.best.ics-over.ics.ref" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-over-over.match-over.match.best-over.best.ics-over.ics.ref" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-over-over.match-over.match.best-over.best.ics-over.ics.scs" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-over-over.match-over.match.best-over.best.ics-over.ics.scs" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-over-over.match-over.match.best-over.best.ics-over.ics.user" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-over-over.match-over.match.best-over.best.ics-over.ics.user" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-over-over.match-over.match.best-over.best.ics" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-over-over.match-over.match.best-over.best.ics" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-over-over.match-over.match.best-over.ics.rank" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-over-over.match-over.match.best-over.ics.rank" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-over-over.match-over.match.best" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-over-over.match-over.match.best" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-over-over.match-over.match.funcs-over.match.call-over.call.func" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-over-over.match-over.match.funcs-over.match.call-over.call.func" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-over-over.match-over.match.funcs-over.match.call-over.call.object" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-over-over.match-over.match.funcs-over.match.call-over.call.object" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-over-over.match-over.match.funcs-over.match.call" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-over-over.match-over.match.funcs-over.match.call" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-over-over.match-over.match.funcs-over.match.class.deduct" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-over-over.match-over.match.funcs-over.match.class.deduct" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-over-over.match-over.match.funcs-over.match.conv" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-over-over.match-over.match.funcs-over.match.conv" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-over-over.match-over.match.funcs-over.match.copy" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-over-over.match-over.match.funcs-over.match.copy" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-over-over.match-over.match.funcs-over.match.ctor" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-over-over.match-over.match.funcs-over.match.ctor" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-over-over.match-over.match.funcs-over.match.list" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-over-over.match-over.match.funcs-over.match.list" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-over-over.match-over.match.funcs-over.match.oper" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-over-over.match-over.match.funcs-over.match.oper" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-over-over.match-over.match.funcs-over.match.ref" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-over-over.match-over.match.funcs-over.match.ref" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-over-over.match-over.match.funcs" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-over-over.match-over.match.funcs" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-over-over.match-over.match.viable" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-over-over.match-over.match.viable" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-over-over.match" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-over-over.match" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-over-over.oper-over.ass" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-over-over.oper-over.ass" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-over-over.oper-over.binary" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-over-over.oper-over.binary" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-over-over.oper-over.call" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-over-over.oper-over.call" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-over-over.oper-over.inc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-over-over.oper-over.inc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-over-over.oper-over.literal" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-over-over.oper-over.literal" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-over-over.oper-over.ref" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-over-over.oper-over.ref" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-over-over.oper-over.sub" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-over-over.oper-over.sub" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-over-over.oper-over.unary" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-over-over.oper-over.unary" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-over-over.oper" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-over-over.oper" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-over-over.over" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-over-over.over" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-over" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-over" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-special-class.cdtor" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-special-class.cdtor" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-special-class.conv-class.conv.ctor" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-special-class.conv-class.conv.ctor" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-special-class.conv-class.conv.fct" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-special-class.conv-class.conv.fct" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-special-class.conv" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-special-class.conv" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-special-class.copy" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-special-class.copy" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-special-class.ctor" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-special-class.ctor" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-special-class.dtor" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-special-class.dtor" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-special-class.free" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-special-class.free" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-special-class.inhctor" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-special-class.inhctor" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-special-class.init-class.base.init" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-special-class.init-class.base.init" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-special-class.init-class.expl.init" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-special-class.init-class.expl.init" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-special-class.init-class.inhctor.init" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-special-class.init-class.inhctor.init" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-special-class.init" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-special-class.init" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-special-class.temporary" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-special-class.temporary" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-special" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-special" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-stmt.stmt-stmt.ambig" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-stmt.stmt-stmt.ambig" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-stmt.stmt-stmt.block" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-stmt.stmt-stmt.block" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-stmt.stmt-stmt.dcl" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-stmt.stmt-stmt.dcl" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-stmt.stmt-stmt.expr" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-stmt.stmt-stmt.expr" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-stmt.stmt-stmt.iter-stmt.do" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-stmt.stmt-stmt.iter-stmt.do" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-stmt.stmt-stmt.iter-stmt.for" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-stmt.stmt-stmt.iter-stmt.for" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-stmt.stmt-stmt.iter-stmt.ranged" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-stmt.stmt-stmt.iter-stmt.ranged" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-stmt.stmt-stmt.iter-stmt.while" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-stmt.stmt-stmt.iter-stmt.while" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-stmt.stmt-stmt.iter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-stmt.stmt-stmt.iter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-stmt.stmt-stmt.jump-stmt.break" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-stmt.stmt-stmt.jump-stmt.break" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-stmt.stmt-stmt.jump-stmt.cont" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-stmt.stmt-stmt.jump-stmt.cont" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-stmt.stmt-stmt.jump-stmt.goto" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-stmt.stmt-stmt.jump-stmt.goto" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-stmt.stmt-stmt.jump-stmt.return" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-stmt.stmt-stmt.jump-stmt.return" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-stmt.stmt-stmt.jump" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-stmt.stmt-stmt.jump" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-stmt.stmt-stmt.label" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-stmt.stmt-stmt.label" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-stmt.stmt-stmt.late" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-stmt.stmt-stmt.late" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-stmt.stmt-stmt.select-stmt.if" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-stmt.stmt-stmt.select-stmt.if" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-stmt.stmt-stmt.select-stmt.switch" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-stmt.stmt-stmt.select-stmt.switch" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-stmt.stmt-stmt.select" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-stmt.stmt-stmt.select" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-stmt.stmt" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-stmt.stmt" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-concept-concept.def-concept.assoc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-concept-concept.def-concept.assoc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-concept-concept.def-concept.axiom" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-concept-concept.def-concept.axiom" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-concept-concept.def-concept.fct" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-concept-concept.def-concept.fct" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-concept-concept.def-concept.req" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-concept-concept.def-concept.req" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-concept-concept.def" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-concept-concept.def" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-concept-concept.map-concept.map.assoc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-concept-concept.map-concept.map.assoc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-concept-concept.map-concept.map.fct" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-concept-concept.map-concept.map.fct" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-concept-concept.map" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-concept-concept.map" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-concept-concept.refine-concept.member.lookup" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-concept-concept.refine-concept.member.lookup" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-concept-concept.refine-concept.refine.maps" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-concept-concept.refine-concept.refine.maps" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-concept-concept.refine" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-concept-concept.refine" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-concept-concept.support" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-concept-concept.support" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-concept" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-concept" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.arg-temp.arg.nontype" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.arg-temp.arg.nontype" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.arg-temp.arg.template" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.arg-temp.arg.template" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.arg-temp.arg.type" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.arg-temp.arg.type" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.arg" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.arg" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.constrained-temp.archetype-temp.archetype.assemble" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.constrained-temp.archetype-temp.archetype.assemble" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.constrained-temp.archetype" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.constrained-temp.archetype" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.constrained-temp.constrained.inst" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.constrained-temp.constrained.inst" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.constrained-temp.constrained.set" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.constrained-temp.constrained.set" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.constrained-temp.req-temp.req.impl" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.constrained-temp.req-temp.req.impl" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.constrained-temp.req-temp.req.sat" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.constrained-temp.req-temp.req.sat" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.constrained-temp.req" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.constrained-temp.req" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.constrained" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.constrained" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.decls-temp.alias" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.decls-temp.alias" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.decls-temp.class-temp.mem.class" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.decls-temp.class-temp.mem.class" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.decls-temp.class-temp.mem.enum" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.decls-temp.class-temp.mem.enum" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.decls-temp.class-temp.mem.func" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.decls-temp.class-temp.mem.func" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.decls-temp.class-temp.static" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.decls-temp.class-temp.static" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.decls-temp.class" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.decls-temp.class" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.decls-temp.class.spec-temp.class.order" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.decls-temp.class.spec-temp.class.order" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.decls-temp.class.spec-temp.class.spec.match" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.decls-temp.class.spec-temp.class.spec.match" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.decls-temp.class.spec-temp.class.spec.mfunc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.decls-temp.class.spec-temp.class.spec.mfunc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.decls-temp.class.spec" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.decls-temp.class.spec" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.decls-temp.concept.map" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.decls-temp.concept.map" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.decls-temp.fct-temp.func.order" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.decls-temp.fct-temp.func.order" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.decls-temp.fct-temp.over.link" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.decls-temp.fct-temp.over.link" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.decls-temp.fct" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.decls-temp.fct" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.decls-temp.friend" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.decls-temp.friend" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.decls-temp.mem" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.decls-temp.mem" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.decls-temp.variadic" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.decls-temp.variadic" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.decls" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.decls" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.deduct.guide" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.deduct.guide" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.export" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.export" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.fct.spec-temp.arg.explicit" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.fct.spec-temp.arg.explicit" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.fct.spec-temp.deduct-temp.deduct.call" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.fct.spec-temp.deduct-temp.deduct.call" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.fct.spec-temp.deduct-temp.deduct.conv" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.fct.spec-temp.deduct-temp.deduct.conv" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.fct.spec-temp.deduct-temp.deduct.funcaddr" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.fct.spec-temp.deduct-temp.deduct.funcaddr" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.fct.spec-temp.deduct-temp.deduct.partial" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.fct.spec-temp.deduct-temp.deduct.partial" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.fct.spec-temp.deduct-temp.deduct.type" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.fct.spec-temp.deduct-temp.deduct.type" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.fct.spec-temp.deduct" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.fct.spec-temp.deduct" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.fct.spec-temp.over" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.fct.spec-temp.over" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.fct.spec" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.fct.spec" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.names" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.names" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.param" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.param" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.res-temp.dep-temp.dep.constexpr" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.res-temp.dep-temp.dep.constexpr" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.res-temp.dep-temp.dep.expr" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.res-temp.dep-temp.dep.expr" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.res-temp.dep-temp.dep.temp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.res-temp.dep-temp.dep.temp" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.res-temp.dep-temp.dep.type" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.res-temp.dep-temp.dep.type" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.res-temp.dep" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.res-temp.dep" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.res-temp.dep.res-temp.dep.candidate" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.res-temp.dep.res-temp.dep.candidate" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.res-temp.dep.res-temp.point" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.res-temp.dep.res-temp.point" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.res-temp.dep.res" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.res-temp.dep.res" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.res-temp.inject" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.res-temp.inject" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.res-temp.local" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.res-temp.local" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.res-temp.nondep" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.res-temp.nondep" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.res" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.res" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.spec-temp.expl.spec" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.spec-temp.expl.spec" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.spec-temp.explicit" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.spec-temp.explicit" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.spec-temp.inst" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.spec-temp.inst" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.spec" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.spec" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp-temp.type" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp-temp.type" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx-temp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx-temp" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-cxx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-cxx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-driver-xray" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-driver-xray" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-driver" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-driver" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-fixit" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-fixit" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-format" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-format" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-frontend" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-frontend" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-headers" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-headers" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-import-clang-flags" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-import-clang-flags" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-import-conflicting-struct" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-import-conflicting-struct" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-import-direct" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-import-direct" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-import-empty-struct" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-import-empty-struct" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-import-enum" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-import-enum" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-import-error-in-expression" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-import-error-in-expression" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-import-error-in-import" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-import-error-in-import" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-import-extern-c-function" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-import-extern-c-function" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-import-forward-declared-objc-class" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-import-forward-declared-objc-class" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-import-forward-declared-struct" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-import-forward-declared-struct" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-import-import-overrides" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-import-import-overrides" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-import-in-class-initializer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-import-in-class-initializer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-import-indirect-struct-member-access" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-import-indirect-struct-member-access" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-import-local-struct-use-origins" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-import-local-struct-use-origins" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-import-local-struct" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-import-local-struct" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-import-member-in-struct" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-import-member-in-struct" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-import-missing-import" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-import-missing-import" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-import-multiple-forward-declarations" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-import-multiple-forward-declarations" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-import-objc-definitions-in-expression" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-import-objc-definitions-in-expression" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-import-objc-method" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-import-objc-method" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-import-overloaded-function" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-import-overloaded-function" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-import-struct-and-var" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-import-struct-and-var" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-import-struct-in-namespace" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-import-struct-in-namespace" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-import-struct-layout" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-import-struct-layout" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-import-template-specialization" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-import-template-specialization" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-import-template" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-import-template" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-import" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-import" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-index-core" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-index-core" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-index-reparse-with-remaps" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-index-reparse-with-remaps" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-index-skip-parsed-bodies" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-index-skip-parsed-bodies" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-index-usr" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-index-usr" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-index" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-index" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-integration" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-integration" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-layout" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-layout" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-lexer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-lexer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-misc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-misc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-modules" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-modules" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-openmp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-openmp" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-parser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-parser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-pch" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-pch" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-preprocessor-headermap-rel-foo.framework-headers" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-preprocessor-headermap-rel-foo.framework-headers" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-preprocessor-headermap-rel-foo.framework" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-preprocessor-headermap-rel-foo.framework" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-preprocessor-headermap-rel" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-preprocessor-headermap-rel" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-preprocessor" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-preprocessor" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-profile" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-profile" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-refactor-extract" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-refactor-extract" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-refactor-localrename" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-refactor-localrename" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-refactor" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-refactor" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-rewriter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-rewriter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-sema" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-sema" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-semacuda" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-semacuda" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-semacxx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-semacxx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-semaobjc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-semaobjc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-semaobjcxx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-semaobjcxx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-semaopencl" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-semaopencl" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-sematemplate" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-sematemplate" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-tablegen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-tablegen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-tooling" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-tooling" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-unit" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-unit" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang-vfs" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang-vfs" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-clang" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-clang" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-dfsan" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-dfsan" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-esan" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-esan" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-fuzzer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-fuzzer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-interception" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-interception" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-lit" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-lit" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-aliasset" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-aliasset" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-assumptioncache" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-assumptioncache" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-basicaa" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-basicaa" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-blockfrequencyinfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-blockfrequencyinfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-branchprobabilityinfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-branchprobabilityinfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-callgraph" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-callgraph" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-cflaliasanalysis-andersen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-cflaliasanalysis-andersen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-cflaliasanalysis-steensgaard" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-cflaliasanalysis-steensgaard" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-cflaliasanalysis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-cflaliasanalysis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-constantfolding" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-constantfolding" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-costmodel-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-costmodel-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-costmodel-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-costmodel-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-costmodel-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-costmodel-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-costmodel-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-costmodel-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-costmodel-systemz" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-costmodel-systemz" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-costmodel-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-costmodel-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-costmodel" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-costmodel" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-delinearization" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-delinearization" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-demandedbits" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-demandedbits" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-dependenceanalysis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-dependenceanalysis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-divergenceanalysis-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-divergenceanalysis-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-divergenceanalysis-nvptx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-divergenceanalysis-nvptx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-divergenceanalysis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-divergenceanalysis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-dominancefrontier" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-dominancefrontier" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-dominators" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-dominators" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-globalsmodref" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-globalsmodref" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-ivusers" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-ivusers" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-lazycallgraph" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-lazycallgraph" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-lazyvalueanalysis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-lazyvalueanalysis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-lint" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-lint" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-loopaccessanalysis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-loopaccessanalysis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-loopinfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-loopinfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-memorydependenceanalysis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-memorydependenceanalysis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-memoryssa" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-memoryssa" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-postdominators" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-postdominators" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-profilesummary" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-profilesummary" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-regioninfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-regioninfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-scalarevolution" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-scalarevolution" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-scopednoaliasaa" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-scopednoaliasaa" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-typebasedaliasanalysis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-typebasedaliasanalysis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-valuetracking" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-valuetracking" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-assembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-assembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-bindings-go" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-bindings-go" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-bindings-llvm-c-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-bindings-llvm-c-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-bindings-llvm-c-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-bindings-llvm-c-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-bindings-llvm-c" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-bindings-llvm-c" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-bindings-ocaml" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-bindings-ocaml" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-bindings" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-bindings" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-bitcode" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-bitcode" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-bugpoint" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-bugpoint" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-aarch64-globalisel" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-aarch64-globalisel" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-amdgpu-globalisel" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-amdgpu-globalisel" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-arc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-arc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-arm-globalisel" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-arm-globalisel" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-arm-windows" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-arm-windows" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-avr-atomics" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-avr-atomics" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-avr-calling-conv-c" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-avr-calling-conv-c" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-avr-calling-conv" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-avr-calling-conv" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-avr-features" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-avr-features" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-avr-inline-asm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-avr-inline-asm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-avr-instrumentation" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-avr-instrumentation" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-avr-integration" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-avr-integration" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-avr-intrinsics" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-avr-intrinsics" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-avr-pseudo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-avr-pseudo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-avr-relax-mem" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-avr-relax-mem" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-avr" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-avr" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-bpf" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-bpf" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-generic" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-generic" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-hexagon-autohvx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-hexagon-autohvx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-hexagon-intrinsics" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-hexagon-intrinsics" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-hexagon-loop-idiom" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-hexagon-loop-idiom" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-hexagon-vect" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-hexagon-vect" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-hexagon" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-hexagon" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-lanai" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-lanai" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips-cconv" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips-cconv" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips-compactbranches" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips-compactbranches" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips-cstmaterialization" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips-cstmaterialization" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips-fast-isel" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips-fast-isel" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips-instverify" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips-instverify" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips-llvm-ir" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips-llvm-ir" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips-longbranch" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips-longbranch" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips-micromips-sizereduction" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips-micromips-sizereduction" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips-mips32r6" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips-mips32r6" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips-mips64r6" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips-mips64r6" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips-mirparser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips-mirparser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips-msa" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips-msa" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips-tailcall" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips-tailcall" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mir-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mir-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mir-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mir-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mir-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mir-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mir-generic" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mir-generic" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mir-hexagon" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mir-hexagon" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mir-lanai" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mir-lanai" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mir-mips" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mir-mips" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mir-nvptx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mir-nvptx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mir-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mir-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mir-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mir-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mir" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mir" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-msp430" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-msp430" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-nios2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-nios2" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-nvptx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-nvptx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-riscv" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-riscv" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-sparc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-sparc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-systemz-large" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-systemz-large" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-systemz" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-systemz" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-thumb" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-thumb" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-thumb2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-thumb2" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-webassembly" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-webassembly" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-wineh" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-wineh" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-x86-avx512-shuffles" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-x86-avx512-shuffles" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-x86-gc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-x86-gc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-x86-globalisel" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-x86-globalisel" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-xcore" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-xcore" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-coff" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-coff" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-generic" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-generic" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-lanai" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-lanai" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-mips" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-mips" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-mir-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-mir-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-mir-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-mir-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-mir-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-mir-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-mir" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-mir" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-msp430" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-msp430" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-pdb-dia" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-pdb-dia" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-pdb-native" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-pdb-native" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-pdb" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-pdb" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-sparc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-sparc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-systemz" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-systemz" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-webassembly" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-webassembly" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-demangle" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-demangle" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-examples-kaleidoscope" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-examples-kaleidoscope" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-examples" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-examples" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-executionengine-interpreter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-executionengine-interpreter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-executionengine-mcjit-remote" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-executionengine-mcjit-remote" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-executionengine-mcjit" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-executionengine-mcjit" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-executionengine-orclazy" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-executionengine-orclazy" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-executionengine-orcmcjit-remote" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-executionengine-orcmcjit-remote" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-executionengine-orcmcjit" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-executionengine-orcmcjit" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-executionengine-runtimedyld-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-executionengine-runtimedyld-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-executionengine-runtimedyld-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-executionengine-runtimedyld-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-executionengine-runtimedyld-mips" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-executionengine-runtimedyld-mips" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-executionengine-runtimedyld-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-executionengine-runtimedyld-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-executionengine-runtimedyld-systemz" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-executionengine-runtimedyld-systemz" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-executionengine-runtimedyld-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-executionengine-runtimedyld-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-executionengine-runtimedyld" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-executionengine-runtimedyld" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-executionengine" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-executionengine" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-feature-operandbundles" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-feature-operandbundles" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-feature" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-feature" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-filecheck" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-filecheck" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation-addresssanitizer-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation-addresssanitizer-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation-addresssanitizer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation-addresssanitizer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation-boundschecking" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation-boundschecking" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation-dataflowsanitizer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation-dataflowsanitizer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation-efficiencysanitizer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation-efficiencysanitizer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation-hwaddresssanitizer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation-hwaddresssanitizer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation-instrprofiling-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation-instrprofiling-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation-instrprofiling" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation-instrprofiling" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation-memorysanitizer-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation-memorysanitizer-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation-memorysanitizer-mips" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation-memorysanitizer-mips" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation-memorysanitizer-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation-memorysanitizer-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation-memorysanitizer-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation-memorysanitizer-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation-memorysanitizer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation-memorysanitizer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation-sanitizercoverage" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation-sanitizercoverage" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation-threadsanitizer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation-threadsanitizer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-integer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-integer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-jitlistener" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-jitlistener" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-linker" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-linker" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-lto-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-lto-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-lto-resolution-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-lto-resolution-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-lto-resolution" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-lto-resolution" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-lto-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-lto-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-lto" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-lto" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-aarch64-sve-assembler_tests" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-aarch64-sve-assembler_tests" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-aarch64-sve-disassembler_tests" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-aarch64-sve-disassembler_tests" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-aarch64-sve" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-aarch64-sve" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-amdgpu-regression" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-amdgpu-regression" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-arm-alignedbundling" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-arm-alignedbundling" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-arm-windows" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-arm-windows" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-asmparser-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-asmparser-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-asmparser-include" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-asmparser-include" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-asmparser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-asmparser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-avr-out-of-range-fixups" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-avr-out-of-range-fixups" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-avr" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-avr" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-bpf" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-bpf" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-coff-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-coff-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-coff" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-coff" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-arc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-arc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-hexagon" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-hexagon" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-lanai" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-lanai" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-dsp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-dsp" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-dspr2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-dspr2" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-eva" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-eva" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-micromips-dsp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-micromips-dsp" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-micromips-dspr2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-micromips-dspr2" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-micromips-dspr3" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-micromips-dspr3" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-micromips32r3" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-micromips32r3" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-micromips32r6" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-micromips32r6" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-mips1" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-mips1" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-mips2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-mips2" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-mips3" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-mips3" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-mips32" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-mips32" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-mips32r2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-mips32r2" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-mips32r3" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-mips32r3" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-mips32r5" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-mips32r5" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-mips32r6" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-mips32r6" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-mips4" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-mips4" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-mips64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-mips64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-mips64r2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-mips64r2" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-mips64r3" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-mips64r3" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-mips64r5" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-mips64r5" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-mips64r6" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-mips64r6" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-msa" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-msa" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-mt" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-mt" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-sparc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-sparc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-systemz" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-systemz" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-xcore" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-xcore" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-elf-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-elf-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-elf" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-elf" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-hexagon-instructions" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-hexagon-instructions" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-hexagon-packetrules" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-hexagon-packetrules" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-hexagon" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-hexagon" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-lanai" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-lanai" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-macho-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-macho-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-macho-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-macho-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-macho-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-macho-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-macho" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-macho" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-markup" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-markup" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-cnmips" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-cnmips" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-dsp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-dsp" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-dspr2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-dspr2" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-eva" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-eva" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-micromips-dsp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-micromips-dsp" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-micromips-dspr2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-micromips-dspr2" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-micromips-dspr3" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-micromips-dspr3" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-micromips" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-micromips" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-micromips32r6" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-micromips32r6" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-mips1" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-mips1" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-mips2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-mips2" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-mips3" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-mips3" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-mips32" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-mips32" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-mips32r2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-mips32r2" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-mips32r3" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-mips32r3" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-mips32r5" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-mips32r5" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-mips32r6" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-mips32r6" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-mips4" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-mips4" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-mips5" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-mips5" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-mips64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-mips64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-mips64r2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-mips64r2" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-mips64r3" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-mips64r3" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-mips64r5" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-mips64r5" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-mips64r6" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-mips64r6" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-msa" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-msa" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-mt" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-mt" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-riscv" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-riscv" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-sparc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-sparc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-systemz" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-systemz" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-webassembly" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-webassembly" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-x86-alignedbundling" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-x86-alignedbundling" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-metal-avr" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-metal-avr" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-metal" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-metal" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-object-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-object-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-object-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-object-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-object-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-object-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-object-lanai" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-object-lanai" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-object-mips" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-object-mips" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-object-riscv" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-object-riscv" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-object-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-object-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-object" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-object" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-objectyaml-codeview" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-objectyaml-codeview" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-objectyaml-elf" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-objectyaml-elf" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-objectyaml-macho" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-objectyaml-macho" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-objectyaml-wasm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-objectyaml-wasm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-objectyaml" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-objectyaml" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-other-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-other-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-other" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-other" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-safepointirverifier" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-safepointirverifier" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-symbolrewriter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-symbolrewriter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tablegen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tablegen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-thinlto-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-thinlto-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-thinlto" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-thinlto" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-dsymutil-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-dsymutil-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-dsymutil-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-dsymutil-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-dsymutil" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-dsymutil" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-gold-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-gold-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-gold-x86-v1.12" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-gold-x86-v1.12" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-gold-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-gold-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-gold" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-gold" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-ar" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-ar" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-cfi-verify-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-cfi-verify-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-cfi-verify" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-cfi-verify" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-config" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-config" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-cov" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-cov" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-cvtres" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-cvtres" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-cxxdump-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-cxxdump-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-cxxdump" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-cxxdump" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-cxxfilt" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-cxxfilt" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-dlltool" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-dlltool" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-dwarfdump-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-dwarfdump-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-dwarfdump-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-dwarfdump-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-dwarfdump-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-dwarfdump-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-dwarfdump" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-dwarfdump" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-dwp-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-dwp-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-dwp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-dwp" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-extract" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-extract" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-isel-fuzzer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-isel-fuzzer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-lib" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-lib" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-lit" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-lit" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-lto" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-lto" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-lto2-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-lto2-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-lto2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-lto2" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-mc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-mc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-modextract" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-modextract" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-mt" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-mt" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-nm-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-nm-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-nm-wasm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-nm-wasm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-nm-x86-radix" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-nm-x86-radix" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-nm-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-nm-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-nm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-nm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-objcopy" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-objcopy" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-objdump-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-objdump-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-objdump-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-objdump-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-objdump-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-objdump-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-objdump-hexagon" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-objdump-hexagon" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-objdump-mips" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-objdump-mips" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-objdump-webassembly" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-objdump-webassembly" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-objdump-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-objdump-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-objdump" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-objdump" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-opt-fuzzer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-opt-fuzzer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-opt-report" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-opt-report" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-pdbdump" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-pdbdump" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-profdata" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-profdata" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-rc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-rc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-readobj-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-readobj-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-readobj" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-readobj" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-size-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-size-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-size" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-size" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-split" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-split" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-strings" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-strings" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-symbolizer-pdb" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-symbolizer-pdb" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-symbolizer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-symbolizer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-vtabledump" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-vtabledump" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-xray-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-xray-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-xray" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-xray" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-lto" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-lto" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-obj2yaml" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-obj2yaml" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-opt-viewer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-opt-viewer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-sancov-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-sancov-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-sancov" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-sancov" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-sanstats" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-sanstats" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-yaml2obj" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-yaml2obj" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-adce" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-adce" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-adddiscriminators" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-adddiscriminators" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-alignmentfromassumptions" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-alignmentfromassumptions" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-argumentpromotion" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-argumentpromotion" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-atomicexpand-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-atomicexpand-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-atomicexpand-sparc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-atomicexpand-sparc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-atomicexpand-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-atomicexpand-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-atomicexpand" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-atomicexpand" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-atomicexpandloadlinked-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-atomicexpandloadlinked-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-atomicexpandloadlinked" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-atomicexpandloadlinked" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-bbvectorize-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-bbvectorize-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-bbvectorize-xcore" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-bbvectorize-xcore" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-bbvectorize" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-bbvectorize" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-bdce" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-bdce" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-branchfolding" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-branchfolding" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-calledvaluepropagation" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-calledvaluepropagation" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-callsitesplitting" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-callsitesplitting" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-codeextractor-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-codeextractor-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-codeextractor" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-codeextractor" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-codegenprepare-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-codegenprepare-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-codegenprepare-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-codegenprepare-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-codegenprepare-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-codegenprepare-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-codegenprepare-mips" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-codegenprepare-mips" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-codegenprepare-nvptx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-codegenprepare-nvptx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-codegenprepare-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-codegenprepare-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-codegenprepare" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-codegenprepare" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-constanthoisting-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-constanthoisting-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-constanthoisting-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-constanthoisting-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-constanthoisting-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-constanthoisting-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-constanthoisting-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-constanthoisting-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-constanthoisting" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-constanthoisting" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-constantmerge" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-constantmerge" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-constprop" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-constprop" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-coroutines" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-coroutines" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-correlatedvaluepropagation" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-correlatedvaluepropagation" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-countingfunctioninserter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-countingfunctioninserter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-crossdsocfi" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-crossdsocfi" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-dce" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-dce" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-deadargelim" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-deadargelim" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-deadstoreelimination" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-deadstoreelimination" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-divrempairs-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-divrempairs-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-divrempairs-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-divrempairs-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-divrempairs" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-divrempairs" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-earlycse-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-earlycse-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-earlycse" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-earlycse" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-eliminateavailableexternally" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-eliminateavailableexternally" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-entryexitinstrumenter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-entryexitinstrumenter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-expandmemcmp-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-expandmemcmp-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-expandmemcmp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-expandmemcmp" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-float2int" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-float2int" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-forcedfunctionattrs" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-forcedfunctionattrs" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-functionattrs" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-functionattrs" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-functionimport" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-functionimport" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-gcovprofiling" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-gcovprofiling" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-globaldce" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-globaldce" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-globalmerge" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-globalmerge" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-globalopt" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-globalopt" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-globalsplit" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-globalsplit" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-guardwidening" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-guardwidening" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-gvn-pre" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-gvn-pre" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-gvn" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-gvn" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-gvnhoist" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-gvnhoist" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-gvnsink" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-gvnsink" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-indirectbrexpand" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-indirectbrexpand" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-indvarsimplify-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-indvarsimplify-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-indvarsimplify-nvptx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-indvarsimplify-nvptx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-indvarsimplify" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-indvarsimplify" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-inferaddressspaces-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-inferaddressspaces-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-inferaddressspaces-nvptx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-inferaddressspaces-nvptx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-inferaddressspaces" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-inferaddressspaces" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-inferfunctionattrs" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-inferfunctionattrs" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-inline-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-inline-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-inline-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-inline-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-inline-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-inline-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-inline-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-inline-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-inline-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-inline-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-inline" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-inline" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-instcombine-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-instcombine-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-instcombine-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-instcombine-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-instcombine-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-instcombine-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-instcombine-nvptx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-instcombine-nvptx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-instcombine-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-instcombine-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-instcombine-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-instcombine-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-instcombine" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-instcombine" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-instmerge" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-instmerge" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-instnamer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-instnamer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-instsimplify" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-instsimplify" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-interleavedaccess-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-interleavedaccess-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-interleavedaccess-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-interleavedaccess-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-interleavedaccess-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-interleavedaccess-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-interleavedaccess" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-interleavedaccess" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-internalize" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-internalize" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-ipconstantprop" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-ipconstantprop" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-irce" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-irce" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-jumpthreading" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-jumpthreading" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-lcssa" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-lcssa" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-licm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-licm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loadcombine" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loadcombine" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loadstorevectorizer-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loadstorevectorizer-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loadstorevectorizer-nvptx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loadstorevectorizer-nvptx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loadstorevectorizer-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loadstorevectorizer-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loadstorevectorizer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loadstorevectorizer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopdataprefetch-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopdataprefetch-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopdataprefetch-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopdataprefetch-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopdataprefetch" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopdataprefetch" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopdeletion" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopdeletion" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopdistribute" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopdistribute" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopidiom-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopidiom-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopidiom-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopidiom-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopidiom-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopidiom-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopidiom" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopidiom" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopinterchange" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopinterchange" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-looploadelim" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-looploadelim" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-looppredication" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-looppredication" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopreroll" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopreroll" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-looprotate" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-looprotate" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopsimplify" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopsimplify" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopsimplifycfg" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopsimplifycfg" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopstrengthreduce-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopstrengthreduce-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopstrengthreduce-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopstrengthreduce-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopstrengthreduce-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopstrengthreduce-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopstrengthreduce-nvptx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopstrengthreduce-nvptx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopstrengthreduce-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopstrengthreduce-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopstrengthreduce" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopstrengthreduce" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopunroll-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopunroll-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopunroll-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopunroll-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopunroll-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopunroll-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopunroll-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopunroll-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopunroll-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopunroll-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopunroll" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopunroll" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopunswitch-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopunswitch-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopunswitch" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopunswitch" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopvectorize-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopvectorize-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopvectorize-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopvectorize-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopvectorize-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopvectorize-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopvectorize-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopvectorize-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopvectorize-systemz" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopvectorize-systemz" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopvectorize-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopvectorize-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopvectorize-xcore" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopvectorize-xcore" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopvectorize" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopvectorize" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopversioning" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopversioning" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopversioninglicm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopversioninglicm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loweratomic" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loweratomic" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-lowerbitsets" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-lowerbitsets" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-lowerexpectintrinsic" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-lowerexpectintrinsic" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-lowerguardintrinsic" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-lowerguardintrinsic" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-lowerinvoke" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-lowerinvoke" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-lowerswitch" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-lowerswitch" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-lowertypetests" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-lowertypetests" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-mem2reg" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-mem2reg" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-memcpyopt" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-memcpyopt" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-mergefunc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-mergefunc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-mergeicmps-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-mergeicmps-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-mergeicmps" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-mergeicmps" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-metarenamer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-metarenamer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-nameanonfunctions" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-nameanonfunctions" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-nameanonglobals" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-nameanonglobals" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-naryreassociate-nvptx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-naryreassociate-nvptx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-naryreassociate" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-naryreassociate" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-newgvn" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-newgvn" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-objcarc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-objcarc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-partiallyinlinelibcalls-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-partiallyinlinelibcalls-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-partiallyinlinelibcalls" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-partiallyinlinelibcalls" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-pgoprofile-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-pgoprofile-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-pgoprofile" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-pgoprofile" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-phaseordering" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-phaseordering" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-placesafepoints" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-placesafepoints" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-preiselintrinsiclowering" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-preiselintrinsiclowering" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-pruneeh" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-pruneeh" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-reassociate" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-reassociate" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-reg2mem" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-reg2mem" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-rewritestatepointsforgc-deopt-bundles" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-rewritestatepointsforgc-deopt-bundles" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-rewritestatepointsforgc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-rewritestatepointsforgc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-safestack-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-safestack-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-safestack-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-safestack-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-safestack-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-safestack-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-safestack" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-safestack" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-sampleprofile" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-sampleprofile" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-scalarizer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-scalarizer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-scalarrepl" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-scalarrepl" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-sccp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-sccp" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-separateconstoffsetfromgep-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-separateconstoffsetfromgep-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-separateconstoffsetfromgep-nvptx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-separateconstoffsetfromgep-nvptx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-separateconstoffsetfromgep" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-separateconstoffsetfromgep" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-simpleloopunswitch" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-simpleloopunswitch" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-simplifycfg-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-simplifycfg-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-simplifycfg-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-simplifycfg-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-simplifycfg-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-simplifycfg-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-simplifycfg-hexagon" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-simplifycfg-hexagon" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-simplifycfg-mips" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-simplifycfg-mips" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-simplifycfg-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-simplifycfg-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-simplifycfg-sparc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-simplifycfg-sparc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-simplifycfg-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-simplifycfg-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-simplifycfg" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-simplifycfg" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-sink" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-sink" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-slpvectorizer-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-slpvectorizer-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-slpvectorizer-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-slpvectorizer-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-slpvectorizer-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-slpvectorizer-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-slpvectorizer-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-slpvectorizer-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-slpvectorizer-systemz" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-slpvectorizer-systemz" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-slpvectorizer-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-slpvectorizer-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-slpvectorizer-xcore" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-slpvectorizer-xcore" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-slpvectorizer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-slpvectorizer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-speculatearoundphis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-speculatearoundphis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-speculativeexecution" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-speculativeexecution" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-sroa" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-sroa" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-straightlinestrengthreduce-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-straightlinestrengthreduce-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-straightlinestrengthreduce-nvptx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-straightlinestrengthreduce-nvptx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-straightlinestrengthreduce-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-straightlinestrengthreduce-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-straightlinestrengthreduce" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-straightlinestrengthreduce" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-stripdeadprototypes" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-stripdeadprototypes" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-stripsymbols" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-stripsymbols" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-structurizecfg-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-structurizecfg-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-structurizecfg" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-structurizecfg" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-tailcallelim" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-tailcallelim" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-taildup-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-taildup-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-taildup" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-taildup" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-thinltobitcodewriter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-thinltobitcodewriter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-util-memoryssa" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-util-memoryssa" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-util-predicateinfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-util-predicateinfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-util" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-util" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-wholeprogramdevirt" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-wholeprogramdevirt" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-unit" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-unit" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-verifier" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-verifier" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-yamlparser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-yamlparser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-lsan" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-lsan" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-msan" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-msan" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-profile" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-profile" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-safestack" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-safestack" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-sanitizer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-sanitizer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-scudo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-scudo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-tsan" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-tsan" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-ubsan-minimal" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-ubsan-minimal" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-ubsan" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-ubsan" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-xray" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-xray" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang-check" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang-check" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="clang-check">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang-diff" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang-diff" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="clang-diff">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang-format" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang-format" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="clang-format">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang-func-mapping" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang-func-mapping" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="clang-func-mapping">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang-fuzzer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang-fuzzer" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="clang-fuzzer">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang-headers" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang-headers" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang-import-test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang-import-test" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="clang-import-test">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang-interpreter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang-interpreter" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="clang-interpreter">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang-offload-bundler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang-offload-bundler" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="clang-offload-bundler">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang-refactor" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang-refactor" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="clang-refactor">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang-rename" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang-rename" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="clang-rename">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang-tablegen-targets" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang-tablegen-targets" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang-tblgen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang-tblgen" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="clang-tblgen">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang-test-depends" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang-test-depends" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang-test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang-test" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="clang">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clangARCMigrate" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clangARCMigrate" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clangAST" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clangAST" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clangASTMatchers" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clangASTMatchers" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clangAnalysis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clangAnalysis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clangBasic" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clangBasic" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clangCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clangCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clangCrossTU" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clangCrossTU" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clangDriver" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clangDriver" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clangDynamicASTMatchers" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clangDynamicASTMatchers" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clangEdit" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clangEdit" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clangFormat" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clangFormat" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clangFrontend" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clangFrontend" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clangFrontendTool" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clangFrontendTool" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clangHandleCXX" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clangHandleCXX" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clangIndex" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clangIndex" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clangLex" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clangLex" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clangParse" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clangParse" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clangRewrite" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clangRewrite" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clangRewriteFrontend" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clangRewriteFrontend" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clangSema" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clangSema" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clangSerialization" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clangSerialization" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clangStaticAnalyzerCheckers" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clangStaticAnalyzerCheckers" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clangStaticAnalyzerCore" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clangStaticAnalyzerCore" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clangStaticAnalyzerFrontend" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clangStaticAnalyzerFrontend" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clangTooling" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clangTooling" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clangToolingASTDiff" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clangToolingASTDiff" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clangToolingCore" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clangToolingCore" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clangToolingRefactor" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clangToolingRefactor" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.asan-dynamic-i386-version-list" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.asan-dynamic-i386-version-list" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.asan-dynamic-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.asan-dynamic-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.asan-dynamic-x86_64-version-list" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.asan-dynamic-x86_64-version-list" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.asan-dynamic-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.asan-dynamic-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.asan-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.asan-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.asan-preinit-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.asan-preinit-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.asan-preinit-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.asan-preinit-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.asan-x86_64-symbols" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.asan-x86_64-symbols" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.asan-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.asan-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.asan_cxx-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.asan_cxx-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.asan_cxx-x86_64-symbols" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.asan_cxx-x86_64-symbols" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.asan_cxx-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.asan_cxx-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.builtins-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.builtins-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.builtins-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.builtins-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.cfi-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.cfi-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.cfi-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.cfi-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.cfi_diag-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.cfi_diag-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.cfi_diag-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.cfi_diag-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.dd-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.dd-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.dfsan-x86_64-symbols" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.dfsan-x86_64-symbols" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.dfsan-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.dfsan-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.dyndd-dynamic-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.dyndd-dynamic-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.esan-x86_64-symbols" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.esan-x86_64-symbols" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.esan-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.esan-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.fuzzer-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.fuzzer-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.fuzzer_no_main-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.fuzzer_no_main-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.lsan-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.lsan-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.lsan-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.lsan-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.msan-x86_64-symbols" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.msan-x86_64-symbols" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.msan-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.msan-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.msan_cxx-x86_64-symbols" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.msan_cxx-x86_64-symbols" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.msan_cxx-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.msan_cxx-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.profile-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.profile-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.profile-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.profile-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.safestack-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.safestack-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.safestack-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.safestack-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.scudo-dynamic-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.scudo-dynamic-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.scudo-dynamic-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.scudo-dynamic-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.scudo-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.scudo-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.scudo-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.scudo-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.scudo_cxx-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.scudo_cxx-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.scudo_cxx-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.scudo_cxx-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.stats-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.stats-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.stats-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.stats-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.stats_client-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.stats_client-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.stats_client-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.stats_client-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.tsan-x86_64-symbols" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.tsan-x86_64-symbols" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.tsan-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.tsan-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.tsan_cxx-x86_64-symbols" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.tsan_cxx-x86_64-symbols" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.tsan_cxx-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.tsan_cxx-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.ubsan_minimal-dynamic-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.ubsan_minimal-dynamic-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.ubsan_minimal-dynamic-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.ubsan_minimal-dynamic-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.ubsan_minimal-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.ubsan_minimal-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.ubsan_minimal-x86_64-symbols" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.ubsan_minimal-x86_64-symbols" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.ubsan_minimal-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.ubsan_minimal-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.ubsan_standalone-dynamic-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.ubsan_standalone-dynamic-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.ubsan_standalone-dynamic-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.ubsan_standalone-dynamic-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.ubsan_standalone-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.ubsan_standalone-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.ubsan_standalone-x86_64-symbols" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.ubsan_standalone-x86_64-symbols" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.ubsan_standalone-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.ubsan_standalone-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.ubsan_standalone_cxx-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.ubsan_standalone_cxx-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.ubsan_standalone_cxx-x86_64-symbols" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.ubsan_standalone_cxx-x86_64-symbols" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.ubsan_standalone_cxx-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.ubsan_standalone_cxx-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clang_rt.xray-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="clang_rt.xray-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cmake-exports" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="cmake-exports" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="compiler-rt-headers" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="compiler-rt-headers" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="compiler-rt" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="compiler-rt" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="count" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="count" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="count">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="dd" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="dd" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="dfsan" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="dfsan" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="dfsan_abilist" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="dfsan_abilist" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="diagtool" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="diagtool" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="diagtool">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="esan" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="esan" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="fuzzer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="fuzzer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gtest" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="gtest" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gtest_main" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="gtest_main" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAArch64AsmParser-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAArch64AsmParser-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAArch64AsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAArch64AsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAArch64AsmPrinter-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAArch64AsmPrinter-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAArch64AsmPrinter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAArch64AsmPrinter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAArch64CodeGen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAArch64CodeGen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAArch64CodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAArch64CodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAArch64Desc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAArch64Desc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAArch64Desc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAArch64Desc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAArch64Disassembler-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAArch64Disassembler-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAArch64Disassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAArch64Disassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAArch64Info-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAArch64Info-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAArch64Info" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAArch64Info" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAArch64Utils-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAArch64Utils-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAArch64Utils" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAArch64Utils" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAMDGPUAsmParser-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAMDGPUAsmParser-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAMDGPUAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAMDGPUAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAMDGPUAsmPrinter-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAMDGPUAsmPrinter-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAMDGPUAsmPrinter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAMDGPUAsmPrinter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAMDGPUCodeGen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAMDGPUCodeGen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAMDGPUCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAMDGPUCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAMDGPUDesc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAMDGPUDesc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAMDGPUDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAMDGPUDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAMDGPUDisassembler-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAMDGPUDisassembler-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAMDGPUDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAMDGPUDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAMDGPUInfo-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAMDGPUInfo-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAMDGPUInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAMDGPUInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAMDGPUUtils-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAMDGPUUtils-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAMDGPUUtils" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAMDGPUUtils" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMARMAsmParser-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMARMAsmParser-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMARMAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMARMAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMARMAsmPrinter-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMARMAsmPrinter-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMARMAsmPrinter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMARMAsmPrinter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMARMCodeGen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMARMCodeGen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMARMCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMARMCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMARMDesc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMARMDesc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMARMDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMARMDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMARMDisassembler-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMARMDisassembler-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMARMDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMARMDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMARMInfo-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMARMInfo-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMARMInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMARMInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMARMUtils-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMARMUtils-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMARMUtils" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMARMUtils" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAnalysis-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAnalysis-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAnalysis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAnalysis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAsmParser-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAsmParser-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAsmPrinter-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAsmPrinter-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAsmPrinter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAsmPrinter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBPFAsmParser-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBPFAsmParser-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBPFAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBPFAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBPFAsmPrinter-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBPFAsmPrinter-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBPFAsmPrinter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBPFAsmPrinter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBPFCodeGen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBPFCodeGen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBPFCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBPFCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBPFDesc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBPFDesc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBPFDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBPFDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBPFDisassembler-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBPFDisassembler-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBPFDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBPFDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBPFInfo-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBPFInfo-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBPFInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBPFInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBinaryFormat-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBinaryFormat-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBinaryFormat" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBinaryFormat" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBitReader-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBitReader-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBitReader" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBitReader" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBitWriter-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBitWriter-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBitWriter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBitWriter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMCodeGen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMCodeGen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMCore-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMCore-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMCore" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMCore" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMCoroutines-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMCoroutines-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMCoroutines" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMCoroutines" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMCoverage-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMCoverage-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMCoverage" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMCoverage" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMDebugInfoCodeView-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMDebugInfoCodeView-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMDebugInfoCodeView" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMDebugInfoCodeView" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMDebugInfoDWARF-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMDebugInfoDWARF-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMDebugInfoDWARF" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMDebugInfoDWARF" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMDebugInfoMSF-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMDebugInfoMSF-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMDebugInfoMSF" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMDebugInfoMSF" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMDebugInfoPDB-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMDebugInfoPDB-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMDebugInfoPDB" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMDebugInfoPDB" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMDemangle-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMDemangle-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMDemangle" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMDemangle" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMDlltoolDriver-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMDlltoolDriver-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMDlltoolDriver" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMDlltoolDriver" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMExecutionEngine-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMExecutionEngine-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMExecutionEngine" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMExecutionEngine" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMFuzzMutate-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMFuzzMutate-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMFuzzMutate" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMFuzzMutate" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMGlobalISel-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMGlobalISel-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMGlobalISel" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMGlobalISel" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMHexagonAsmParser-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMHexagonAsmParser-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMHexagonAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMHexagonAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMHexagonCodeGen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMHexagonCodeGen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMHexagonCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMHexagonCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMHexagonDesc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMHexagonDesc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMHexagonDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMHexagonDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMHexagonDisassembler-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMHexagonDisassembler-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMHexagonDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMHexagonDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMHexagonInfo-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMHexagonInfo-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMHexagonInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMHexagonInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMIRReader-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMIRReader-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMIRReader" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMIRReader" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMInstCombine-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMInstCombine-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMInstCombine" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMInstCombine" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMInstrumentation-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMInstrumentation-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMInstrumentation" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMInstrumentation" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMInterpreter-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMInterpreter-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMInterpreter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMInterpreter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLTO-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLTO-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLTO" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLTO" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLanaiAsmParser-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLanaiAsmParser-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLanaiAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLanaiAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLanaiAsmPrinter-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLanaiAsmPrinter-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLanaiAsmPrinter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLanaiAsmPrinter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLanaiCodeGen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLanaiCodeGen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLanaiCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLanaiCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLanaiDesc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLanaiDesc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLanaiDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLanaiDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLanaiDisassembler-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLanaiDisassembler-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLanaiDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLanaiDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLanaiInfo-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLanaiInfo-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLanaiInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLanaiInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLibDriver-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLibDriver-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLibDriver" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLibDriver" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLineEditor-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLineEditor-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLineEditor" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLineEditor" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLinker-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLinker-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLinker" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLinker" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMC-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMC-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMC" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMC" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMCDisassembler-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMCDisassembler-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMCDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMCDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMCJIT-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMCJIT-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMCJIT" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMCJIT" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMCParser-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMCParser-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMCParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMCParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMIRParser-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMIRParser-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMIRParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMIRParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMSP430AsmPrinter-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMSP430AsmPrinter-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMSP430AsmPrinter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMSP430AsmPrinter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMSP430CodeGen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMSP430CodeGen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMSP430CodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMSP430CodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMSP430Desc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMSP430Desc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMSP430Desc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMSP430Desc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMSP430Info-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMSP430Info-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMSP430Info" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMSP430Info" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMipsAsmParser-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMipsAsmParser-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMipsAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMipsAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMipsAsmPrinter-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMipsAsmPrinter-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMipsAsmPrinter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMipsAsmPrinter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMipsCodeGen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMipsCodeGen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMipsCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMipsCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMipsDesc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMipsDesc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMipsDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMipsDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMipsDisassembler-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMipsDisassembler-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMipsDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMipsDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMipsInfo-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMipsInfo-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMipsInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMipsInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMNVPTXAsmPrinter-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMNVPTXAsmPrinter-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMNVPTXAsmPrinter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMNVPTXAsmPrinter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMNVPTXCodeGen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMNVPTXCodeGen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMNVPTXCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMNVPTXCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMNVPTXDesc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMNVPTXDesc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMNVPTXDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMNVPTXDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMNVPTXInfo-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMNVPTXInfo-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMNVPTXInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMNVPTXInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMObjCARCOpts-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMObjCARCOpts-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMObjCARCOpts" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMObjCARCOpts" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMObject-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMObject-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMObject" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMObject" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMObjectYAML-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMObjectYAML-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMObjectYAML" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMObjectYAML" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMOption-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMOption-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMOption" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMOption" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMOrcJIT-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMOrcJIT-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMOrcJIT" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMOrcJIT" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMPasses-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMPasses-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMPasses" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMPasses" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMPowerPCAsmParser-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMPowerPCAsmParser-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMPowerPCAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMPowerPCAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMPowerPCAsmPrinter-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMPowerPCAsmPrinter-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMPowerPCAsmPrinter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMPowerPCAsmPrinter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMPowerPCCodeGen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMPowerPCCodeGen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMPowerPCCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMPowerPCCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMPowerPCDesc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMPowerPCDesc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMPowerPCDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMPowerPCDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMPowerPCDisassembler-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMPowerPCDisassembler-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMPowerPCDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMPowerPCDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMPowerPCInfo-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMPowerPCInfo-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMPowerPCInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMPowerPCInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMProfileData-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMProfileData-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMProfileData" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMProfileData" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMRuntimeDyld-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMRuntimeDyld-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMRuntimeDyld" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMRuntimeDyld" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMScalarOpts-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMScalarOpts-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMScalarOpts" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMScalarOpts" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSelectionDAG-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSelectionDAG-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSelectionDAG" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSelectionDAG" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSparcAsmParser-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSparcAsmParser-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSparcAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSparcAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSparcAsmPrinter-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSparcAsmPrinter-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSparcAsmPrinter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSparcAsmPrinter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSparcCodeGen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSparcCodeGen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSparcCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSparcCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSparcDesc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSparcDesc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSparcDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSparcDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSparcDisassembler-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSparcDisassembler-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSparcDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSparcDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSparcInfo-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSparcInfo-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSparcInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSparcInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSupport-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSupport-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSupport" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSupport" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSymbolize-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSymbolize-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSymbolize" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSymbolize" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSystemZAsmParser-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSystemZAsmParser-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSystemZAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSystemZAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSystemZAsmPrinter-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSystemZAsmPrinter-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSystemZAsmPrinter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSystemZAsmPrinter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSystemZCodeGen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSystemZCodeGen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSystemZCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSystemZCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSystemZDesc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSystemZDesc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSystemZDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSystemZDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSystemZDisassembler-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSystemZDisassembler-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSystemZDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSystemZDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSystemZInfo-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSystemZInfo-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSystemZInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSystemZInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMTableGen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMTableGen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMTarget-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMTarget-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMTarget" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMTarget" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMTransformUtils-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMTransformUtils-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMTransformUtils" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMTransformUtils" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMVectorize-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMVectorize-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMVectorize" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMVectorize" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMWindowsManifest-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMWindowsManifest-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMWindowsManifest" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMWindowsManifest" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMX86AsmParser-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMX86AsmParser-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMX86AsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMX86AsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMX86AsmPrinter-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMX86AsmPrinter-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMX86AsmPrinter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMX86AsmPrinter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMX86CodeGen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMX86CodeGen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMX86CodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMX86CodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMX86Desc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMX86Desc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMX86Desc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMX86Desc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMX86Disassembler-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMX86Disassembler-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMX86Disassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMX86Disassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMX86Info-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMX86Info-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMX86Info" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMX86Info" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMX86Utils-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMX86Utils-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMX86Utils" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMX86Utils" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMXCoreAsmPrinter-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMXCoreAsmPrinter-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMXCoreAsmPrinter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMXCoreAsmPrinter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMXCoreCodeGen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMXCoreCodeGen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMXCoreCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMXCoreCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMXCoreDesc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMXCoreDesc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMXCoreDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMXCoreDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMXCoreDisassembler-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMXCoreDisassembler-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMXCoreDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMXCoreDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMXCoreInfo-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMXCoreInfo-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMXCoreInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMXCoreInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMXRay-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMXRay-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMXRay" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMXRay" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMipo-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMipo-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMipo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMipo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LTO-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LTO-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LTO" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LTO" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-asan-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-asan-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-asan" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-asan" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-bugpoint-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-bugpoint-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-bugpoint" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-bugpoint" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-builtins-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-builtins-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-builtins" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-builtins" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-c-index-test-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-c-index-test-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-c-index-test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-c-index-test" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-cfi-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-cfi-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-cfi" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-cfi" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang-format-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang-format-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang-format" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang-format" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang-headers-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang-headers-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang-headers" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang-headers" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang-import-test-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang-import-test-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang-import-test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang-import-test" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang-refactor-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang-refactor-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang-refactor" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang-refactor" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang-rename-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang-rename-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang-rename" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang-rename" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.asan-dynamic-i386-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.asan-dynamic-i386-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.asan-dynamic-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.asan-dynamic-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.asan-dynamic-x86_64-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.asan-dynamic-x86_64-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.asan-dynamic-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.asan-dynamic-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.asan-i386-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.asan-i386-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.asan-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.asan-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.asan-preinit-i386-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.asan-preinit-i386-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.asan-preinit-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.asan-preinit-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.asan-preinit-x86_64-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.asan-preinit-x86_64-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.asan-preinit-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.asan-preinit-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.asan-x86_64-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.asan-x86_64-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.asan-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.asan-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.asan_cxx-i386-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.asan_cxx-i386-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.asan_cxx-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.asan_cxx-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.asan_cxx-x86_64-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.asan_cxx-x86_64-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.asan_cxx-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.asan_cxx-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.builtins-i386-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.builtins-i386-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.builtins-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.builtins-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.builtins-x86_64-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.builtins-x86_64-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.builtins-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.builtins-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.cfi-i386-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.cfi-i386-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.cfi-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.cfi-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.cfi-x86_64-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.cfi-x86_64-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.cfi-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.cfi-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.cfi_diag-i386-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.cfi_diag-i386-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.cfi_diag-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.cfi_diag-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.cfi_diag-x86_64-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.cfi_diag-x86_64-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.cfi_diag-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.cfi_diag-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.dd-x86_64-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.dd-x86_64-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.dd-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.dd-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.dfsan-x86_64-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.dfsan-x86_64-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.dfsan-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.dfsan-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.dyndd-dynamic-x86_64-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.dyndd-dynamic-x86_64-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.dyndd-dynamic-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.dyndd-dynamic-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.esan-x86_64-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.esan-x86_64-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.esan-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.esan-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.fuzzer-x86_64-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.fuzzer-x86_64-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.fuzzer-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.fuzzer-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.fuzzer_no_main-x86_64-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.fuzzer_no_main-x86_64-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.fuzzer_no_main-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.fuzzer_no_main-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.lsan-i386-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.lsan-i386-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.lsan-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.lsan-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.lsan-x86_64-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.lsan-x86_64-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.lsan-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.lsan-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.msan-x86_64-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.msan-x86_64-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.msan-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.msan-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.msan_cxx-x86_64-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.msan_cxx-x86_64-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.msan_cxx-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.msan_cxx-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.profile-i386-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.profile-i386-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.profile-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.profile-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.profile-x86_64-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.profile-x86_64-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.profile-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.profile-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.safestack-i386-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.safestack-i386-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.safestack-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.safestack-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.safestack-x86_64-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.safestack-x86_64-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.safestack-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.safestack-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.scudo-dynamic-i386-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.scudo-dynamic-i386-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.scudo-dynamic-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.scudo-dynamic-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.scudo-dynamic-x86_64-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.scudo-dynamic-x86_64-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.scudo-dynamic-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.scudo-dynamic-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.scudo-i386-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.scudo-i386-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.scudo-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.scudo-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.scudo-x86_64-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.scudo-x86_64-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.scudo-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.scudo-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.scudo_cxx-i386-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.scudo_cxx-i386-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.scudo_cxx-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.scudo_cxx-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.scudo_cxx-x86_64-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.scudo_cxx-x86_64-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.scudo_cxx-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.scudo_cxx-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.stats-i386-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.stats-i386-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.stats-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.stats-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.stats-x86_64-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.stats-x86_64-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.stats-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.stats-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.stats_client-i386-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.stats_client-i386-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.stats_client-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.stats_client-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.stats_client-x86_64-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.stats_client-x86_64-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.stats_client-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.stats_client-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.tsan-x86_64-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.tsan-x86_64-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.tsan-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.tsan-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.tsan_cxx-x86_64-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.tsan_cxx-x86_64-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.tsan_cxx-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.tsan_cxx-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.ubsan_minimal-dynamic-i386-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.ubsan_minimal-dynamic-i386-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.ubsan_minimal-dynamic-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.ubsan_minimal-dynamic-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.ubsan_minimal-dynamic-x86_64-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.ubsan_minimal-dynamic-x86_64-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.ubsan_minimal-dynamic-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.ubsan_minimal-dynamic-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.ubsan_minimal-i386-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.ubsan_minimal-i386-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.ubsan_minimal-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.ubsan_minimal-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.ubsan_minimal-x86_64-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.ubsan_minimal-x86_64-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.ubsan_minimal-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.ubsan_minimal-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.ubsan_standalone-dynamic-i386-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.ubsan_standalone-dynamic-i386-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.ubsan_standalone-dynamic-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.ubsan_standalone-dynamic-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.ubsan_standalone-dynamic-x86_64-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.ubsan_standalone-dynamic-x86_64-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.ubsan_standalone-dynamic-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.ubsan_standalone-dynamic-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.ubsan_standalone-i386-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.ubsan_standalone-i386-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.ubsan_standalone-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.ubsan_standalone-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.ubsan_standalone-x86_64-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.ubsan_standalone-x86_64-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.ubsan_standalone-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.ubsan_standalone-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.ubsan_standalone_cxx-i386-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.ubsan_standalone_cxx-i386-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.ubsan_standalone_cxx-i386" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.ubsan_standalone_cxx-i386" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.ubsan_standalone_cxx-x86_64-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.ubsan_standalone_cxx-x86_64-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.ubsan_standalone_cxx-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.ubsan_standalone_cxx-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.xray-x86_64-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.xray-x86_64-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-clang_rt.xray-x86_64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-clang_rt.xray-x86_64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-cmake-exports-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-cmake-exports-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-cmake-exports" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-cmake-exports" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-compiler-rt-headers-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-compiler-rt-headers-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-compiler-rt-headers" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-compiler-rt-headers" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-compiler-rt-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-compiler-rt-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-compiler-rt" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-compiler-rt" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-dd-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-dd-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-dd" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-dd" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-dfsan-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-dfsan-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-dfsan" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-dfsan" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-fuzzer-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-fuzzer-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-fuzzer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-fuzzer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-libclang-headers-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-libclang-headers-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-libclang-headers" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-libclang-headers" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-libclang-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-libclang-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-libclang" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-libclang" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-lli-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-lli-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-lli" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-lli" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-ar-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-ar-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-ar" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-ar" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-as-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-as-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-as" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-as" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-bcanalyzer-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-bcanalyzer-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-bcanalyzer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-bcanalyzer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-c-test-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-c-test-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-c-test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-c-test" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-cat-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-cat-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-cat" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-cat" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-cfi-verify-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-cfi-verify-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-cfi-verify" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-cfi-verify" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-config-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-config-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-config" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-config" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-cov-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-cov-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-cov" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-cov" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-cvtres-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-cvtres-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-cvtres" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-cvtres" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-cxxdump-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-cxxdump-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-cxxdump" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-cxxdump" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-cxxfilt-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-cxxfilt-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-cxxfilt" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-cxxfilt" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-diff-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-diff-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-diff" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-diff" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-dis-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-dis-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-dis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-dis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-dlltool-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-dlltool-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-dlltool" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-dlltool" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-dsymutil-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-dsymutil-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-dsymutil" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-dsymutil" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-dwarfdump-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-dwarfdump-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-dwarfdump" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-dwarfdump" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-dwp-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-dwp-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-dwp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-dwp" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-extract-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-extract-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-extract" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-extract" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-headers-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-headers-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-headers" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-headers" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-lib-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-lib-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-lib" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-lib" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-link-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-link-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-link" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-link" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-lto-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-lto-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-lto" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-lto" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-lto2-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-lto2-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-lto2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-lto2" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-mc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-mc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-mc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-mc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-mcmarkup-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-mcmarkup-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-mcmarkup" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-mcmarkup" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-modextract-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-modextract-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-modextract" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-modextract" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-mt-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-mt-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-mt" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-mt" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-nm-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-nm-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-nm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-nm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-objcopy-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-objcopy-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-objcopy" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-objcopy" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-objdump-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-objdump-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-objdump" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-objdump" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-opt-report-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-opt-report-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-opt-report" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-opt-report" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-pdbutil-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-pdbutil-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-pdbutil" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-pdbutil" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-profdata-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-profdata-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-profdata" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-profdata" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-ranlib-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-ranlib-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-ranlib" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-ranlib" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-rc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-rc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-rc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-rc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-readelf-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-readelf-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-readelf" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-readelf" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-readobj-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-readobj-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-readobj" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-readobj" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-rtdyld-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-rtdyld-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-rtdyld" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-rtdyld" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-size-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-size-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-size" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-size" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-split-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-split-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-split" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-split" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-stress-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-stress-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-stress" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-stress" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-strings-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-strings-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-strings" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-strings" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-symbolizer-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-symbolizer-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-symbolizer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-symbolizer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-xray-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-xray-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-xray" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-xray" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-lsan-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-lsan-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-lsan" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-lsan" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-msan-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-msan-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-msan" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-msan" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-obj2yaml-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-obj2yaml-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-obj2yaml" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-obj2yaml" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-opt-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-opt-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-opt" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-opt" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-profile-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-profile-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-profile" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-profile" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-safestack-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-safestack-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-safestack" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-safestack" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-sancov-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-sancov-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-sancov" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-sancov" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-sanstats-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-sanstats-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-sanstats" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-sanstats" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-scudo-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-scudo-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-scudo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-scudo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-stats-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-stats-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-stats" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-stats" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-ubsan-minimal-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-ubsan-minimal-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-ubsan-minimal" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-ubsan-minimal" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-ubsan-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-ubsan-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-ubsan" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-ubsan" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-verify-uselistorder-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-verify-uselistorder-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-verify-uselistorder" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-verify-uselistorder" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-xray-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-xray-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-xray" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-xray" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-yaml2obj-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-yaml2obj-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-yaml2obj" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-yaml2obj" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="intrinsics_gen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="intrinsics_gen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="libclang-headers" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="libclang-headers" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="libclang" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="libclang" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="libclang_exports" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="libclang_exports" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llc" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llc">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="lli-child-target" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="lli-child-target" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="lli-child-target">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="lli" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="lli" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="lli">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-PerfectShuffle" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-PerfectShuffle" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-PerfectShuffle">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-ar" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-ar" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-ar">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-as" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-as" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-as">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-bcanalyzer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-bcanalyzer" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-bcanalyzer">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-c-test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-c-test" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-c-test">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-cat" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-cat" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-cat">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-cfi-verify" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-cfi-verify" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-cfi-verify">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-config" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-config" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-config">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-cov" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-cov" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-cov">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-cvtres" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-cvtres" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-cvtres">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-cxxdump" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-cxxdump" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-cxxdump">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-cxxfilt" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-cxxfilt" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-cxxfilt">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-demangle-fuzzer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-demangle-fuzzer" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-demangle-fuzzer">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-diff" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-diff" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-diff">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-dis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-dis" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-dis">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-dlltool" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-dlltool" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-dsymutil" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-dsymutil" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-dsymutil">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-dwarfdump" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-dwarfdump" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-dwarfdump">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-dwp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-dwp" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-dwp">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-extract" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-extract" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-extract">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-go" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-go" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-headers" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-headers" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-isel-fuzzer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-isel-fuzzer" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-isel-fuzzer">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-lib" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-lib" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-link" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-link" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-link">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-lto" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-lto" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-lto">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-lto2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-lto2" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-lto2">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-mc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-mc" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-mc">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-mcmarkup" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-mcmarkup" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-mcmarkup">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-modextract" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-modextract" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-modextract">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-mt" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-mt" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-mt">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-nm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-nm" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-nm">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-objcopy" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-objcopy" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-objcopy">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-objdump" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-objdump" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-objdump">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-opt-fuzzer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-opt-fuzzer" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-opt-fuzzer">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-opt-report" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-opt-report" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-opt-report">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-pdbutil" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-pdbutil" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-pdbutil">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-profdata" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-profdata" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-profdata">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-ranlib" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-ranlib" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-rc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-rc" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-rc">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-readelf" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-readelf" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-readobj" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-readobj" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-readobj">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-rtdyld" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-rtdyld" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-rtdyld">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-size" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-size" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-size">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-special-case-list-fuzzer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-special-case-list-fuzzer" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-special-case-list-fuzzer">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-split" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-split" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-split">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-stress" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-stress" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-stress">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-strings" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-strings" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-strings">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-symbolizer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-symbolizer" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-symbolizer">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-tblgen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-tblgen" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-tblgen">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-test-depends" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-test-depends" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-xray" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-xray" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-xray">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm_vcsrevision_h" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm_vcsrevision_h" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="lsan" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="lsan" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="msan" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="msan" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="msan_blacklist" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="msan_blacklist" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="not" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="not" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="not">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="obj2yaml" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="obj2yaml" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="obj2yaml">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ocaml_all" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ocaml_all" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ocaml_make_directory" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ocaml_make_directory" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="opt" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="opt" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="opt">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="prepare-check-lit" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="prepare-check-lit" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="profile" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="profile" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="safestack" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="safestack" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="sancov" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="sancov" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="sancov">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="sanstats" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="sanstats" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="sanstats">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="scan-build" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="scan-build" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="scan-view" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="scan-view" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="scudo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="scudo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="srpm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="srpm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="stats" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="stats" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="test-depends" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="test-depends" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="tsan" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="tsan" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ubsan-minimal" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ubsan-minimal" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ubsan" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ubsan" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="verify-uselistorder" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="verify-uselistorder" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="verify-uselistorder">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="xray" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="xray" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="yaml-bench" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="yaml-bench" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="yaml-bench">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="yaml2obj" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="yaml2obj" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="yaml2obj">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="CMake Application.AArch64CommonTableGen" />
      <item itemvalue="CMake Application.AMDGPUCommonTableGen" />
      <item itemvalue="CMake Application.ARMCommonTableGen" />
      <item itemvalue="CMake Application.AnnotateFunctions" />
      <item itemvalue="CMake Application.AsanBenchmarks" />
      <item itemvalue="CMake Application.AsanDynamicUnitTests" />
      <item itemvalue="CMake Application.AsanUnitTests" />
      <item itemvalue="CMake Application.AttributeCompatFuncTableGen" />
      <item itemvalue="CMake Application.BPFCommonTableGen" />
      <item itemvalue="CMake Application.BrainF" />
      <item itemvalue="CMake Application.BugpointPasses" />
      <item itemvalue="CMake Application.BugpointPasses_exports" />
      <item itemvalue="CMake Application.BuildingAJIT-Ch1" />
      <item itemvalue="CMake Application.BuildingAJIT-Ch2" />
      <item itemvalue="CMake Application.BuildingAJIT-Ch3" />
      <item itemvalue="CMake Application.BuildingAJIT-Ch4" />
      <item itemvalue="CMake Application.BuildingAJIT-Ch5" />
      <item itemvalue="CMake Application.BuildingAJIT-Ch5-Server" />
      <item itemvalue="CMake Application.ClangARMNeon" />
      <item itemvalue="CMake Application.ClangAttrClasses" />
      <item itemvalue="CMake Application.ClangAttrDump" />
      <item itemvalue="CMake Application.ClangAttrHasAttributeImpl" />
      <item itemvalue="CMake Application.ClangAttrImpl" />
      <item itemvalue="CMake Application.ClangAttrList" />
      <item itemvalue="CMake Application.ClangAttrPCHRead" />
      <item itemvalue="CMake Application.ClangAttrPCHWrite" />
      <item itemvalue="CMake Application.ClangAttrParsedAttrImpl" />
      <item itemvalue="CMake Application.ClangAttrParsedAttrKinds" />
      <item itemvalue="CMake Application.ClangAttrParsedAttrList" />
      <item itemvalue="CMake Application.ClangAttrParserStringSwitches" />
      <item itemvalue="CMake Application.ClangAttrSpellingListIndex" />
      <item itemvalue="CMake Application.ClangAttrSubMatchRulesParserStringSwitches" />
      <item itemvalue="CMake Application.ClangAttrSubjectMatchRuleList" />
      <item itemvalue="CMake Application.ClangAttrTemplateInstantiate" />
      <item itemvalue="CMake Application.ClangAttrVisitor" />
      <item itemvalue="CMake Application.ClangCommentCommandInfo" />
      <item itemvalue="CMake Application.ClangCommentCommandList" />
      <item itemvalue="CMake Application.ClangCommentHTMLNamedCharacterReferences" />
      <item itemvalue="CMake Application.ClangCommentHTMLTags" />
      <item itemvalue="CMake Application.ClangCommentHTMLTagsProperties" />
      <item itemvalue="CMake Application.ClangCommentNodes" />
      <item itemvalue="CMake Application.ClangDeclNodes" />
      <item itemvalue="CMake Application.ClangDiagnosticAST" />
      <item itemvalue="CMake Application.ClangDiagnosticAnalysis" />
      <item itemvalue="CMake Application.ClangDiagnosticComment" />
      <item itemvalue="CMake Application.ClangDiagnosticCommon" />
      <item itemvalue="CMake Application.ClangDiagnosticCrossTU" />
      <item itemvalue="CMake Application.ClangDiagnosticDriver" />
      <item itemvalue="CMake Application.ClangDiagnosticFrontend" />
      <item itemvalue="CMake Application.ClangDiagnosticGroups" />
      <item itemvalue="CMake Application.ClangDiagnosticIndexName" />
      <item itemvalue="CMake Application.ClangDiagnosticLex" />
      <item itemvalue="CMake Application.ClangDiagnosticParse" />
      <item itemvalue="CMake Application.ClangDiagnosticRefactoring" />
      <item itemvalue="CMake Application.ClangDiagnosticSema" />
      <item itemvalue="CMake Application.ClangDiagnosticSerialization" />
      <item itemvalue="CMake Application.ClangDriverOptions" />
      <item itemvalue="CMake Application.ClangSACheckers" />
      <item itemvalue="CMake Application.ClangStmtNodes" />
      <item itemvalue="CMake Application.ClangUnitTests" />
      <item itemvalue="CMake Application.CvtResTableGen" />
      <item itemvalue="CMake Application.DllOptionsTableGen" />
      <item itemvalue="CMake Application.DynamicLibraryLib" />
      <item itemvalue="CMake Application.Fibonacci" />
      <item itemvalue="CMake Application.FileCheck" />
      <item itemvalue="CMake Application.FuzzerUnitTests" />
      <item itemvalue="CMake Application.GotsanRuntimeCheck" />
      <item itemvalue="CMake Application.HexagonCommonTableGen" />
      <item itemvalue="CMake Application.HowToUseJIT" />
      <item itemvalue="CMake Application.InterceptionUnitTests" />
      <item itemvalue="CMake Application.Kaleidoscope" />
      <item itemvalue="CMake Application.Kaleidoscope-Ch2" />
      <item itemvalue="CMake Application.Kaleidoscope-Ch3" />
      <item itemvalue="CMake Application.Kaleidoscope-Ch4" />
      <item itemvalue="CMake Application.Kaleidoscope-Ch5" />
      <item itemvalue="CMake Application.Kaleidoscope-Ch6" />
      <item itemvalue="CMake Application.Kaleidoscope-Ch7" />
      <item itemvalue="CMake Application.Kaleidoscope-Ch8" />
      <item itemvalue="CMake Application.Kaleidoscope-Ch9" />
      <item itemvalue="CMake Application.LLVMAArch64AsmParser" />
      <item itemvalue="CMake Application.LLVMAArch64AsmPrinter" />
      <item itemvalue="CMake Application.LLVMAArch64CodeGen" />
      <item itemvalue="CMake Application.LLVMAArch64Desc" />
      <item itemvalue="CMake Application.LLVMAArch64Disassembler" />
      <item itemvalue="CMake Application.LLVMAArch64Info" />
      <item itemvalue="CMake Application.LLVMAArch64Utils" />
      <item itemvalue="CMake Application.LLVMAMDGPUAsmParser" />
      <item itemvalue="CMake Application.LLVMAMDGPUAsmPrinter" />
      <item itemvalue="CMake Application.LLVMAMDGPUCodeGen" />
      <item itemvalue="CMake Application.LLVMAMDGPUDesc" />
      <item itemvalue="CMake Application.LLVMAMDGPUDisassembler" />
      <item itemvalue="CMake Application.LLVMAMDGPUInfo" />
      <item itemvalue="CMake Application.LLVMAMDGPUUtils" />
      <item itemvalue="CMake Application.LLVMARMAsmParser" />
      <item itemvalue="CMake Application.LLVMARMAsmPrinter" />
      <item itemvalue="CMake Application.LLVMARMCodeGen" />
      <item itemvalue="CMake Application.LLVMARMDesc" />
      <item itemvalue="CMake Application.LLVMARMDisassembler" />
      <item itemvalue="CMake Application.LLVMARMInfo" />
      <item itemvalue="CMake Application.LLVMARMUtils" />
      <item itemvalue="CMake Application.LLVMAnalysis" />
      <item itemvalue="CMake Application.LLVMAsmParser" />
      <item itemvalue="CMake Application.LLVMAsmPrinter" />
      <item itemvalue="CMake Application.LLVMBPFAsmParser" />
      <item itemvalue="CMake Application.LLVMBPFAsmPrinter" />
      <item itemvalue="CMake Application.LLVMBPFCodeGen" />
      <item itemvalue="CMake Application.LLVMBPFDesc" />
      <item itemvalue="CMake Application.LLVMBPFDisassembler" />
      <item itemvalue="CMake Application.LLVMBPFInfo" />
      <item itemvalue="CMake Application.LLVMBinaryFormat" />
      <item itemvalue="CMake Application.LLVMBitReader" />
      <item itemvalue="CMake Application.LLVMBitWriter" />
      <item itemvalue="CMake Application.LLVMCFIVerify" />
      <item itemvalue="CMake Application.LLVMCodeGen" />
      <item itemvalue="CMake Application.LLVMCore" />
      <item itemvalue="CMake Application.LLVMCoroutines" />
      <item itemvalue="CMake Application.LLVMCoverage" />
      <item itemvalue="CMake Application.LLVMDebugInfoCodeView" />
      <item itemvalue="CMake Application.LLVMDebugInfoDWARF" />
      <item itemvalue="CMake Application.LLVMDebugInfoMSF" />
      <item itemvalue="CMake Application.LLVMDebugInfoPDB" />
      <item itemvalue="CMake Application.LLVMDemangle" />
      <item itemvalue="CMake Application.LLVMDlltoolDriver" />
      <item itemvalue="CMake Application.LLVMExecutionEngine" />
      <item itemvalue="CMake Application.LLVMFuzzMutate" />
      <item itemvalue="CMake Application.LLVMGlobalISel" />
      <item itemvalue="CMake Application.LLVMHello" />
      <item itemvalue="CMake Application.LLVMHello_exports" />
      <item itemvalue="CMake Application.LLVMHexagonAsmParser" />
      <item itemvalue="CMake Application.LLVMHexagonCodeGen" />
      <item itemvalue="CMake Application.LLVMHexagonDesc" />
      <item itemvalue="CMake Application.LLVMHexagonDisassembler" />
      <item itemvalue="CMake Application.LLVMHexagonInfo" />
      <item itemvalue="CMake Application.LLVMIRReader" />
      <item itemvalue="CMake Application.LLVMInstCombine" />
      <item itemvalue="CMake Application.LLVMInstrumentation" />
      <item itemvalue="CMake Application.LLVMInterpreter" />
      <item itemvalue="CMake Application.LLVMLTO" />
      <item itemvalue="CMake Application.LLVMLanaiAsmParser" />
      <item itemvalue="CMake Application.LLVMLanaiAsmPrinter" />
      <item itemvalue="CMake Application.LLVMLanaiCodeGen" />
      <item itemvalue="CMake Application.LLVMLanaiDesc" />
      <item itemvalue="CMake Application.LLVMLanaiDisassembler" />
      <item itemvalue="CMake Application.LLVMLanaiInfo" />
      <item itemvalue="CMake Application.LLVMLibDriver" />
      <item itemvalue="CMake Application.LLVMLineEditor" />
      <item itemvalue="CMake Application.LLVMLinker" />
      <item itemvalue="CMake Application.LLVMMC" />
      <item itemvalue="CMake Application.LLVMMCDisassembler" />
      <item itemvalue="CMake Application.LLVMMCJIT" />
      <item itemvalue="CMake Application.LLVMMCParser" />
      <item itemvalue="CMake Application.LLVMMIRParser" />
      <item itemvalue="CMake Application.LLVMMSP430AsmPrinter" />
      <item itemvalue="CMake Application.LLVMMSP430CodeGen" />
      <item itemvalue="CMake Application.LLVMMSP430Desc" />
      <item itemvalue="CMake Application.LLVMMSP430Info" />
      <item itemvalue="CMake Application.LLVMMipsAsmParser" />
      <item itemvalue="CMake Application.LLVMMipsAsmPrinter" />
      <item itemvalue="CMake Application.LLVMMipsCodeGen" />
      <item itemvalue="CMake Application.LLVMMipsDesc" />
      <item itemvalue="CMake Application.LLVMMipsDisassembler" />
      <item itemvalue="CMake Application.LLVMMipsInfo" />
      <item itemvalue="CMake Application.LLVMNVPTXAsmPrinter" />
      <item itemvalue="CMake Application.LLVMNVPTXCodeGen" />
      <item itemvalue="CMake Application.LLVMNVPTXDesc" />
      <item itemvalue="CMake Application.LLVMNVPTXInfo" />
      <item itemvalue="CMake Application.LLVMObjCARCOpts" />
      <item itemvalue="CMake Application.LLVMObject" />
      <item itemvalue="CMake Application.LLVMObjectYAML" />
      <item itemvalue="CMake Application.LLVMOption" />
      <item itemvalue="CMake Application.LLVMOrcJIT" />
      <item itemvalue="CMake Application.LLVMPasses" />
      <item itemvalue="CMake Application.LLVMPowerPCAsmParser" />
      <item itemvalue="CMake Application.LLVMPowerPCAsmPrinter" />
      <item itemvalue="CMake Application.LLVMPowerPCCodeGen" />
      <item itemvalue="CMake Application.LLVMPowerPCDesc" />
      <item itemvalue="CMake Application.LLVMPowerPCDisassembler" />
      <item itemvalue="CMake Application.LLVMPowerPCInfo" />
      <item itemvalue="CMake Application.LLVMProfileData" />
      <item itemvalue="CMake Application.LLVMRuntimeDyld" />
      <item itemvalue="CMake Application.LLVMScalarOpts" />
      <item itemvalue="CMake Application.LLVMSelectionDAG" />
      <item itemvalue="CMake Application.LLVMSparcAsmParser" />
      <item itemvalue="CMake Application.LLVMSparcAsmPrinter" />
      <item itemvalue="CMake Application.LLVMSparcCodeGen" />
      <item itemvalue="CMake Application.LLVMSparcDesc" />
      <item itemvalue="CMake Application.LLVMSparcDisassembler" />
      <item itemvalue="CMake Application.LLVMSparcInfo" />
      <item itemvalue="CMake Application.LLVMSupport" />
      <item itemvalue="CMake Application.LLVMSymbolize" />
      <item itemvalue="CMake Application.LLVMSystemZAsmParser" />
      <item itemvalue="CMake Application.LLVMSystemZAsmPrinter" />
      <item itemvalue="CMake Application.LLVMSystemZCodeGen" />
      <item itemvalue="CMake Application.LLVMSystemZDesc" />
      <item itemvalue="CMake Application.LLVMSystemZDisassembler" />
      <item itemvalue="CMake Application.LLVMSystemZInfo" />
      <item itemvalue="CMake Application.LLVMTableGen" />
      <item itemvalue="CMake Application.LLVMTarget" />
      <item itemvalue="CMake Application.LLVMTestingSupport" />
      <item itemvalue="CMake Application.LLVMTransformUtils" />
      <item itemvalue="CMake Application.LLVMVectorize" />
      <item itemvalue="CMake Application.LLVMWindowsManifest" />
      <item itemvalue="CMake Application.LLVMX86AsmParser" />
      <item itemvalue="CMake Application.LLVMX86AsmPrinter" />
      <item itemvalue="CMake Application.LLVMX86CodeGen" />
      <item itemvalue="CMake Application.LLVMX86Desc" />
      <item itemvalue="CMake Application.LLVMX86Disassembler" />
      <item itemvalue="CMake Application.LLVMX86Info" />
      <item itemvalue="CMake Application.LLVMX86Utils" />
      <item itemvalue="CMake Application.LLVMXCoreAsmPrinter" />
      <item itemvalue="CMake Application.LLVMXCoreCodeGen" />
      <item itemvalue="CMake Application.LLVMXCoreDesc" />
      <item itemvalue="CMake Application.LLVMXCoreDisassembler" />
      <item itemvalue="CMake Application.LLVMXCoreInfo" />
      <item itemvalue="CMake Application.LLVMXRay" />
      <item itemvalue="CMake Application.LLVMipo" />
      <item itemvalue="CMake Application.LTO" />
      <item itemvalue="CMake Application.LTO_exports" />
      <item itemvalue="CMake Application.LanaiCommonTableGen" />
      <item itemvalue="CMake Application.LibOptionsTableGen" />
      <item itemvalue="CMake Application.MSP430CommonTableGen" />
      <item itemvalue="CMake Application.MipsCommonTableGen" />
      <item itemvalue="CMake Application.ModuleMaker" />
      <item itemvalue="CMake Application.MsanUnitTests" />
      <item itemvalue="CMake Application.MtTableGen" />
      <item itemvalue="CMake Application.NVPTXCommonTableGen" />
      <item itemvalue="CMake Application.OptsTestTableGen" />
      <item itemvalue="CMake Application.ParallelJIT" />
      <item itemvalue="CMake Application.PipSqueak" />
      <item itemvalue="CMake Application.PowerPCCommonTableGen" />
      <item itemvalue="CMake Application.PrintFunctionNames" />
      <item itemvalue="CMake Application.PrintFunctionNames_exports" />
      <item itemvalue="CMake Application.RTAsan.i386" />
      <item itemvalue="CMake Application.RTAsan.x86_64" />
      <item itemvalue="CMake Application.RTAsanTest.i386" />
      <item itemvalue="CMake Application.RTAsanTest.x86_64" />
      <item itemvalue="CMake Application.RTAsan_cxx.i386" />
      <item itemvalue="CMake Application.RTAsan_cxx.x86_64" />
      <item itemvalue="CMake Application.RTAsan_dynamic.i386" />
      <item itemvalue="CMake Application.RTAsan_dynamic.x86_64" />
      <item itemvalue="CMake Application.RTAsan_dynamic_version_script_dummy.i386" />
      <item itemvalue="CMake Application.RTAsan_dynamic_version_script_dummy.x86_64" />
      <item itemvalue="CMake Application.RTAsan_preinit.i386" />
      <item itemvalue="CMake Application.RTAsan_preinit.x86_64" />
      <item itemvalue="CMake Application.RTDD.x86_64" />
      <item itemvalue="CMake Application.RTFuzzerTest.x86_64" />
      <item itemvalue="CMake Application.RTInterception.i386" />
      <item itemvalue="CMake Application.RTInterception.test.i386" />
      <item itemvalue="CMake Application.RTInterception.test.x86_64" />
      <item itemvalue="CMake Application.RTInterception.x86_64" />
      <item itemvalue="CMake Application.RTLSanCommon.i386" />
      <item itemvalue="CMake Application.RTLSanCommon.x86_64" />
      <item itemvalue="CMake Application.RTSanitizerCommon.i386" />
      <item itemvalue="CMake Application.RTSanitizerCommon.test.i386" />
      <item itemvalue="CMake Application.RTSanitizerCommon.test.nolibc.x86_64" />
      <item itemvalue="CMake Application.RTSanitizerCommon.test.x86_64" />
      <item itemvalue="CMake Application.RTSanitizerCommon.x86_64" />
      <item itemvalue="CMake Application.RTSanitizerCommonLibc.i386" />
      <item itemvalue="CMake Application.RTSanitizerCommonLibc.x86_64" />
      <item itemvalue="CMake Application.RTSanitizerCommonLibcNoHooks.i386" />
      <item itemvalue="CMake Application.RTSanitizerCommonLibcNoHooks.x86_64" />
      <item itemvalue="CMake Application.RTSanitizerCommonNoHooks.i386" />
      <item itemvalue="CMake Application.RTSanitizerCommonNoHooks.x86_64" />
      <item itemvalue="CMake Application.RTSanitizerCommonNoLibc.i386" />
      <item itemvalue="CMake Application.RTSanitizerCommonNoLibc.x86_64" />
      <item itemvalue="CMake Application.RTSanitizerCommonNoTermination.i386" />
      <item itemvalue="CMake Application.RTSanitizerCommonNoTermination.x86_64" />
      <item itemvalue="CMake Application.RTUbsan.i386" />
      <item itemvalue="CMake Application.RTUbsan.x86_64" />
      <item itemvalue="CMake Application.RTUbsan_cxx.i386" />
      <item itemvalue="CMake Application.RTUbsan_cxx.x86_64" />
      <item itemvalue="CMake Application.RTUbsan_minimal.i386" />
      <item itemvalue="CMake Application.RTUbsan_minimal.x86_64" />
      <item itemvalue="CMake Application.RTUbsan_standalone.i386" />
      <item itemvalue="CMake Application.RTUbsan_standalone.x86_64" />
      <item itemvalue="CMake Application.RTXray.x86_64" />
      <item itemvalue="CMake Application.RTfuzzer.x86_64" />
      <item itemvalue="CMake Application.RTfuzzer_main.x86_64" />
      <item itemvalue="CMake Application.RcTableGen" />
      <item itemvalue="CMake Application.SampleAnalyzerPlugin" />
      <item itemvalue="CMake Application.SampleAnalyzerPlugin_exports" />
      <item itemvalue="CMake Application.SanitizerLintCheck" />
      <item itemvalue="CMake Application.SanitizerUnitTests" />
      <item itemvalue="CMake Application.SecondLib" />
      <item itemvalue="CMake Application.SparcCommonTableGen" />
      <item itemvalue="CMake Application.StmtDataCollectors" />
      <item itemvalue="CMake Application.SystemZCommonTableGen" />
      <item itemvalue="CMake Application.TAsan-i386-calls-Benchmark" />
      <item itemvalue="CMake Application.TAsan-i386-calls-Dynamic-Test" />
      <item itemvalue="CMake Application.TAsan-i386-calls-Noinst-Test" />
      <item itemvalue="CMake Application.TAsan-i386-calls-Test" />
      <item itemvalue="CMake Application.TAsan-i386-inline-Benchmark" />
      <item itemvalue="CMake Application.TAsan-i386-inline-Dynamic-Test" />
      <item itemvalue="CMake Application.TAsan-i386-inline-Noinst-Test" />
      <item itemvalue="CMake Application.TAsan-i386-inline-Test" />
      <item itemvalue="CMake Application.TAsan-x86_64-calls-Benchmark" />
      <item itemvalue="CMake Application.TAsan-x86_64-calls-Dynamic-Test" />
      <item itemvalue="CMake Application.TAsan-x86_64-calls-Noinst-Test" />
      <item itemvalue="CMake Application.TAsan-x86_64-calls-Test" />
      <item itemvalue="CMake Application.TAsan-x86_64-inline-Benchmark" />
      <item itemvalue="CMake Application.TAsan-x86_64-inline-Dynamic-Test" />
      <item itemvalue="CMake Application.TAsan-x86_64-inline-Noinst-Test" />
      <item itemvalue="CMake Application.TAsan-x86_64-inline-Test" />
      <item itemvalue="CMake Application.TFuzzer-x86_64-Test" />
      <item itemvalue="CMake Application.TInterception-i386-Test" />
      <item itemvalue="CMake Application.TInterception-x86_64-Test" />
      <item itemvalue="CMake Application.TSanitizer-i386-Test" />
      <item itemvalue="CMake Application.TSanitizer-x86_64-Test" />
      <item itemvalue="CMake Application.TSanitizer-x86_64-Test-Nolibc" />
      <item itemvalue="CMake Application.TTsanRtlTest" />
      <item itemvalue="CMake Application.TTsanUnitTest" />
      <item itemvalue="CMake Application.TXRayBufferQueueTest-x86_64-Test" />
      <item itemvalue="CMake Application.TXRayFDRLoggingTest-x86_64-Test" />
      <item itemvalue="CMake Application.TsanUnitTests" />
      <item itemvalue="CMake Application.UnitTests" />
      <item itemvalue="CMake Application.X86CommonTableGen" />
      <item itemvalue="CMake Application.XCoreCommonTableGen" />
      <item itemvalue="CMake Application.XRayUnitTests" />
      <item itemvalue="CMake Application.arcmt-test" />
      <item itemvalue="CMake Application.asan" />
      <item itemvalue="CMake Application.asan_blacklist" />
      <item itemvalue="CMake Application.bugpoint" />
      <item itemvalue="CMake Application.builtins" />
      <item itemvalue="CMake Application.c-arcmt-test" />
      <item itemvalue="CMake Application.c-index-test" />
      <item itemvalue="CMake Application.cfi" />
      <item itemvalue="CMake Application.cfi_blacklist" />
      <item itemvalue="CMake Application.check" />
      <item itemvalue="CMake Application.check-all" />
      <item itemvalue="CMake Application.check-asan" />
      <item itemvalue="CMake Application.check-asan-dynamic" />
      <item itemvalue="CMake Application.check-builtins" />
      <item itemvalue="CMake Application.check-cfi" />
      <item itemvalue="CMake Application.check-cfi-and-supported" />
      <item itemvalue="CMake Application.check-clang" />
      <item itemvalue="CMake Application.check-clang-analysis" />
      <item itemvalue="CMake Application.check-clang-analysis-copypaste" />
      <item itemvalue="CMake Application.check-clang-analysis-diagnostics" />
      <item itemvalue="CMake Application.check-clang-analysis-engine" />
      <item itemvalue="CMake Application.check-clang-analysis-inlining" />
      <item itemvalue="CMake Application.check-clang-analysis-objc" />
      <item itemvalue="CMake Application.check-clang-arcmt" />
      <item itemvalue="CMake Application.check-clang-arcmt-designated-init-in-header" />
      <item itemvalue="CMake Application.check-clang-arcmt-whitelisted" />
      <item itemvalue="CMake Application.check-clang-astmerge" />
      <item itemvalue="CMake Application.check-clang-astmerge-anonymous-fields" />
      <item itemvalue="CMake Application.check-clang-astmerge-asm" />
      <item itemvalue="CMake Application.check-clang-astmerge-category" />
      <item itemvalue="CMake Application.check-clang-astmerge-class" />
      <item itemvalue="CMake Application.check-clang-astmerge-class-template" />
      <item itemvalue="CMake Application.check-clang-astmerge-class-template-partial-spec" />
      <item itemvalue="CMake Application.check-clang-astmerge-class2" />
      <item itemvalue="CMake Application.check-clang-astmerge-codegen-body" />
      <item itemvalue="CMake Application.check-clang-astmerge-codegen-exprs" />
      <item itemvalue="CMake Application.check-clang-astmerge-enum" />
      <item itemvalue="CMake Application.check-clang-astmerge-exprs" />
      <item itemvalue="CMake Application.check-clang-astmerge-exprs-cpp" />
      <item itemvalue="CMake Application.check-clang-astmerge-function" />
      <item itemvalue="CMake Application.check-clang-astmerge-inheritance" />
      <item itemvalue="CMake Application.check-clang-astmerge-init-ctors" />
      <item itemvalue="CMake Application.check-clang-astmerge-interface" />
      <item itemvalue="CMake Application.check-clang-astmerge-macro" />
      <item itemvalue="CMake Application.check-clang-astmerge-namespace" />
      <item itemvalue="CMake Application.check-clang-astmerge-property" />
      <item itemvalue="CMake Application.check-clang-astmerge-struct" />
      <item itemvalue="CMake Application.check-clang-astmerge-typedef" />
      <item itemvalue="CMake Application.check-clang-astmerge-var" />
      <item itemvalue="CMake Application.check-clang-clang-rename" />
      <item itemvalue="CMake Application.check-clang-codecompletion" />
      <item itemvalue="CMake Application.check-clang-codegen" />
      <item itemvalue="CMake Application.check-clang-codegen-avr" />
      <item itemvalue="CMake Application.check-clang-codegen-avr-attributes" />
      <item itemvalue="CMake Application.check-clang-codegen-avr-target-cpu-defines" />
      <item itemvalue="CMake Application.check-clang-codegen-include" />
      <item itemvalue="CMake Application.check-clang-codegencoroutines" />
      <item itemvalue="CMake Application.check-clang-codegencuda" />
      <item itemvalue="CMake Application.check-clang-codegencxx" />
      <item itemvalue="CMake Application.check-clang-codegenobjc" />
      <item itemvalue="CMake Application.check-clang-codegenobjcxx" />
      <item itemvalue="CMake Application.check-clang-codegenopencl" />
      <item itemvalue="CMake Application.check-clang-coverage" />
      <item itemvalue="CMake Application.check-clang-coveragemapping" />
      <item itemvalue="CMake Application.check-clang-cxx" />
      <item itemvalue="CMake Application.check-clang-cxx-basic" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.align" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.def" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.def.odr" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.life" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.link" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.lookup" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.lookup-basic.lookup.argdep" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.lookup-basic.lookup.classref" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.lookup-basic.lookup.elab" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.lookup-basic.lookup.qual" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.lookup-basic.lookup.qual-class.qual" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.lookup-basic.lookup.qual-concept.qual" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.lookup-basic.lookup.qual-namespace.qual" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.lookup-basic.lookup.udir" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.lookup-basic.lookup.unqual" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.lval" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.scope" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.scope-basic.funscope" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.scope-basic.scope.class" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.scope-basic.scope.concept" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.scope-basic.scope.declarative" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.scope-basic.scope.enum" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.scope-basic.scope.hiding" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.scope-basic.scope.local" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.scope-basic.scope.namespace" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.scope-basic.scope.pdecl" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.scope-basic.scope.proto" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.scope-basic.scope.req" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.start" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.start-basic.start.init" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.start-basic.start.main" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.start-basic.start.term" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.stc" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.stc-basic.stc.auto" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.stc-basic.stc.dynamic" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.stc-basic.stc.dynamic-basic.stc.dynamic.allocation" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.stc-basic.stc.dynamic-basic.stc.dynamic.deallocation" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.stc-basic.stc.dynamic-basic.stc.dynamic.safety" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.stc-basic.stc.inherit" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.stc-basic.stc.static" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.stc-basic.stc.thread" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.types" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.types-basic.compound" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.types-basic.fundamental" />
      <item itemvalue="CMake Application.check-clang-cxx-basic-basic.types-basic.type.qualifier" />
      <item itemvalue="CMake Application.check-clang-cxx-class" />
      <item itemvalue="CMake Application.check-clang-cxx-class-class.base" />
      <item itemvalue="CMake Application.check-clang-cxx-class-class.base-class.base.init" />
      <item itemvalue="CMake Application.check-clang-cxx-class-class.bit" />
      <item itemvalue="CMake Application.check-clang-cxx-class-class.friend" />
      <item itemvalue="CMake Application.check-clang-cxx-class-class.local" />
      <item itemvalue="CMake Application.check-clang-cxx-class-class.mem" />
      <item itemvalue="CMake Application.check-clang-cxx-class-class.mfct" />
      <item itemvalue="CMake Application.check-clang-cxx-class-class.mfct-class.mfct.non-static" />
      <item itemvalue="CMake Application.check-clang-cxx-class-class.mfct-class.this" />
      <item itemvalue="CMake Application.check-clang-cxx-class-class.name" />
      <item itemvalue="CMake Application.check-clang-cxx-class-class.nest" />
      <item itemvalue="CMake Application.check-clang-cxx-class-class.nested.type" />
      <item itemvalue="CMake Application.check-clang-cxx-class-class.static" />
      <item itemvalue="CMake Application.check-clang-cxx-class-class.static-class.static.data" />
      <item itemvalue="CMake Application.check-clang-cxx-class-class.static-class.static.mfct" />
      <item itemvalue="CMake Application.check-clang-cxx-class-class.union" />
      <item itemvalue="CMake Application.check-clang-cxx-class-class.union-class.union.anon" />
      <item itemvalue="CMake Application.check-clang-cxx-class.access" />
      <item itemvalue="CMake Application.check-clang-cxx-class.access-class.access.base" />
      <item itemvalue="CMake Application.check-clang-cxx-class.access-class.access.dcl" />
      <item itemvalue="CMake Application.check-clang-cxx-class.access-class.access.nest" />
      <item itemvalue="CMake Application.check-clang-cxx-class.access-class.access.spec" />
      <item itemvalue="CMake Application.check-clang-cxx-class.access-class.access.virt" />
      <item itemvalue="CMake Application.check-clang-cxx-class.access-class.friend" />
      <item itemvalue="CMake Application.check-clang-cxx-class.access-class.paths" />
      <item itemvalue="CMake Application.check-clang-cxx-class.access-class.protected" />
      <item itemvalue="CMake Application.check-clang-cxx-class.derived" />
      <item itemvalue="CMake Application.check-clang-cxx-class.derived-class.abstract" />
      <item itemvalue="CMake Application.check-clang-cxx-class.derived-class.member.lookup" />
      <item itemvalue="CMake Application.check-clang-cxx-class.derived-class.mi" />
      <item itemvalue="CMake Application.check-clang-cxx-class.derived-class.virtual" />
      <item itemvalue="CMake Application.check-clang-cxx-concepts-ts" />
      <item itemvalue="CMake Application.check-clang-cxx-concepts-ts-dcl.dcl" />
      <item itemvalue="CMake Application.check-clang-cxx-concepts-ts-dcl.dcl-dcl.spec" />
      <item itemvalue="CMake Application.check-clang-cxx-concepts-ts-dcl.dcl-dcl.spec-dcl.spec.concept" />
      <item itemvalue="CMake Application.check-clang-cxx-concepts-ts-temp" />
      <item itemvalue="CMake Application.check-clang-cxx-concepts-ts-temp-temp.constr" />
      <item itemvalue="CMake Application.check-clang-cxx-concepts-ts-temp-temp.constr-temp.constr.decl" />
      <item itemvalue="CMake Application.check-clang-cxx-conv" />
      <item itemvalue="CMake Application.check-clang-cxx-conv-conv.array" />
      <item itemvalue="CMake Application.check-clang-cxx-conv-conv.bool" />
      <item itemvalue="CMake Application.check-clang-cxx-conv-conv.double" />
      <item itemvalue="CMake Application.check-clang-cxx-conv-conv.fctptr" />
      <item itemvalue="CMake Application.check-clang-cxx-conv-conv.fpint" />
      <item itemvalue="CMake Application.check-clang-cxx-conv-conv.fpprom" />
      <item itemvalue="CMake Application.check-clang-cxx-conv-conv.func" />
      <item itemvalue="CMake Application.check-clang-cxx-conv-conv.integral" />
      <item itemvalue="CMake Application.check-clang-cxx-conv-conv.lval" />
      <item itemvalue="CMake Application.check-clang-cxx-conv-conv.mem" />
      <item itemvalue="CMake Application.check-clang-cxx-conv-conv.prom" />
      <item itemvalue="CMake Application.check-clang-cxx-conv-conv.ptr" />
      <item itemvalue="CMake Application.check-clang-cxx-conv-conv.qual" />
      <item itemvalue="CMake Application.check-clang-cxx-conv-conv.rank" />
      <item itemvalue="CMake Application.check-clang-cxx-cpp" />
      <item itemvalue="CMake Application.check-clang-cxx-cpp-cpp.cond" />
      <item itemvalue="CMake Application.check-clang-cxx-cpp-cpp.error" />
      <item itemvalue="CMake Application.check-clang-cxx-cpp-cpp.include" />
      <item itemvalue="CMake Application.check-clang-cxx-cpp-cpp.line" />
      <item itemvalue="CMake Application.check-clang-cxx-cpp-cpp.null" />
      <item itemvalue="CMake Application.check-clang-cxx-cpp-cpp.pragma" />
      <item itemvalue="CMake Application.check-clang-cxx-cpp-cpp.pragma.op" />
      <item itemvalue="CMake Application.check-clang-cxx-cpp-cpp.predefined" />
      <item itemvalue="CMake Application.check-clang-cxx-cpp-cpp.replace" />
      <item itemvalue="CMake Application.check-clang-cxx-cpp-cpp.replace-cpp.concat" />
      <item itemvalue="CMake Application.check-clang-cxx-cpp-cpp.replace-cpp.rescan" />
      <item itemvalue="CMake Application.check-clang-cxx-cpp-cpp.replace-cpp.scope" />
      <item itemvalue="CMake Application.check-clang-cxx-cpp-cpp.replace-cpp.stringize" />
      <item itemvalue="CMake Application.check-clang-cxx-cpp-cpp.replace-cpp.subst" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.dcl" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.dcl-basic.namespace" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.dcl-basic.namespace-namespace.alias" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.dcl-basic.namespace-namespace.def" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.dcl-basic.namespace-namespace.def-namespace.memdef" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.dcl-basic.namespace-namespace.def-namespace.unnamed" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.dcl-basic.namespace-namespace.udecl" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.dcl-basic.namespace-namespace.udir" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.dcl-dcl.asm" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.dcl-dcl.attr" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.dcl-dcl.attr-dcl.align" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.dcl-dcl.attr-dcl.attr.depend" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.dcl-dcl.attr-dcl.attr.deprecated" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.dcl-dcl.attr-dcl.attr.fallthrough" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.dcl-dcl.attr-dcl.attr.grammar" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.dcl-dcl.attr-dcl.attr.nodiscard" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.dcl-dcl.attr-dcl.attr.noreturn" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.dcl-dcl.attr-dcl.attr.unused" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.dcl-dcl.enum" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.dcl-dcl.link" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.dcl-dcl.spec" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.dcl-dcl.spec-dcl.constexpr" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.dcl-dcl.spec-dcl.fct.spec" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.dcl-dcl.spec-dcl.friend" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.dcl-dcl.spec-dcl.inline" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.dcl-dcl.spec-dcl.stc" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.dcl-dcl.spec-dcl.type" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.dcl-dcl.spec-dcl.type-dcl.spec.auto" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.dcl-dcl.spec-dcl.type-dcl.type.class.deduct" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.dcl-dcl.spec-dcl.type-dcl.type.cv" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.dcl-dcl.spec-dcl.type-dcl.type.elab" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.dcl-dcl.spec-dcl.type-dcl.type.simple" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.dcl-dcl.spec-dcl.typedef" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.decl" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.decl-dcl.ambig.res" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.decl-dcl.decomp" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.decl-dcl.fct.def" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.decl-dcl.fct.def-dcl.fct.def.default" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.decl-dcl.fct.def-dcl.fct.def.delete" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.decl-dcl.fct.def-dcl.fct.def.general" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.decl-dcl.init" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.decl-dcl.init-dcl.init.aggr" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.decl-dcl.init-dcl.init.list" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.decl-dcl.init-dcl.init.ref" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.decl-dcl.init-dcl.init.string" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.decl-dcl.meaning" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.decl-dcl.meaning-dcl.array" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.decl-dcl.meaning-dcl.fct" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.decl-dcl.meaning-dcl.fct-dcl.fct.def.default" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.decl-dcl.meaning-dcl.fct.default" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.decl-dcl.meaning-dcl.mptr" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.decl-dcl.meaning-dcl.ptr" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.decl-dcl.meaning-dcl.ref" />
      <item itemvalue="CMake Application.check-clang-cxx-dcl.decl-dcl.name" />
      <item itemvalue="CMake Application.check-clang-cxx-depr" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.access.dcl" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.auto.ptr" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.auto.ptr-auto.ptr" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.auto.ptr-auto.ptr-auto.ptr.cons" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.auto.ptr-auto.ptr-auto.ptr.conv" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.auto.ptr-auto.ptr-auto.ptr.members" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.c.headers" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.incr.bool" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.ios.members" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.lib.binders" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.lib.binders-depr.lib.bind.1st" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.lib.binders-depr.lib.bind.2nd" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.lib.binders-depr.lib.binder.1st" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.lib.binders-depr.lib.binder.2nd" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.lib.iterator.primitives" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.lib.iterator.primitives-iterator.backward" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.lib.iterator.primitives-iterator.basic" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.lib.iterator.primitives-iterator.traits" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.lib.iterator.primitives-std.iterator.tags" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.static" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.str.strstreams" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.str.strstreams-depr.istrstream" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.str.strstreams-depr.istrstream-depr.istrstream.cons" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.str.strstreams-depr.istrstream-depr.istrstream.members" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.str.strstreams-depr.ostrstream" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.str.strstreams-depr.ostrstream-depr.ostrstream.cons" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.str.strstreams-depr.ostrstream-depr.ostrstream.members" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.str.strstreams-depr.strstream" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.str.strstreams-depr.strstream-depr.strstream.cons" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.str.strstreams-depr.strstream-depr.strstream.dest" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.str.strstreams-depr.strstream-depr.strstream.oper" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.str.strstreams-depr.strstreambuf" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.str.strstreams-depr.strstreambuf-depr.strstreambuf.cons" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.str.strstreams-depr.strstreambuf-depr.strstreambuf.members" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.str.strstreams-depr.strstreambuf-depr.strstreambuf.virtuals" />
      <item itemvalue="CMake Application.check-clang-cxx-depr-depr.string" />
      <item itemvalue="CMake Application.check-clang-cxx-drs" />
      <item itemvalue="CMake Application.check-clang-cxx-except" />
      <item itemvalue="CMake Application.check-clang-cxx-except-except.ctor" />
      <item itemvalue="CMake Application.check-clang-cxx-except-except.handle" />
      <item itemvalue="CMake Application.check-clang-cxx-except-except.spec" />
      <item itemvalue="CMake Application.check-clang-cxx-except-except.special" />
      <item itemvalue="CMake Application.check-clang-cxx-except-except.special-except.terminate" />
      <item itemvalue="CMake Application.check-clang-cxx-except-except.special-except.uncaught" />
      <item itemvalue="CMake Application.check-clang-cxx-except-except.special-except.unexpected" />
      <item itemvalue="CMake Application.check-clang-cxx-except-except.throw" />
      <item itemvalue="CMake Application.check-clang-cxx-expr" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.add" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.ass" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.bit.and" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.cast" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.comma" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.cond" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.const" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.eq" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.log.and" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.log.or" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.mptr.oper" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.mul" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.or" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.post" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.post-expr.call" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.post-expr.const.cast" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.post-expr.dynamic.cast" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.post-expr.post.incr" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.post-expr.pseudo" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.post-expr.ref" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.post-expr.reinterpret.cast" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.post-expr.static.cast" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.post-expr.sub" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.post-expr.type.conv" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.post-expr.typeid" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.prim" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.prim-expr.prim.general" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.prim-expr.prim.lambda" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.rel" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.shift" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.unary" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.unary-expr.alignof" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.unary-expr.delete" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.unary-expr.new" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.unary-expr.pre.incr" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.unary-expr.sizeof" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.unary-expr.unary.noexcept" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.unary-expr.unary.op" />
      <item itemvalue="CMake Application.check-clang-cxx-expr-expr.xor" />
      <item itemvalue="CMake Application.check-clang-cxx-implimits" />
      <item itemvalue="CMake Application.check-clang-cxx-intro" />
      <item itemvalue="CMake Application.check-clang-cxx-intro-intro.ack" />
      <item itemvalue="CMake Application.check-clang-cxx-intro-intro.compliance" />
      <item itemvalue="CMake Application.check-clang-cxx-intro-intro.defs" />
      <item itemvalue="CMake Application.check-clang-cxx-intro-intro.defs-defns.argument" />
      <item itemvalue="CMake Application.check-clang-cxx-intro-intro.defs-defns.cond.supp" />
      <item itemvalue="CMake Application.check-clang-cxx-intro-intro.defs-defns.diagnostic" />
      <item itemvalue="CMake Application.check-clang-cxx-intro-intro.defs-defns.dynamic.type" />
      <item itemvalue="CMake Application.check-clang-cxx-intro-intro.defs-defns.ill.formed" />
      <item itemvalue="CMake Application.check-clang-cxx-intro-intro.defs-defns.impl.defined" />
      <item itemvalue="CMake Application.check-clang-cxx-intro-intro.defs-defns.impl.limits" />
      <item itemvalue="CMake Application.check-clang-cxx-intro-intro.defs-defns.locale.specific" />
      <item itemvalue="CMake Application.check-clang-cxx-intro-intro.defs-defns.multibyte" />
      <item itemvalue="CMake Application.check-clang-cxx-intro-intro.defs-defns.parameter" />
      <item itemvalue="CMake Application.check-clang-cxx-intro-intro.defs-defns.signature" />
      <item itemvalue="CMake Application.check-clang-cxx-intro-intro.defs-defns.static.type" />
      <item itemvalue="CMake Application.check-clang-cxx-intro-intro.defs-defns.undefined" />
      <item itemvalue="CMake Application.check-clang-cxx-intro-intro.defs-defns.unspecified" />
      <item itemvalue="CMake Application.check-clang-cxx-intro-intro.defs-defns.well.formed" />
      <item itemvalue="CMake Application.check-clang-cxx-intro-intro.execution" />
      <item itemvalue="CMake Application.check-clang-cxx-intro-intro.memory" />
      <item itemvalue="CMake Application.check-clang-cxx-intro-intro.multithread" />
      <item itemvalue="CMake Application.check-clang-cxx-intro-intro.object" />
      <item itemvalue="CMake Application.check-clang-cxx-intro-intro.refs" />
      <item itemvalue="CMake Application.check-clang-cxx-intro-intro.scope" />
      <item itemvalue="CMake Application.check-clang-cxx-intro-intro.structure" />
      <item itemvalue="CMake Application.check-clang-cxx-intro-syntax" />
      <item itemvalue="CMake Application.check-clang-cxx-lex" />
      <item itemvalue="CMake Application.check-clang-cxx-lex-lex.charset" />
      <item itemvalue="CMake Application.check-clang-cxx-lex-lex.comment" />
      <item itemvalue="CMake Application.check-clang-cxx-lex-lex.digraph" />
      <item itemvalue="CMake Application.check-clang-cxx-lex-lex.header" />
      <item itemvalue="CMake Application.check-clang-cxx-lex-lex.key" />
      <item itemvalue="CMake Application.check-clang-cxx-lex-lex.literal" />
      <item itemvalue="CMake Application.check-clang-cxx-lex-lex.literal-lex.bool" />
      <item itemvalue="CMake Application.check-clang-cxx-lex-lex.literal-lex.ccon" />
      <item itemvalue="CMake Application.check-clang-cxx-lex-lex.literal-lex.ext" />
      <item itemvalue="CMake Application.check-clang-cxx-lex-lex.literal-lex.fcon" />
      <item itemvalue="CMake Application.check-clang-cxx-lex-lex.literal-lex.icon" />
      <item itemvalue="CMake Application.check-clang-cxx-lex-lex.literal-lex.literal.kinds" />
      <item itemvalue="CMake Application.check-clang-cxx-lex-lex.literal-lex.nullptr" />
      <item itemvalue="CMake Application.check-clang-cxx-lex-lex.literal-lex.string" />
      <item itemvalue="CMake Application.check-clang-cxx-lex-lex.name" />
      <item itemvalue="CMake Application.check-clang-cxx-lex-lex.operators" />
      <item itemvalue="CMake Application.check-clang-cxx-lex-lex.phases" />
      <item itemvalue="CMake Application.check-clang-cxx-lex-lex.ppnumber" />
      <item itemvalue="CMake Application.check-clang-cxx-lex-lex.pptoken" />
      <item itemvalue="CMake Application.check-clang-cxx-lex-lex.separate" />
      <item itemvalue="CMake Application.check-clang-cxx-lex-lex.token" />
      <item itemvalue="CMake Application.check-clang-cxx-lex-lex.trigraph" />
      <item itemvalue="CMake Application.check-clang-cxx-modules-ts" />
      <item itemvalue="CMake Application.check-clang-cxx-modules-ts-basic" />
      <item itemvalue="CMake Application.check-clang-cxx-modules-ts-basic-basic.def.odr" />
      <item itemvalue="CMake Application.check-clang-cxx-modules-ts-basic-basic.def.odr-p4" />
      <item itemvalue="CMake Application.check-clang-cxx-modules-ts-basic-basic.def.odr-p6" />
      <item itemvalue="CMake Application.check-clang-cxx-modules-ts-basic-basic.link" />
      <item itemvalue="CMake Application.check-clang-cxx-modules-ts-basic-basic.link-p2" />
      <item itemvalue="CMake Application.check-clang-cxx-modules-ts-basic-basic.search" />
      <item itemvalue="CMake Application.check-clang-cxx-modules-ts-dcl.dcl" />
      <item itemvalue="CMake Application.check-clang-cxx-modules-ts-dcl.dcl-dcl.module" />
      <item itemvalue="CMake Application.check-clang-cxx-modules-ts-dcl.dcl-dcl.module-dcl.module.export" />
      <item itemvalue="CMake Application.check-clang-cxx-modules-ts-dcl.dcl-dcl.module-dcl.module.import" />
      <item itemvalue="CMake Application.check-clang-cxx-modules-ts-dcl.dcl-dcl.module-dcl.module.interface" />
      <item itemvalue="CMake Application.check-clang-cxx-over" />
      <item itemvalue="CMake Application.check-clang-cxx-over-over.built" />
      <item itemvalue="CMake Application.check-clang-cxx-over-over.dcl" />
      <item itemvalue="CMake Application.check-clang-cxx-over-over.load" />
      <item itemvalue="CMake Application.check-clang-cxx-over-over.match" />
      <item itemvalue="CMake Application.check-clang-cxx-over-over.match-over.match.best" />
      <item itemvalue="CMake Application.check-clang-cxx-over-over.match-over.match.best-over.best.ics" />
      <item itemvalue="CMake Application.check-clang-cxx-over-over.match-over.match.best-over.best.ics-over.ics.ellipsis" />
      <item itemvalue="CMake Application.check-clang-cxx-over-over.match-over.match.best-over.best.ics-over.ics.list" />
      <item itemvalue="CMake Application.check-clang-cxx-over-over.match-over.match.best-over.best.ics-over.ics.ref" />
      <item itemvalue="CMake Application.check-clang-cxx-over-over.match-over.match.best-over.best.ics-over.ics.scs" />
      <item itemvalue="CMake Application.check-clang-cxx-over-over.match-over.match.best-over.best.ics-over.ics.user" />
      <item itemvalue="CMake Application.check-clang-cxx-over-over.match-over.match.best-over.ics.rank" />
      <item itemvalue="CMake Application.check-clang-cxx-over-over.match-over.match.funcs" />
      <item itemvalue="CMake Application.check-clang-cxx-over-over.match-over.match.funcs-over.match.call" />
      <item itemvalue="CMake Application.check-clang-cxx-over-over.match-over.match.funcs-over.match.call-over.call.func" />
      <item itemvalue="CMake Application.check-clang-cxx-over-over.match-over.match.funcs-over.match.call-over.call.object" />
      <item itemvalue="CMake Application.check-clang-cxx-over-over.match-over.match.funcs-over.match.class.deduct" />
      <item itemvalue="CMake Application.check-clang-cxx-over-over.match-over.match.funcs-over.match.conv" />
      <item itemvalue="CMake Application.check-clang-cxx-over-over.match-over.match.funcs-over.match.copy" />
      <item itemvalue="CMake Application.check-clang-cxx-over-over.match-over.match.funcs-over.match.ctor" />
      <item itemvalue="CMake Application.check-clang-cxx-over-over.match-over.match.funcs-over.match.list" />
      <item itemvalue="CMake Application.check-clang-cxx-over-over.match-over.match.funcs-over.match.oper" />
      <item itemvalue="CMake Application.check-clang-cxx-over-over.match-over.match.funcs-over.match.ref" />
      <item itemvalue="CMake Application.check-clang-cxx-over-over.match-over.match.viable" />
      <item itemvalue="CMake Application.check-clang-cxx-over-over.oper" />
      <item itemvalue="CMake Application.check-clang-cxx-over-over.oper-over.ass" />
      <item itemvalue="CMake Application.check-clang-cxx-over-over.oper-over.binary" />
      <item itemvalue="CMake Application.check-clang-cxx-over-over.oper-over.call" />
      <item itemvalue="CMake Application.check-clang-cxx-over-over.oper-over.inc" />
      <item itemvalue="CMake Application.check-clang-cxx-over-over.oper-over.literal" />
      <item itemvalue="CMake Application.check-clang-cxx-over-over.oper-over.ref" />
      <item itemvalue="CMake Application.check-clang-cxx-over-over.oper-over.sub" />
      <item itemvalue="CMake Application.check-clang-cxx-over-over.oper-over.unary" />
      <item itemvalue="CMake Application.check-clang-cxx-over-over.over" />
      <item itemvalue="CMake Application.check-clang-cxx-special" />
      <item itemvalue="CMake Application.check-clang-cxx-special-class.cdtor" />
      <item itemvalue="CMake Application.check-clang-cxx-special-class.conv" />
      <item itemvalue="CMake Application.check-clang-cxx-special-class.conv-class.conv.ctor" />
      <item itemvalue="CMake Application.check-clang-cxx-special-class.conv-class.conv.fct" />
      <item itemvalue="CMake Application.check-clang-cxx-special-class.copy" />
      <item itemvalue="CMake Application.check-clang-cxx-special-class.ctor" />
      <item itemvalue="CMake Application.check-clang-cxx-special-class.dtor" />
      <item itemvalue="CMake Application.check-clang-cxx-special-class.free" />
      <item itemvalue="CMake Application.check-clang-cxx-special-class.inhctor" />
      <item itemvalue="CMake Application.check-clang-cxx-special-class.init" />
      <item itemvalue="CMake Application.check-clang-cxx-special-class.init-class.base.init" />
      <item itemvalue="CMake Application.check-clang-cxx-special-class.init-class.expl.init" />
      <item itemvalue="CMake Application.check-clang-cxx-special-class.init-class.inhctor.init" />
      <item itemvalue="CMake Application.check-clang-cxx-special-class.temporary" />
      <item itemvalue="CMake Application.check-clang-cxx-stmt.stmt" />
      <item itemvalue="CMake Application.check-clang-cxx-stmt.stmt-stmt.ambig" />
      <item itemvalue="CMake Application.check-clang-cxx-stmt.stmt-stmt.block" />
      <item itemvalue="CMake Application.check-clang-cxx-stmt.stmt-stmt.dcl" />
      <item itemvalue="CMake Application.check-clang-cxx-stmt.stmt-stmt.expr" />
      <item itemvalue="CMake Application.check-clang-cxx-stmt.stmt-stmt.iter" />
      <item itemvalue="CMake Application.check-clang-cxx-stmt.stmt-stmt.iter-stmt.do" />
      <item itemvalue="CMake Application.check-clang-cxx-stmt.stmt-stmt.iter-stmt.for" />
      <item itemvalue="CMake Application.check-clang-cxx-stmt.stmt-stmt.iter-stmt.ranged" />
      <item itemvalue="CMake Application.check-clang-cxx-stmt.stmt-stmt.iter-stmt.while" />
      <item itemvalue="CMake Application.check-clang-cxx-stmt.stmt-stmt.jump" />
      <item itemvalue="CMake Application.check-clang-cxx-stmt.stmt-stmt.jump-stmt.break" />
      <item itemvalue="CMake Application.check-clang-cxx-stmt.stmt-stmt.jump-stmt.cont" />
      <item itemvalue="CMake Application.check-clang-cxx-stmt.stmt-stmt.jump-stmt.goto" />
      <item itemvalue="CMake Application.check-clang-cxx-stmt.stmt-stmt.jump-stmt.return" />
      <item itemvalue="CMake Application.check-clang-cxx-stmt.stmt-stmt.label" />
      <item itemvalue="CMake Application.check-clang-cxx-stmt.stmt-stmt.late" />
      <item itemvalue="CMake Application.check-clang-cxx-stmt.stmt-stmt.select" />
      <item itemvalue="CMake Application.check-clang-cxx-stmt.stmt-stmt.select-stmt.if" />
      <item itemvalue="CMake Application.check-clang-cxx-stmt.stmt-stmt.select-stmt.switch" />
      <item itemvalue="CMake Application.check-clang-cxx-temp" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-concept" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-concept-concept.def" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-concept-concept.def-concept.assoc" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-concept-concept.def-concept.axiom" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-concept-concept.def-concept.fct" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-concept-concept.def-concept.req" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-concept-concept.map" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-concept-concept.map-concept.map.assoc" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-concept-concept.map-concept.map.fct" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-concept-concept.refine" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-concept-concept.refine-concept.member.lookup" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-concept-concept.refine-concept.refine.maps" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-concept-concept.support" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.arg" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.arg-temp.arg.nontype" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.arg-temp.arg.template" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.arg-temp.arg.type" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.constrained" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.constrained-temp.archetype" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.constrained-temp.archetype-temp.archetype.assemble" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.constrained-temp.constrained.inst" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.constrained-temp.constrained.set" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.constrained-temp.req" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.constrained-temp.req-temp.req.impl" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.constrained-temp.req-temp.req.sat" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.decls" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.decls-temp.alias" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.decls-temp.class" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.decls-temp.class-temp.mem.class" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.decls-temp.class-temp.mem.enum" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.decls-temp.class-temp.mem.func" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.decls-temp.class-temp.static" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.decls-temp.class.spec" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.decls-temp.class.spec-temp.class.order" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.decls-temp.class.spec-temp.class.spec.match" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.decls-temp.class.spec-temp.class.spec.mfunc" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.decls-temp.concept.map" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.decls-temp.fct" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.decls-temp.fct-temp.func.order" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.decls-temp.fct-temp.over.link" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.decls-temp.friend" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.decls-temp.mem" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.decls-temp.variadic" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.deduct.guide" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.export" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.fct.spec" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.fct.spec-temp.arg.explicit" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.fct.spec-temp.deduct" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.fct.spec-temp.deduct-temp.deduct.call" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.fct.spec-temp.deduct-temp.deduct.conv" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.fct.spec-temp.deduct-temp.deduct.funcaddr" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.fct.spec-temp.deduct-temp.deduct.partial" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.fct.spec-temp.deduct-temp.deduct.type" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.fct.spec-temp.over" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.names" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.param" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.res" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.res-temp.dep" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.res-temp.dep-temp.dep.constexpr" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.res-temp.dep-temp.dep.expr" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.res-temp.dep-temp.dep.temp" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.res-temp.dep-temp.dep.type" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.res-temp.dep.res" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.res-temp.dep.res-temp.dep.candidate" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.res-temp.dep.res-temp.point" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.res-temp.inject" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.res-temp.local" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.res-temp.nondep" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.spec" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.spec-temp.expl.spec" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.spec-temp.explicit" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.spec-temp.inst" />
      <item itemvalue="CMake Application.check-clang-cxx-temp-temp.type" />
      <item itemvalue="CMake Application.check-clang-driver" />
      <item itemvalue="CMake Application.check-clang-driver-xray" />
      <item itemvalue="CMake Application.check-clang-fixit" />
      <item itemvalue="CMake Application.check-clang-format" />
      <item itemvalue="CMake Application.check-clang-frontend" />
      <item itemvalue="CMake Application.check-clang-headers" />
      <item itemvalue="CMake Application.check-clang-import" />
      <item itemvalue="CMake Application.check-clang-import-clang-flags" />
      <item itemvalue="CMake Application.check-clang-import-conflicting-struct" />
      <item itemvalue="CMake Application.check-clang-import-direct" />
      <item itemvalue="CMake Application.check-clang-import-empty-struct" />
      <item itemvalue="CMake Application.check-clang-import-enum" />
      <item itemvalue="CMake Application.check-clang-import-error-in-expression" />
      <item itemvalue="CMake Application.check-clang-import-error-in-import" />
      <item itemvalue="CMake Application.check-clang-import-extern-c-function" />
      <item itemvalue="CMake Application.check-clang-import-forward-declared-objc-class" />
      <item itemvalue="CMake Application.check-clang-import-forward-declared-struct" />
      <item itemvalue="CMake Application.check-clang-import-import-overrides" />
      <item itemvalue="CMake Application.check-clang-import-in-class-initializer" />
      <item itemvalue="CMake Application.check-clang-import-indirect-struct-member-access" />
      <item itemvalue="CMake Application.check-clang-import-local-struct" />
      <item itemvalue="CMake Application.check-clang-import-local-struct-use-origins" />
      <item itemvalue="CMake Application.check-clang-import-member-in-struct" />
      <item itemvalue="CMake Application.check-clang-import-missing-import" />
      <item itemvalue="CMake Application.check-clang-import-multiple-forward-declarations" />
      <item itemvalue="CMake Application.check-clang-import-objc-definitions-in-expression" />
      <item itemvalue="CMake Application.check-clang-import-objc-method" />
      <item itemvalue="CMake Application.check-clang-import-overloaded-function" />
      <item itemvalue="CMake Application.check-clang-import-struct-and-var" />
      <item itemvalue="CMake Application.check-clang-import-struct-in-namespace" />
      <item itemvalue="CMake Application.check-clang-import-struct-layout" />
      <item itemvalue="CMake Application.check-clang-import-template" />
      <item itemvalue="CMake Application.check-clang-import-template-specialization" />
      <item itemvalue="CMake Application.check-clang-index" />
      <item itemvalue="CMake Application.check-clang-index-core" />
      <item itemvalue="CMake Application.check-clang-index-reparse-with-remaps" />
      <item itemvalue="CMake Application.check-clang-index-skip-parsed-bodies" />
      <item itemvalue="CMake Application.check-clang-index-usr" />
      <item itemvalue="CMake Application.check-clang-integration" />
      <item itemvalue="CMake Application.check-clang-layout" />
      <item itemvalue="CMake Application.check-clang-lexer" />
      <item itemvalue="CMake Application.check-clang-misc" />
      <item itemvalue="CMake Application.check-clang-modules" />
      <item itemvalue="CMake Application.check-clang-openmp" />
      <item itemvalue="CMake Application.check-clang-parser" />
      <item itemvalue="CMake Application.check-clang-pch" />
      <item itemvalue="CMake Application.check-clang-preprocessor" />
      <item itemvalue="CMake Application.check-clang-preprocessor-headermap-rel" />
      <item itemvalue="CMake Application.check-clang-preprocessor-headermap-rel-foo.framework" />
      <item itemvalue="CMake Application.check-clang-preprocessor-headermap-rel-foo.framework-headers" />
      <item itemvalue="CMake Application.check-clang-profile" />
      <item itemvalue="CMake Application.check-clang-refactor" />
      <item itemvalue="CMake Application.check-clang-refactor-extract" />
      <item itemvalue="CMake Application.check-clang-refactor-localrename" />
      <item itemvalue="CMake Application.check-clang-rewriter" />
      <item itemvalue="CMake Application.check-clang-sema" />
      <item itemvalue="CMake Application.check-clang-semacuda" />
      <item itemvalue="CMake Application.check-clang-semacxx" />
      <item itemvalue="CMake Application.check-clang-semaobjc" />
      <item itemvalue="CMake Application.check-clang-semaobjcxx" />
      <item itemvalue="CMake Application.check-clang-semaopencl" />
      <item itemvalue="CMake Application.check-clang-sematemplate" />
      <item itemvalue="CMake Application.check-clang-tablegen" />
      <item itemvalue="CMake Application.check-clang-tooling" />
      <item itemvalue="CMake Application.check-clang-unit" />
      <item itemvalue="CMake Application.check-clang-vfs" />
      <item itemvalue="CMake Application.check-dfsan" />
      <item itemvalue="CMake Application.check-esan" />
      <item itemvalue="CMake Application.check-fuzzer" />
      <item itemvalue="CMake Application.check-interception" />
      <item itemvalue="CMake Application.check-lit" />
      <item itemvalue="CMake Application.check-llvm" />
      <item itemvalue="CMake Application.check-llvm-analysis" />
      <item itemvalue="CMake Application.check-llvm-analysis-aliasset" />
      <item itemvalue="CMake Application.check-llvm-analysis-assumptioncache" />
      <item itemvalue="CMake Application.check-llvm-analysis-basicaa" />
      <item itemvalue="CMake Application.check-llvm-analysis-blockfrequencyinfo" />
      <item itemvalue="CMake Application.check-llvm-analysis-branchprobabilityinfo" />
      <item itemvalue="CMake Application.check-llvm-analysis-callgraph" />
      <item itemvalue="CMake Application.check-llvm-analysis-cflaliasanalysis" />
      <item itemvalue="CMake Application.check-llvm-analysis-cflaliasanalysis-andersen" />
      <item itemvalue="CMake Application.check-llvm-analysis-cflaliasanalysis-steensgaard" />
      <item itemvalue="CMake Application.check-llvm-analysis-constantfolding" />
      <item itemvalue="CMake Application.check-llvm-analysis-costmodel" />
      <item itemvalue="CMake Application.check-llvm-analysis-costmodel-aarch64" />
      <item itemvalue="CMake Application.check-llvm-analysis-costmodel-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-analysis-costmodel-arm" />
      <item itemvalue="CMake Application.check-llvm-analysis-costmodel-powerpc" />
      <item itemvalue="CMake Application.check-llvm-analysis-costmodel-systemz" />
      <item itemvalue="CMake Application.check-llvm-analysis-costmodel-x86" />
      <item itemvalue="CMake Application.check-llvm-analysis-delinearization" />
      <item itemvalue="CMake Application.check-llvm-analysis-demandedbits" />
      <item itemvalue="CMake Application.check-llvm-analysis-dependenceanalysis" />
      <item itemvalue="CMake Application.check-llvm-analysis-divergenceanalysis" />
      <item itemvalue="CMake Application.check-llvm-analysis-divergenceanalysis-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-analysis-divergenceanalysis-nvptx" />
      <item itemvalue="CMake Application.check-llvm-analysis-dominancefrontier" />
      <item itemvalue="CMake Application.check-llvm-analysis-dominators" />
      <item itemvalue="CMake Application.check-llvm-analysis-globalsmodref" />
      <item itemvalue="CMake Application.check-llvm-analysis-ivusers" />
      <item itemvalue="CMake Application.check-llvm-analysis-lazycallgraph" />
      <item itemvalue="CMake Application.check-llvm-analysis-lazyvalueanalysis" />
      <item itemvalue="CMake Application.check-llvm-analysis-lint" />
      <item itemvalue="CMake Application.check-llvm-analysis-loopaccessanalysis" />
      <item itemvalue="CMake Application.check-llvm-analysis-loopinfo" />
      <item itemvalue="CMake Application.check-llvm-analysis-memorydependenceanalysis" />
      <item itemvalue="CMake Application.check-llvm-analysis-memoryssa" />
      <item itemvalue="CMake Application.check-llvm-analysis-postdominators" />
      <item itemvalue="CMake Application.check-llvm-analysis-profilesummary" />
      <item itemvalue="CMake Application.check-llvm-analysis-regioninfo" />
      <item itemvalue="CMake Application.check-llvm-analysis-scalarevolution" />
      <item itemvalue="CMake Application.check-llvm-analysis-scopednoaliasaa" />
      <item itemvalue="CMake Application.check-llvm-analysis-typebasedaliasanalysis" />
      <item itemvalue="CMake Application.check-llvm-analysis-valuetracking" />
      <item itemvalue="CMake Application.check-llvm-assembler" />
      <item itemvalue="CMake Application.check-llvm-bindings" />
      <item itemvalue="CMake Application.check-llvm-bindings-go" />
      <item itemvalue="CMake Application.check-llvm-bindings-llvm-c" />
      <item itemvalue="CMake Application.check-llvm-bindings-llvm-c-arm" />
      <item itemvalue="CMake Application.check-llvm-bindings-llvm-c-x86" />
      <item itemvalue="CMake Application.check-llvm-bindings-ocaml" />
      <item itemvalue="CMake Application.check-llvm-bitcode" />
      <item itemvalue="CMake Application.check-llvm-bugpoint" />
      <item itemvalue="CMake Application.check-llvm-codegen" />
      <item itemvalue="CMake Application.check-llvm-codegen-aarch64" />
      <item itemvalue="CMake Application.check-llvm-codegen-aarch64-globalisel" />
      <item itemvalue="CMake Application.check-llvm-codegen-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-codegen-amdgpu-globalisel" />
      <item itemvalue="CMake Application.check-llvm-codegen-arc" />
      <item itemvalue="CMake Application.check-llvm-codegen-arm" />
      <item itemvalue="CMake Application.check-llvm-codegen-arm-globalisel" />
      <item itemvalue="CMake Application.check-llvm-codegen-arm-windows" />
      <item itemvalue="CMake Application.check-llvm-codegen-avr" />
      <item itemvalue="CMake Application.check-llvm-codegen-avr-atomics" />
      <item itemvalue="CMake Application.check-llvm-codegen-avr-calling-conv" />
      <item itemvalue="CMake Application.check-llvm-codegen-avr-calling-conv-c" />
      <item itemvalue="CMake Application.check-llvm-codegen-avr-features" />
      <item itemvalue="CMake Application.check-llvm-codegen-avr-inline-asm" />
      <item itemvalue="CMake Application.check-llvm-codegen-avr-instrumentation" />
      <item itemvalue="CMake Application.check-llvm-codegen-avr-integration" />
      <item itemvalue="CMake Application.check-llvm-codegen-avr-intrinsics" />
      <item itemvalue="CMake Application.check-llvm-codegen-avr-pseudo" />
      <item itemvalue="CMake Application.check-llvm-codegen-avr-relax-mem" />
      <item itemvalue="CMake Application.check-llvm-codegen-bpf" />
      <item itemvalue="CMake Application.check-llvm-codegen-generic" />
      <item itemvalue="CMake Application.check-llvm-codegen-hexagon" />
      <item itemvalue="CMake Application.check-llvm-codegen-hexagon-autohvx" />
      <item itemvalue="CMake Application.check-llvm-codegen-hexagon-intrinsics" />
      <item itemvalue="CMake Application.check-llvm-codegen-hexagon-loop-idiom" />
      <item itemvalue="CMake Application.check-llvm-codegen-hexagon-vect" />
      <item itemvalue="CMake Application.check-llvm-codegen-lanai" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips-cconv" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips-compactbranches" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips-cstmaterialization" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips-fast-isel" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips-instverify" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips-llvm-ir" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips-longbranch" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips-micromips-sizereduction" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips-mips32r6" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips-mips64r6" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips-mirparser" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips-msa" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips-tailcall" />
      <item itemvalue="CMake Application.check-llvm-codegen-mir" />
      <item itemvalue="CMake Application.check-llvm-codegen-mir-aarch64" />
      <item itemvalue="CMake Application.check-llvm-codegen-mir-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-codegen-mir-arm" />
      <item itemvalue="CMake Application.check-llvm-codegen-mir-generic" />
      <item itemvalue="CMake Application.check-llvm-codegen-mir-hexagon" />
      <item itemvalue="CMake Application.check-llvm-codegen-mir-lanai" />
      <item itemvalue="CMake Application.check-llvm-codegen-mir-mips" />
      <item itemvalue="CMake Application.check-llvm-codegen-mir-nvptx" />
      <item itemvalue="CMake Application.check-llvm-codegen-mir-powerpc" />
      <item itemvalue="CMake Application.check-llvm-codegen-mir-x86" />
      <item itemvalue="CMake Application.check-llvm-codegen-msp430" />
      <item itemvalue="CMake Application.check-llvm-codegen-nios2" />
      <item itemvalue="CMake Application.check-llvm-codegen-nvptx" />
      <item itemvalue="CMake Application.check-llvm-codegen-powerpc" />
      <item itemvalue="CMake Application.check-llvm-codegen-riscv" />
      <item itemvalue="CMake Application.check-llvm-codegen-sparc" />
      <item itemvalue="CMake Application.check-llvm-codegen-systemz" />
      <item itemvalue="CMake Application.check-llvm-codegen-systemz-large" />
      <item itemvalue="CMake Application.check-llvm-codegen-thumb" />
      <item itemvalue="CMake Application.check-llvm-codegen-thumb2" />
      <item itemvalue="CMake Application.check-llvm-codegen-webassembly" />
      <item itemvalue="CMake Application.check-llvm-codegen-wineh" />
      <item itemvalue="CMake Application.check-llvm-codegen-x86" />
      <item itemvalue="CMake Application.check-llvm-codegen-x86-avx512-shuffles" />
      <item itemvalue="CMake Application.check-llvm-codegen-x86-gc" />
      <item itemvalue="CMake Application.check-llvm-codegen-x86-globalisel" />
      <item itemvalue="CMake Application.check-llvm-codegen-xcore" />
      <item itemvalue="CMake Application.check-llvm-debuginfo" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-aarch64" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-arm" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-coff" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-generic" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-lanai" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-mips" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-mir" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-mir-aarch64" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-mir-arm" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-mir-x86" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-msp430" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-pdb" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-pdb-dia" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-pdb-native" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-powerpc" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-sparc" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-systemz" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-webassembly" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-x86" />
      <item itemvalue="CMake Application.check-llvm-demangle" />
      <item itemvalue="CMake Application.check-llvm-examples" />
      <item itemvalue="CMake Application.check-llvm-examples-kaleidoscope" />
      <item itemvalue="CMake Application.check-llvm-executionengine" />
      <item itemvalue="CMake Application.check-llvm-executionengine-interpreter" />
      <item itemvalue="CMake Application.check-llvm-executionengine-mcjit" />
      <item itemvalue="CMake Application.check-llvm-executionengine-mcjit-remote" />
      <item itemvalue="CMake Application.check-llvm-executionengine-orclazy" />
      <item itemvalue="CMake Application.check-llvm-executionengine-orcmcjit" />
      <item itemvalue="CMake Application.check-llvm-executionengine-orcmcjit-remote" />
      <item itemvalue="CMake Application.check-llvm-executionengine-runtimedyld" />
      <item itemvalue="CMake Application.check-llvm-executionengine-runtimedyld-aarch64" />
      <item itemvalue="CMake Application.check-llvm-executionengine-runtimedyld-arm" />
      <item itemvalue="CMake Application.check-llvm-executionengine-runtimedyld-mips" />
      <item itemvalue="CMake Application.check-llvm-executionengine-runtimedyld-powerpc" />
      <item itemvalue="CMake Application.check-llvm-executionengine-runtimedyld-systemz" />
      <item itemvalue="CMake Application.check-llvm-executionengine-runtimedyld-x86" />
      <item itemvalue="CMake Application.check-llvm-feature" />
      <item itemvalue="CMake Application.check-llvm-feature-operandbundles" />
      <item itemvalue="CMake Application.check-llvm-filecheck" />
      <item itemvalue="CMake Application.check-llvm-instrumentation" />
      <item itemvalue="CMake Application.check-llvm-instrumentation-addresssanitizer" />
      <item itemvalue="CMake Application.check-llvm-instrumentation-addresssanitizer-x86" />
      <item itemvalue="CMake Application.check-llvm-instrumentation-boundschecking" />
      <item itemvalue="CMake Application.check-llvm-instrumentation-dataflowsanitizer" />
      <item itemvalue="CMake Application.check-llvm-instrumentation-efficiencysanitizer" />
      <item itemvalue="CMake Application.check-llvm-instrumentation-hwaddresssanitizer" />
      <item itemvalue="CMake Application.check-llvm-instrumentation-instrprofiling" />
      <item itemvalue="CMake Application.check-llvm-instrumentation-instrprofiling-x86" />
      <item itemvalue="CMake Application.check-llvm-instrumentation-memorysanitizer" />
      <item itemvalue="CMake Application.check-llvm-instrumentation-memorysanitizer-aarch64" />
      <item itemvalue="CMake Application.check-llvm-instrumentation-memorysanitizer-mips" />
      <item itemvalue="CMake Application.check-llvm-instrumentation-memorysanitizer-powerpc" />
      <item itemvalue="CMake Application.check-llvm-instrumentation-memorysanitizer-x86" />
      <item itemvalue="CMake Application.check-llvm-instrumentation-sanitizercoverage" />
      <item itemvalue="CMake Application.check-llvm-instrumentation-threadsanitizer" />
      <item itemvalue="CMake Application.check-llvm-integer" />
      <item itemvalue="CMake Application.check-llvm-jitlistener" />
      <item itemvalue="CMake Application.check-llvm-linker" />
      <item itemvalue="CMake Application.check-llvm-lto" />
      <item itemvalue="CMake Application.check-llvm-lto-arm" />
      <item itemvalue="CMake Application.check-llvm-lto-resolution" />
      <item itemvalue="CMake Application.check-llvm-lto-resolution-x86" />
      <item itemvalue="CMake Application.check-llvm-lto-x86" />
      <item itemvalue="CMake Application.check-llvm-mc" />
      <item itemvalue="CMake Application.check-llvm-mc-aarch64" />
      <item itemvalue="CMake Application.check-llvm-mc-aarch64-sve" />
      <item itemvalue="CMake Application.check-llvm-mc-aarch64-sve-assembler_tests" />
      <item itemvalue="CMake Application.check-llvm-mc-aarch64-sve-disassembler_tests" />
      <item itemvalue="CMake Application.check-llvm-mc-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-mc-amdgpu-regression" />
      <item itemvalue="CMake Application.check-llvm-mc-arm" />
      <item itemvalue="CMake Application.check-llvm-mc-arm-alignedbundling" />
      <item itemvalue="CMake Application.check-llvm-mc-arm-windows" />
      <item itemvalue="CMake Application.check-llvm-mc-asmparser" />
      <item itemvalue="CMake Application.check-llvm-mc-asmparser-aarch64" />
      <item itemvalue="CMake Application.check-llvm-mc-asmparser-include" />
      <item itemvalue="CMake Application.check-llvm-mc-avr" />
      <item itemvalue="CMake Application.check-llvm-mc-avr-out-of-range-fixups" />
      <item itemvalue="CMake Application.check-llvm-mc-bpf" />
      <item itemvalue="CMake Application.check-llvm-mc-coff" />
      <item itemvalue="CMake Application.check-llvm-mc-coff-arm" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-aarch64" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-arc" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-arm" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-hexagon" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-lanai" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-dsp" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-dspr2" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-eva" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-micromips-dsp" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-micromips-dspr2" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-micromips-dspr3" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-micromips32r3" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-micromips32r6" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-mips1" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-mips2" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-mips3" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-mips32" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-mips32r2" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-mips32r3" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-mips32r5" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-mips32r6" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-mips4" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-mips64" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-mips64r2" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-mips64r3" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-mips64r5" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-mips64r6" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-msa" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-mt" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-powerpc" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-sparc" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-systemz" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-x86" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-xcore" />
      <item itemvalue="CMake Application.check-llvm-mc-elf" />
      <item itemvalue="CMake Application.check-llvm-mc-elf-arm" />
      <item itemvalue="CMake Application.check-llvm-mc-hexagon" />
      <item itemvalue="CMake Application.check-llvm-mc-hexagon-instructions" />
      <item itemvalue="CMake Application.check-llvm-mc-hexagon-packetrules" />
      <item itemvalue="CMake Application.check-llvm-mc-lanai" />
      <item itemvalue="CMake Application.check-llvm-mc-macho" />
      <item itemvalue="CMake Application.check-llvm-mc-macho-aarch64" />
      <item itemvalue="CMake Application.check-llvm-mc-macho-arm" />
      <item itemvalue="CMake Application.check-llvm-mc-macho-powerpc" />
      <item itemvalue="CMake Application.check-llvm-mc-markup" />
      <item itemvalue="CMake Application.check-llvm-mc-mips" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-cnmips" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-dsp" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-dspr2" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-eva" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-micromips" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-micromips-dsp" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-micromips-dspr2" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-micromips-dspr3" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-micromips32r6" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-mips1" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-mips2" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-mips3" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-mips32" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-mips32r2" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-mips32r3" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-mips32r5" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-mips32r6" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-mips4" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-mips5" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-mips64" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-mips64r2" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-mips64r3" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-mips64r5" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-mips64r6" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-msa" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-mt" />
      <item itemvalue="CMake Application.check-llvm-mc-powerpc" />
      <item itemvalue="CMake Application.check-llvm-mc-riscv" />
      <item itemvalue="CMake Application.check-llvm-mc-sparc" />
      <item itemvalue="CMake Application.check-llvm-mc-systemz" />
      <item itemvalue="CMake Application.check-llvm-mc-webassembly" />
      <item itemvalue="CMake Application.check-llvm-mc-x86" />
      <item itemvalue="CMake Application.check-llvm-mc-x86-alignedbundling" />
      <item itemvalue="CMake Application.check-llvm-metal" />
      <item itemvalue="CMake Application.check-llvm-metal-avr" />
      <item itemvalue="CMake Application.check-llvm-object" />
      <item itemvalue="CMake Application.check-llvm-object-aarch64" />
      <item itemvalue="CMake Application.check-llvm-object-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-object-arm" />
      <item itemvalue="CMake Application.check-llvm-object-lanai" />
      <item itemvalue="CMake Application.check-llvm-object-mips" />
      <item itemvalue="CMake Application.check-llvm-object-riscv" />
      <item itemvalue="CMake Application.check-llvm-object-x86" />
      <item itemvalue="CMake Application.check-llvm-objectyaml" />
      <item itemvalue="CMake Application.check-llvm-objectyaml-codeview" />
      <item itemvalue="CMake Application.check-llvm-objectyaml-elf" />
      <item itemvalue="CMake Application.check-llvm-objectyaml-macho" />
      <item itemvalue="CMake Application.check-llvm-objectyaml-wasm" />
      <item itemvalue="CMake Application.check-llvm-other" />
      <item itemvalue="CMake Application.check-llvm-other-x86" />
      <item itemvalue="CMake Application.check-llvm-safepointirverifier" />
      <item itemvalue="CMake Application.check-llvm-symbolrewriter" />
      <item itemvalue="CMake Application.check-llvm-tablegen" />
      <item itemvalue="CMake Application.check-llvm-thinlto" />
      <item itemvalue="CMake Application.check-llvm-thinlto-x86" />
      <item itemvalue="CMake Application.check-llvm-tools" />
      <item itemvalue="CMake Application.check-llvm-tools-dsymutil" />
      <item itemvalue="CMake Application.check-llvm-tools-dsymutil-arm" />
      <item itemvalue="CMake Application.check-llvm-tools-dsymutil-x86" />
      <item itemvalue="CMake Application.check-llvm-tools-gold" />
      <item itemvalue="CMake Application.check-llvm-tools-gold-powerpc" />
      <item itemvalue="CMake Application.check-llvm-tools-gold-x86" />
      <item itemvalue="CMake Application.check-llvm-tools-gold-x86-v1.12" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-ar" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-cfi-verify" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-cfi-verify-x86" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-config" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-cov" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-cvtres" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-cxxdump" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-cxxdump-x86" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-cxxfilt" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-dlltool" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-dwarfdump" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-dwarfdump-aarch64" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-dwarfdump-arm" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-dwarfdump-x86" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-dwp" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-dwp-x86" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-extract" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-isel-fuzzer" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-lib" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-lit" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-lto" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-lto2" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-lto2-x86" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-mc" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-modextract" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-mt" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-nm" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-nm-arm" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-nm-wasm" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-nm-x86" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-nm-x86-radix" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-objcopy" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-objdump" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-objdump-aarch64" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-objdump-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-objdump-arm" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-objdump-hexagon" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-objdump-mips" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-objdump-webassembly" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-objdump-x86" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-opt-fuzzer" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-opt-report" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-pdbdump" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-profdata" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-rc" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-readobj" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-readobj-arm" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-size" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-size-x86" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-split" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-strings" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-symbolizer" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-symbolizer-pdb" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-vtabledump" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-xray" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-xray-x86" />
      <item itemvalue="CMake Application.check-llvm-tools-lto" />
      <item itemvalue="CMake Application.check-llvm-tools-obj2yaml" />
      <item itemvalue="CMake Application.check-llvm-tools-opt-viewer" />
      <item itemvalue="CMake Application.check-llvm-tools-sancov" />
      <item itemvalue="CMake Application.check-llvm-tools-sancov-aarch64" />
      <item itemvalue="CMake Application.check-llvm-tools-sanstats" />
      <item itemvalue="CMake Application.check-llvm-tools-yaml2obj" />
      <item itemvalue="CMake Application.check-llvm-transforms" />
      <item itemvalue="CMake Application.check-llvm-transforms-adce" />
      <item itemvalue="CMake Application.check-llvm-transforms-adddiscriminators" />
      <item itemvalue="CMake Application.check-llvm-transforms-alignmentfromassumptions" />
      <item itemvalue="CMake Application.check-llvm-transforms-argumentpromotion" />
      <item itemvalue="CMake Application.check-llvm-transforms-atomicexpand" />
      <item itemvalue="CMake Application.check-llvm-transforms-atomicexpand-arm" />
      <item itemvalue="CMake Application.check-llvm-transforms-atomicexpand-sparc" />
      <item itemvalue="CMake Application.check-llvm-transforms-atomicexpand-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-atomicexpandloadlinked" />
      <item itemvalue="CMake Application.check-llvm-transforms-atomicexpandloadlinked-arm" />
      <item itemvalue="CMake Application.check-llvm-transforms-bbvectorize" />
      <item itemvalue="CMake Application.check-llvm-transforms-bbvectorize-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-bbvectorize-xcore" />
      <item itemvalue="CMake Application.check-llvm-transforms-bdce" />
      <item itemvalue="CMake Application.check-llvm-transforms-branchfolding" />
      <item itemvalue="CMake Application.check-llvm-transforms-calledvaluepropagation" />
      <item itemvalue="CMake Application.check-llvm-transforms-callsitesplitting" />
      <item itemvalue="CMake Application.check-llvm-transforms-codeextractor" />
      <item itemvalue="CMake Application.check-llvm-transforms-codeextractor-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-codegenprepare" />
      <item itemvalue="CMake Application.check-llvm-transforms-codegenprepare-aarch64" />
      <item itemvalue="CMake Application.check-llvm-transforms-codegenprepare-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-codegenprepare-arm" />
      <item itemvalue="CMake Application.check-llvm-transforms-codegenprepare-mips" />
      <item itemvalue="CMake Application.check-llvm-transforms-codegenprepare-nvptx" />
      <item itemvalue="CMake Application.check-llvm-transforms-codegenprepare-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-constanthoisting" />
      <item itemvalue="CMake Application.check-llvm-transforms-constanthoisting-aarch64" />
      <item itemvalue="CMake Application.check-llvm-transforms-constanthoisting-arm" />
      <item itemvalue="CMake Application.check-llvm-transforms-constanthoisting-powerpc" />
      <item itemvalue="CMake Application.check-llvm-transforms-constanthoisting-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-constantmerge" />
      <item itemvalue="CMake Application.check-llvm-transforms-constprop" />
      <item itemvalue="CMake Application.check-llvm-transforms-coroutines" />
      <item itemvalue="CMake Application.check-llvm-transforms-correlatedvaluepropagation" />
      <item itemvalue="CMake Application.check-llvm-transforms-countingfunctioninserter" />
      <item itemvalue="CMake Application.check-llvm-transforms-crossdsocfi" />
      <item itemvalue="CMake Application.check-llvm-transforms-dce" />
      <item itemvalue="CMake Application.check-llvm-transforms-deadargelim" />
      <item itemvalue="CMake Application.check-llvm-transforms-deadstoreelimination" />
      <item itemvalue="CMake Application.check-llvm-transforms-divrempairs" />
      <item itemvalue="CMake Application.check-llvm-transforms-divrempairs-powerpc" />
      <item itemvalue="CMake Application.check-llvm-transforms-divrempairs-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-earlycse" />
      <item itemvalue="CMake Application.check-llvm-transforms-earlycse-aarch64" />
      <item itemvalue="CMake Application.check-llvm-transforms-eliminateavailableexternally" />
      <item itemvalue="CMake Application.check-llvm-transforms-entryexitinstrumenter" />
      <item itemvalue="CMake Application.check-llvm-transforms-expandmemcmp" />
      <item itemvalue="CMake Application.check-llvm-transforms-expandmemcmp-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-float2int" />
      <item itemvalue="CMake Application.check-llvm-transforms-forcedfunctionattrs" />
      <item itemvalue="CMake Application.check-llvm-transforms-functionattrs" />
      <item itemvalue="CMake Application.check-llvm-transforms-functionimport" />
      <item itemvalue="CMake Application.check-llvm-transforms-gcovprofiling" />
      <item itemvalue="CMake Application.check-llvm-transforms-globaldce" />
      <item itemvalue="CMake Application.check-llvm-transforms-globalmerge" />
      <item itemvalue="CMake Application.check-llvm-transforms-globalopt" />
      <item itemvalue="CMake Application.check-llvm-transforms-globalsplit" />
      <item itemvalue="CMake Application.check-llvm-transforms-guardwidening" />
      <item itemvalue="CMake Application.check-llvm-transforms-gvn" />
      <item itemvalue="CMake Application.check-llvm-transforms-gvn-pre" />
      <item itemvalue="CMake Application.check-llvm-transforms-gvnhoist" />
      <item itemvalue="CMake Application.check-llvm-transforms-gvnsink" />
      <item itemvalue="CMake Application.check-llvm-transforms-indirectbrexpand" />
      <item itemvalue="CMake Application.check-llvm-transforms-indvarsimplify" />
      <item itemvalue="CMake Application.check-llvm-transforms-indvarsimplify-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-indvarsimplify-nvptx" />
      <item itemvalue="CMake Application.check-llvm-transforms-inferaddressspaces" />
      <item itemvalue="CMake Application.check-llvm-transforms-inferaddressspaces-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-inferaddressspaces-nvptx" />
      <item itemvalue="CMake Application.check-llvm-transforms-inferfunctionattrs" />
      <item itemvalue="CMake Application.check-llvm-transforms-inline" />
      <item itemvalue="CMake Application.check-llvm-transforms-inline-aarch64" />
      <item itemvalue="CMake Application.check-llvm-transforms-inline-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-inline-arm" />
      <item itemvalue="CMake Application.check-llvm-transforms-inline-powerpc" />
      <item itemvalue="CMake Application.check-llvm-transforms-inline-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-instcombine" />
      <item itemvalue="CMake Application.check-llvm-transforms-instcombine-aarch64" />
      <item itemvalue="CMake Application.check-llvm-transforms-instcombine-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-instcombine-arm" />
      <item itemvalue="CMake Application.check-llvm-transforms-instcombine-nvptx" />
      <item itemvalue="CMake Application.check-llvm-transforms-instcombine-powerpc" />
      <item itemvalue="CMake Application.check-llvm-transforms-instcombine-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-instmerge" />
      <item itemvalue="CMake Application.check-llvm-transforms-instnamer" />
      <item itemvalue="CMake Application.check-llvm-transforms-instsimplify" />
      <item itemvalue="CMake Application.check-llvm-transforms-interleavedaccess" />
      <item itemvalue="CMake Application.check-llvm-transforms-interleavedaccess-aarch64" />
      <item itemvalue="CMake Application.check-llvm-transforms-interleavedaccess-arm" />
      <item itemvalue="CMake Application.check-llvm-transforms-interleavedaccess-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-internalize" />
      <item itemvalue="CMake Application.check-llvm-transforms-ipconstantprop" />
      <item itemvalue="CMake Application.check-llvm-transforms-irce" />
      <item itemvalue="CMake Application.check-llvm-transforms-jumpthreading" />
      <item itemvalue="CMake Application.check-llvm-transforms-lcssa" />
      <item itemvalue="CMake Application.check-llvm-transforms-licm" />
      <item itemvalue="CMake Application.check-llvm-transforms-loadcombine" />
      <item itemvalue="CMake Application.check-llvm-transforms-loadstorevectorizer" />
      <item itemvalue="CMake Application.check-llvm-transforms-loadstorevectorizer-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-loadstorevectorizer-nvptx" />
      <item itemvalue="CMake Application.check-llvm-transforms-loadstorevectorizer-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopdataprefetch" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopdataprefetch-aarch64" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopdataprefetch-powerpc" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopdeletion" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopdistribute" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopidiom" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopidiom-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopidiom-arm" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopidiom-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopinterchange" />
      <item itemvalue="CMake Application.check-llvm-transforms-looploadelim" />
      <item itemvalue="CMake Application.check-llvm-transforms-looppredication" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopreroll" />
      <item itemvalue="CMake Application.check-llvm-transforms-looprotate" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopsimplify" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopsimplifycfg" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopstrengthreduce" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopstrengthreduce-aarch64" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopstrengthreduce-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopstrengthreduce-arm" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopstrengthreduce-nvptx" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopstrengthreduce-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopunroll" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopunroll-aarch64" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopunroll-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopunroll-arm" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopunroll-powerpc" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopunroll-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopunswitch" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopunswitch-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopvectorize" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopvectorize-aarch64" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopvectorize-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopvectorize-arm" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopvectorize-powerpc" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopvectorize-systemz" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopvectorize-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopvectorize-xcore" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopversioning" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopversioninglicm" />
      <item itemvalue="CMake Application.check-llvm-transforms-loweratomic" />
      <item itemvalue="CMake Application.check-llvm-transforms-lowerbitsets" />
      <item itemvalue="CMake Application.check-llvm-transforms-lowerexpectintrinsic" />
      <item itemvalue="CMake Application.check-llvm-transforms-lowerguardintrinsic" />
      <item itemvalue="CMake Application.check-llvm-transforms-lowerinvoke" />
      <item itemvalue="CMake Application.check-llvm-transforms-lowerswitch" />
      <item itemvalue="CMake Application.check-llvm-transforms-lowertypetests" />
      <item itemvalue="CMake Application.check-llvm-transforms-mem2reg" />
      <item itemvalue="CMake Application.check-llvm-transforms-memcpyopt" />
      <item itemvalue="CMake Application.check-llvm-transforms-mergefunc" />
      <item itemvalue="CMake Application.check-llvm-transforms-mergeicmps" />
      <item itemvalue="CMake Application.check-llvm-transforms-mergeicmps-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-metarenamer" />
      <item itemvalue="CMake Application.check-llvm-transforms-nameanonfunctions" />
      <item itemvalue="CMake Application.check-llvm-transforms-nameanonglobals" />
      <item itemvalue="CMake Application.check-llvm-transforms-naryreassociate" />
      <item itemvalue="CMake Application.check-llvm-transforms-naryreassociate-nvptx" />
      <item itemvalue="CMake Application.check-llvm-transforms-newgvn" />
      <item itemvalue="CMake Application.check-llvm-transforms-objcarc" />
      <item itemvalue="CMake Application.check-llvm-transforms-partiallyinlinelibcalls" />
      <item itemvalue="CMake Application.check-llvm-transforms-partiallyinlinelibcalls-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-pgoprofile" />
      <item itemvalue="CMake Application.check-llvm-transforms-pgoprofile-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-phaseordering" />
      <item itemvalue="CMake Application.check-llvm-transforms-placesafepoints" />
      <item itemvalue="CMake Application.check-llvm-transforms-preiselintrinsiclowering" />
      <item itemvalue="CMake Application.check-llvm-transforms-pruneeh" />
      <item itemvalue="CMake Application.check-llvm-transforms-reassociate" />
      <item itemvalue="CMake Application.check-llvm-transforms-reg2mem" />
      <item itemvalue="CMake Application.check-llvm-transforms-rewritestatepointsforgc" />
      <item itemvalue="CMake Application.check-llvm-transforms-rewritestatepointsforgc-deopt-bundles" />
      <item itemvalue="CMake Application.check-llvm-transforms-safestack" />
      <item itemvalue="CMake Application.check-llvm-transforms-safestack-aarch64" />
      <item itemvalue="CMake Application.check-llvm-transforms-safestack-arm" />
      <item itemvalue="CMake Application.check-llvm-transforms-safestack-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-sampleprofile" />
      <item itemvalue="CMake Application.check-llvm-transforms-scalarizer" />
      <item itemvalue="CMake Application.check-llvm-transforms-scalarrepl" />
      <item itemvalue="CMake Application.check-llvm-transforms-sccp" />
      <item itemvalue="CMake Application.check-llvm-transforms-separateconstoffsetfromgep" />
      <item itemvalue="CMake Application.check-llvm-transforms-separateconstoffsetfromgep-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-separateconstoffsetfromgep-nvptx" />
      <item itemvalue="CMake Application.check-llvm-transforms-simpleloopunswitch" />
      <item itemvalue="CMake Application.check-llvm-transforms-simplifycfg" />
      <item itemvalue="CMake Application.check-llvm-transforms-simplifycfg-aarch64" />
      <item itemvalue="CMake Application.check-llvm-transforms-simplifycfg-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-simplifycfg-arm" />
      <item itemvalue="CMake Application.check-llvm-transforms-simplifycfg-hexagon" />
      <item itemvalue="CMake Application.check-llvm-transforms-simplifycfg-mips" />
      <item itemvalue="CMake Application.check-llvm-transforms-simplifycfg-powerpc" />
      <item itemvalue="CMake Application.check-llvm-transforms-simplifycfg-sparc" />
      <item itemvalue="CMake Application.check-llvm-transforms-simplifycfg-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-sink" />
      <item itemvalue="CMake Application.check-llvm-transforms-slpvectorizer" />
      <item itemvalue="CMake Application.check-llvm-transforms-slpvectorizer-aarch64" />
      <item itemvalue="CMake Application.check-llvm-transforms-slpvectorizer-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-slpvectorizer-arm" />
      <item itemvalue="CMake Application.check-llvm-transforms-slpvectorizer-powerpc" />
      <item itemvalue="CMake Application.check-llvm-transforms-slpvectorizer-systemz" />
      <item itemvalue="CMake Application.check-llvm-transforms-slpvectorizer-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-slpvectorizer-xcore" />
      <item itemvalue="CMake Application.check-llvm-transforms-speculatearoundphis" />
      <item itemvalue="CMake Application.check-llvm-transforms-speculativeexecution" />
      <item itemvalue="CMake Application.check-llvm-transforms-sroa" />
      <item itemvalue="CMake Application.check-llvm-transforms-straightlinestrengthreduce" />
      <item itemvalue="CMake Application.check-llvm-transforms-straightlinestrengthreduce-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-straightlinestrengthreduce-nvptx" />
      <item itemvalue="CMake Application.check-llvm-transforms-straightlinestrengthreduce-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-stripdeadprototypes" />
      <item itemvalue="CMake Application.check-llvm-transforms-stripsymbols" />
      <item itemvalue="CMake Application.check-llvm-transforms-structurizecfg" />
      <item itemvalue="CMake Application.check-llvm-transforms-structurizecfg-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-tailcallelim" />
      <item itemvalue="CMake Application.check-llvm-transforms-taildup" />
      <item itemvalue="CMake Application.check-llvm-transforms-taildup-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-thinltobitcodewriter" />
      <item itemvalue="CMake Application.check-llvm-transforms-util" />
      <item itemvalue="CMake Application.check-llvm-transforms-util-memoryssa" />
      <item itemvalue="CMake Application.check-llvm-transforms-util-predicateinfo" />
      <item itemvalue="CMake Application.check-llvm-transforms-wholeprogramdevirt" />
      <item itemvalue="CMake Application.check-llvm-unit" />
      <item itemvalue="CMake Application.check-llvm-verifier" />
      <item itemvalue="CMake Application.check-llvm-yamlparser" />
      <item itemvalue="CMake Application.check-lsan" />
      <item itemvalue="CMake Application.check-msan" />
      <item itemvalue="CMake Application.check-profile" />
      <item itemvalue="CMake Application.check-safestack" />
      <item itemvalue="CMake Application.check-sanitizer" />
      <item itemvalue="CMake Application.check-scudo" />
      <item itemvalue="CMake Application.check-tsan" />
      <item itemvalue="CMake Application.check-ubsan" />
      <item itemvalue="CMake Application.check-ubsan-minimal" />
      <item itemvalue="CMake Application.check-xray" />
      <item itemvalue="CMake Application.clang" />
      <item itemvalue="CMake Application.clang-check" />
      <item itemvalue="CMake Application.clang-diff" />
      <item itemvalue="CMake Application.clang-format" />
      <item itemvalue="CMake Application.clang-func-mapping" />
      <item itemvalue="CMake Application.clang-fuzzer" />
      <item itemvalue="CMake Application.clang-headers" />
      <item itemvalue="CMake Application.clang-import-test" />
      <item itemvalue="CMake Application.clang-interpreter" />
      <item itemvalue="CMake Application.clang-offload-bundler" />
      <item itemvalue="CMake Application.clang-refactor" />
      <item itemvalue="CMake Application.clang-rename" />
      <item itemvalue="CMake Application.clang-tablegen-targets" />
      <item itemvalue="CMake Application.clang-tblgen" />
      <item itemvalue="CMake Application.clang-test" />
      <item itemvalue="CMake Application.clang-test-depends" />
      <item itemvalue="CMake Application.clangARCMigrate" />
      <item itemvalue="CMake Application.clangAST" />
      <item itemvalue="CMake Application.clangASTMatchers" />
      <item itemvalue="CMake Application.clangAnalysis" />
      <item itemvalue="CMake Application.clangBasic" />
      <item itemvalue="CMake Application.clangCodeGen" />
      <item itemvalue="CMake Application.clangCrossTU" />
      <item itemvalue="CMake Application.clangDriver" />
      <item itemvalue="CMake Application.clangDynamicASTMatchers" />
      <item itemvalue="CMake Application.clangEdit" />
      <item itemvalue="CMake Application.clangFormat" />
      <item itemvalue="CMake Application.clangFrontend" />
      <item itemvalue="CMake Application.clangFrontendTool" />
      <item itemvalue="CMake Application.clangHandleCXX" />
      <item itemvalue="CMake Application.clangIndex" />
      <item itemvalue="CMake Application.clangLex" />
      <item itemvalue="CMake Application.clangParse" />
      <item itemvalue="CMake Application.clangRewrite" />
      <item itemvalue="CMake Application.clangRewriteFrontend" />
      <item itemvalue="CMake Application.clangSema" />
      <item itemvalue="CMake Application.clangSerialization" />
      <item itemvalue="CMake Application.clangStaticAnalyzerCheckers" />
      <item itemvalue="CMake Application.clangStaticAnalyzerCore" />
      <item itemvalue="CMake Application.clangStaticAnalyzerFrontend" />
      <item itemvalue="CMake Application.clangTooling" />
      <item itemvalue="CMake Application.clangToolingASTDiff" />
      <item itemvalue="CMake Application.clangToolingCore" />
      <item itemvalue="CMake Application.clangToolingRefactor" />
      <item itemvalue="CMake Application.clang_rt.asan-dynamic-i386" />
      <item itemvalue="CMake Application.clang_rt.asan-dynamic-i386-version-list" />
      <item itemvalue="CMake Application.clang_rt.asan-dynamic-x86_64" />
      <item itemvalue="CMake Application.clang_rt.asan-dynamic-x86_64-version-list" />
      <item itemvalue="CMake Application.clang_rt.asan-i386" />
      <item itemvalue="CMake Application.clang_rt.asan-preinit-i386" />
      <item itemvalue="CMake Application.clang_rt.asan-preinit-x86_64" />
      <item itemvalue="CMake Application.clang_rt.asan-x86_64" />
      <item itemvalue="CMake Application.clang_rt.asan-x86_64-symbols" />
      <item itemvalue="CMake Application.clang_rt.asan_cxx-i386" />
      <item itemvalue="CMake Application.clang_rt.asan_cxx-x86_64" />
      <item itemvalue="CMake Application.clang_rt.asan_cxx-x86_64-symbols" />
      <item itemvalue="CMake Application.clang_rt.builtins-i386" />
      <item itemvalue="CMake Application.clang_rt.builtins-x86_64" />
      <item itemvalue="CMake Application.clang_rt.cfi-i386" />
      <item itemvalue="CMake Application.clang_rt.cfi-x86_64" />
      <item itemvalue="CMake Application.clang_rt.cfi_diag-i386" />
      <item itemvalue="CMake Application.clang_rt.cfi_diag-x86_64" />
      <item itemvalue="CMake Application.clang_rt.dd-x86_64" />
      <item itemvalue="CMake Application.clang_rt.dfsan-x86_64" />
      <item itemvalue="CMake Application.clang_rt.dfsan-x86_64-symbols" />
      <item itemvalue="CMake Application.clang_rt.dyndd-dynamic-x86_64" />
      <item itemvalue="CMake Application.clang_rt.esan-x86_64" />
      <item itemvalue="CMake Application.clang_rt.esan-x86_64-symbols" />
      <item itemvalue="CMake Application.clang_rt.fuzzer-x86_64" />
      <item itemvalue="CMake Application.clang_rt.fuzzer_no_main-x86_64" />
      <item itemvalue="CMake Application.clang_rt.lsan-i386" />
      <item itemvalue="CMake Application.clang_rt.lsan-x86_64" />
      <item itemvalue="CMake Application.clang_rt.msan-x86_64" />
      <item itemvalue="CMake Application.clang_rt.msan-x86_64-symbols" />
      <item itemvalue="CMake Application.clang_rt.msan_cxx-x86_64" />
      <item itemvalue="CMake Application.clang_rt.msan_cxx-x86_64-symbols" />
      <item itemvalue="CMake Application.clang_rt.profile-i386" />
      <item itemvalue="CMake Application.clang_rt.profile-x86_64" />
      <item itemvalue="CMake Application.clang_rt.safestack-i386" />
      <item itemvalue="CMake Application.clang_rt.safestack-x86_64" />
      <item itemvalue="CMake Application.clang_rt.scudo-dynamic-i386" />
      <item itemvalue="CMake Application.clang_rt.scudo-dynamic-x86_64" />
      <item itemvalue="CMake Application.clang_rt.scudo-i386" />
      <item itemvalue="CMake Application.clang_rt.scudo-x86_64" />
      <item itemvalue="CMake Application.clang_rt.scudo_cxx-i386" />
      <item itemvalue="CMake Application.clang_rt.scudo_cxx-x86_64" />
      <item itemvalue="CMake Application.clang_rt.stats-i386" />
      <item itemvalue="CMake Application.clang_rt.stats-x86_64" />
      <item itemvalue="CMake Application.clang_rt.stats_client-i386" />
      <item itemvalue="CMake Application.clang_rt.stats_client-x86_64" />
      <item itemvalue="CMake Application.clang_rt.tsan-x86_64" />
      <item itemvalue="CMake Application.clang_rt.tsan-x86_64-symbols" />
      <item itemvalue="CMake Application.clang_rt.tsan_cxx-x86_64" />
      <item itemvalue="CMake Application.clang_rt.tsan_cxx-x86_64-symbols" />
      <item itemvalue="CMake Application.clang_rt.ubsan_minimal-dynamic-i386" />
      <item itemvalue="CMake Application.clang_rt.ubsan_minimal-dynamic-x86_64" />
      <item itemvalue="CMake Application.clang_rt.ubsan_minimal-i386" />
      <item itemvalue="CMake Application.clang_rt.ubsan_minimal-x86_64" />
      <item itemvalue="CMake Application.clang_rt.ubsan_minimal-x86_64-symbols" />
      <item itemvalue="CMake Application.clang_rt.ubsan_standalone-dynamic-i386" />
      <item itemvalue="CMake Application.clang_rt.ubsan_standalone-dynamic-x86_64" />
      <item itemvalue="CMake Application.clang_rt.ubsan_standalone-i386" />
      <item itemvalue="CMake Application.clang_rt.ubsan_standalone-x86_64" />
      <item itemvalue="CMake Application.clang_rt.ubsan_standalone-x86_64-symbols" />
      <item itemvalue="CMake Application.clang_rt.ubsan_standalone_cxx-i386" />
      <item itemvalue="CMake Application.clang_rt.ubsan_standalone_cxx-x86_64" />
      <item itemvalue="CMake Application.clang_rt.ubsan_standalone_cxx-x86_64-symbols" />
      <item itemvalue="CMake Application.clang_rt.xray-x86_64" />
      <item itemvalue="CMake Application.cmake-exports" />
      <item itemvalue="CMake Application.compiler-rt" />
      <item itemvalue="CMake Application.compiler-rt-headers" />
      <item itemvalue="CMake Application.count" />
      <item itemvalue="CMake Application.dd" />
      <item itemvalue="CMake Application.dfsan" />
      <item itemvalue="CMake Application.dfsan_abilist" />
      <item itemvalue="CMake Application.diagtool" />
      <item itemvalue="CMake Application.esan" />
      <item itemvalue="CMake Application.fuzzer" />
      <item itemvalue="CMake Application.gtest" />
      <item itemvalue="CMake Application.gtest_main" />
      <item itemvalue="CMake Application.install-LLVMAArch64AsmParser" />
      <item itemvalue="CMake Application.install-LLVMAArch64AsmParser-stripped" />
      <item itemvalue="CMake Application.install-LLVMAArch64AsmPrinter" />
      <item itemvalue="CMake Application.install-LLVMAArch64AsmPrinter-stripped" />
      <item itemvalue="CMake Application.install-LLVMAArch64CodeGen" />
      <item itemvalue="CMake Application.install-LLVMAArch64CodeGen-stripped" />
      <item itemvalue="CMake Application.install-LLVMAArch64Desc" />
      <item itemvalue="CMake Application.install-LLVMAArch64Desc-stripped" />
      <item itemvalue="CMake Application.install-LLVMAArch64Disassembler" />
      <item itemvalue="CMake Application.install-LLVMAArch64Disassembler-stripped" />
      <item itemvalue="CMake Application.install-LLVMAArch64Info" />
      <item itemvalue="CMake Application.install-LLVMAArch64Info-stripped" />
      <item itemvalue="CMake Application.install-LLVMAArch64Utils" />
      <item itemvalue="CMake Application.install-LLVMAArch64Utils-stripped" />
      <item itemvalue="CMake Application.install-LLVMAMDGPUAsmParser" />
      <item itemvalue="CMake Application.install-LLVMAMDGPUAsmParser-stripped" />
      <item itemvalue="CMake Application.install-LLVMAMDGPUAsmPrinter" />
      <item itemvalue="CMake Application.install-LLVMAMDGPUAsmPrinter-stripped" />
      <item itemvalue="CMake Application.install-LLVMAMDGPUCodeGen" />
      <item itemvalue="CMake Application.install-LLVMAMDGPUCodeGen-stripped" />
      <item itemvalue="CMake Application.install-LLVMAMDGPUDesc" />
      <item itemvalue="CMake Application.install-LLVMAMDGPUDesc-stripped" />
      <item itemvalue="CMake Application.install-LLVMAMDGPUDisassembler" />
      <item itemvalue="CMake Application.install-LLVMAMDGPUDisassembler-stripped" />
      <item itemvalue="CMake Application.install-LLVMAMDGPUInfo" />
      <item itemvalue="CMake Application.install-LLVMAMDGPUInfo-stripped" />
      <item itemvalue="CMake Application.install-LLVMAMDGPUUtils" />
      <item itemvalue="CMake Application.install-LLVMAMDGPUUtils-stripped" />
      <item itemvalue="CMake Application.install-LLVMARMAsmParser" />
      <item itemvalue="CMake Application.install-LLVMARMAsmParser-stripped" />
      <item itemvalue="CMake Application.install-LLVMARMAsmPrinter" />
      <item itemvalue="CMake Application.install-LLVMARMAsmPrinter-stripped" />
      <item itemvalue="CMake Application.install-LLVMARMCodeGen" />
      <item itemvalue="CMake Application.install-LLVMARMCodeGen-stripped" />
      <item itemvalue="CMake Application.install-LLVMARMDesc" />
      <item itemvalue="CMake Application.install-LLVMARMDesc-stripped" />
      <item itemvalue="CMake Application.install-LLVMARMDisassembler" />
      <item itemvalue="CMake Application.install-LLVMARMDisassembler-stripped" />
      <item itemvalue="CMake Application.install-LLVMARMInfo" />
      <item itemvalue="CMake Application.install-LLVMARMInfo-stripped" />
      <item itemvalue="CMake Application.install-LLVMARMUtils" />
      <item itemvalue="CMake Application.install-LLVMARMUtils-stripped" />
      <item itemvalue="CMake Application.install-LLVMAnalysis" />
      <item itemvalue="CMake Application.install-LLVMAnalysis-stripped" />
      <item itemvalue="CMake Application.install-LLVMAsmParser" />
      <item itemvalue="CMake Application.install-LLVMAsmParser-stripped" />
      <item itemvalue="CMake Application.install-LLVMAsmPrinter" />
      <item itemvalue="CMake Application.install-LLVMAsmPrinter-stripped" />
      <item itemvalue="CMake Application.install-LLVMBPFAsmParser" />
      <item itemvalue="CMake Application.install-LLVMBPFAsmParser-stripped" />
      <item itemvalue="CMake Application.install-LLVMBPFAsmPrinter" />
      <item itemvalue="CMake Application.install-LLVMBPFAsmPrinter-stripped" />
      <item itemvalue="CMake Application.install-LLVMBPFCodeGen" />
      <item itemvalue="CMake Application.install-LLVMBPFCodeGen-stripped" />
      <item itemvalue="CMake Application.install-LLVMBPFDesc" />
      <item itemvalue="CMake Application.install-LLVMBPFDesc-stripped" />
      <item itemvalue="CMake Application.install-LLVMBPFDisassembler" />
      <item itemvalue="CMake Application.install-LLVMBPFDisassembler-stripped" />
      <item itemvalue="CMake Application.install-LLVMBPFInfo" />
      <item itemvalue="CMake Application.install-LLVMBPFInfo-stripped" />
      <item itemvalue="CMake Application.install-LLVMBinaryFormat" />
      <item itemvalue="CMake Application.install-LLVMBinaryFormat-stripped" />
      <item itemvalue="CMake Application.install-LLVMBitReader" />
      <item itemvalue="CMake Application.install-LLVMBitReader-stripped" />
      <item itemvalue="CMake Application.install-LLVMBitWriter" />
      <item itemvalue="CMake Application.install-LLVMBitWriter-stripped" />
      <item itemvalue="CMake Application.install-LLVMCodeGen" />
      <item itemvalue="CMake Application.install-LLVMCodeGen-stripped" />
      <item itemvalue="CMake Application.install-LLVMCore" />
      <item itemvalue="CMake Application.install-LLVMCore-stripped" />
      <item itemvalue="CMake Application.install-LLVMCoroutines" />
      <item itemvalue="CMake Application.install-LLVMCoroutines-stripped" />
      <item itemvalue="CMake Application.install-LLVMCoverage" />
      <item itemvalue="CMake Application.install-LLVMCoverage-stripped" />
      <item itemvalue="CMake Application.install-LLVMDebugInfoCodeView" />
      <item itemvalue="CMake Application.install-LLVMDebugInfoCodeView-stripped" />
      <item itemvalue="CMake Application.install-LLVMDebugInfoDWARF" />
      <item itemvalue="CMake Application.install-LLVMDebugInfoDWARF-stripped" />
      <item itemvalue="CMake Application.install-LLVMDebugInfoMSF" />
      <item itemvalue="CMake Application.install-LLVMDebugInfoMSF-stripped" />
      <item itemvalue="CMake Application.install-LLVMDebugInfoPDB" />
      <item itemvalue="CMake Application.install-LLVMDebugInfoPDB-stripped" />
      <item itemvalue="CMake Application.install-LLVMDemangle" />
      <item itemvalue="CMake Application.install-LLVMDemangle-stripped" />
      <item itemvalue="CMake Application.install-LLVMDlltoolDriver" />
      <item itemvalue="CMake Application.install-LLVMDlltoolDriver-stripped" />
      <item itemvalue="CMake Application.install-LLVMExecutionEngine" />
      <item itemvalue="CMake Application.install-LLVMExecutionEngine-stripped" />
      <item itemvalue="CMake Application.install-LLVMFuzzMutate" />
      <item itemvalue="CMake Application.install-LLVMFuzzMutate-stripped" />
      <item itemvalue="CMake Application.install-LLVMGlobalISel" />
      <item itemvalue="CMake Application.install-LLVMGlobalISel-stripped" />
      <item itemvalue="CMake Application.install-LLVMHexagonAsmParser" />
      <item itemvalue="CMake Application.install-LLVMHexagonAsmParser-stripped" />
      <item itemvalue="CMake Application.install-LLVMHexagonCodeGen" />
      <item itemvalue="CMake Application.install-LLVMHexagonCodeGen-stripped" />
      <item itemvalue="CMake Application.install-LLVMHexagonDesc" />
      <item itemvalue="CMake Application.install-LLVMHexagonDesc-stripped" />
      <item itemvalue="CMake Application.install-LLVMHexagonDisassembler" />
      <item itemvalue="CMake Application.install-LLVMHexagonDisassembler-stripped" />
      <item itemvalue="CMake Application.install-LLVMHexagonInfo" />
      <item itemvalue="CMake Application.install-LLVMHexagonInfo-stripped" />
      <item itemvalue="CMake Application.install-LLVMIRReader" />
      <item itemvalue="CMake Application.install-LLVMIRReader-stripped" />
      <item itemvalue="CMake Application.install-LLVMInstCombine" />
      <item itemvalue="CMake Application.install-LLVMInstCombine-stripped" />
      <item itemvalue="CMake Application.install-LLVMInstrumentation" />
      <item itemvalue="CMake Application.install-LLVMInstrumentation-stripped" />
      <item itemvalue="CMake Application.install-LLVMInterpreter" />
      <item itemvalue="CMake Application.install-LLVMInterpreter-stripped" />
      <item itemvalue="CMake Application.install-LLVMLTO" />
      <item itemvalue="CMake Application.install-LLVMLTO-stripped" />
      <item itemvalue="CMake Application.install-LLVMLanaiAsmParser" />
      <item itemvalue="CMake Application.install-LLVMLanaiAsmParser-stripped" />
      <item itemvalue="CMake Application.install-LLVMLanaiAsmPrinter" />
      <item itemvalue="CMake Application.install-LLVMLanaiAsmPrinter-stripped" />
      <item itemvalue="CMake Application.install-LLVMLanaiCodeGen" />
      <item itemvalue="CMake Application.install-LLVMLanaiCodeGen-stripped" />
      <item itemvalue="CMake Application.install-LLVMLanaiDesc" />
      <item itemvalue="CMake Application.install-LLVMLanaiDesc-stripped" />
      <item itemvalue="CMake Application.install-LLVMLanaiDisassembler" />
      <item itemvalue="CMake Application.install-LLVMLanaiDisassembler-stripped" />
      <item itemvalue="CMake Application.install-LLVMLanaiInfo" />
      <item itemvalue="CMake Application.install-LLVMLanaiInfo-stripped" />
      <item itemvalue="CMake Application.install-LLVMLibDriver" />
      <item itemvalue="CMake Application.install-LLVMLibDriver-stripped" />
      <item itemvalue="CMake Application.install-LLVMLineEditor" />
      <item itemvalue="CMake Application.install-LLVMLineEditor-stripped" />
      <item itemvalue="CMake Application.install-LLVMLinker" />
      <item itemvalue="CMake Application.install-LLVMLinker-stripped" />
      <item itemvalue="CMake Application.install-LLVMMC" />
      <item itemvalue="CMake Application.install-LLVMMC-stripped" />
      <item itemvalue="CMake Application.install-LLVMMCDisassembler" />
      <item itemvalue="CMake Application.install-LLVMMCDisassembler-stripped" />
      <item itemvalue="CMake Application.install-LLVMMCJIT" />
      <item itemvalue="CMake Application.install-LLVMMCJIT-stripped" />
      <item itemvalue="CMake Application.install-LLVMMCParser" />
      <item itemvalue="CMake Application.install-LLVMMCParser-stripped" />
      <item itemvalue="CMake Application.install-LLVMMIRParser" />
      <item itemvalue="CMake Application.install-LLVMMIRParser-stripped" />
      <item itemvalue="CMake Application.install-LLVMMSP430AsmPrinter" />
      <item itemvalue="CMake Application.install-LLVMMSP430AsmPrinter-stripped" />
      <item itemvalue="CMake Application.install-LLVMMSP430CodeGen" />
      <item itemvalue="CMake Application.install-LLVMMSP430CodeGen-stripped" />
      <item itemvalue="CMake Application.install-LLVMMSP430Desc" />
      <item itemvalue="CMake Application.install-LLVMMSP430Desc-stripped" />
      <item itemvalue="CMake Application.install-LLVMMSP430Info" />
      <item itemvalue="CMake Application.install-LLVMMSP430Info-stripped" />
      <item itemvalue="CMake Application.install-LLVMMipsAsmParser" />
      <item itemvalue="CMake Application.install-LLVMMipsAsmParser-stripped" />
      <item itemvalue="CMake Application.install-LLVMMipsAsmPrinter" />
      <item itemvalue="CMake Application.install-LLVMMipsAsmPrinter-stripped" />
      <item itemvalue="CMake Application.install-LLVMMipsCodeGen" />
      <item itemvalue="CMake Application.install-LLVMMipsCodeGen-stripped" />
      <item itemvalue="CMake Application.install-LLVMMipsDesc" />
      <item itemvalue="CMake Application.install-LLVMMipsDesc-stripped" />
      <item itemvalue="CMake Application.install-LLVMMipsDisassembler" />
      <item itemvalue="CMake Application.install-LLVMMipsDisassembler-stripped" />
      <item itemvalue="CMake Application.install-LLVMMipsInfo" />
      <item itemvalue="CMake Application.install-LLVMMipsInfo-stripped" />
      <item itemvalue="CMake Application.install-LLVMNVPTXAsmPrinter" />
      <item itemvalue="CMake Application.install-LLVMNVPTXAsmPrinter-stripped" />
      <item itemvalue="CMake Application.install-LLVMNVPTXCodeGen" />
      <item itemvalue="CMake Application.install-LLVMNVPTXCodeGen-stripped" />
      <item itemvalue="CMake Application.install-LLVMNVPTXDesc" />
      <item itemvalue="CMake Application.install-LLVMNVPTXDesc-stripped" />
      <item itemvalue="CMake Application.install-LLVMNVPTXInfo" />
      <item itemvalue="CMake Application.install-LLVMNVPTXInfo-stripped" />
      <item itemvalue="CMake Application.install-LLVMObjCARCOpts" />
      <item itemvalue="CMake Application.install-LLVMObjCARCOpts-stripped" />
      <item itemvalue="CMake Application.install-LLVMObject" />
      <item itemvalue="CMake Application.install-LLVMObject-stripped" />
      <item itemvalue="CMake Application.install-LLVMObjectYAML" />
      <item itemvalue="CMake Application.install-LLVMObjectYAML-stripped" />
      <item itemvalue="CMake Application.install-LLVMOption" />
      <item itemvalue="CMake Application.install-LLVMOption-stripped" />
      <item itemvalue="CMake Application.install-LLVMOrcJIT" />
      <item itemvalue="CMake Application.install-LLVMOrcJIT-stripped" />
      <item itemvalue="CMake Application.install-LLVMPasses" />
      <item itemvalue="CMake Application.install-LLVMPasses-stripped" />
      <item itemvalue="CMake Application.install-LLVMPowerPCAsmParser" />
      <item itemvalue="CMake Application.install-LLVMPowerPCAsmParser-stripped" />
      <item itemvalue="CMake Application.install-LLVMPowerPCAsmPrinter" />
      <item itemvalue="CMake Application.install-LLVMPowerPCAsmPrinter-stripped" />
      <item itemvalue="CMake Application.install-LLVMPowerPCCodeGen" />
      <item itemvalue="CMake Application.install-LLVMPowerPCCodeGen-stripped" />
      <item itemvalue="CMake Application.install-LLVMPowerPCDesc" />
      <item itemvalue="CMake Application.install-LLVMPowerPCDesc-stripped" />
      <item itemvalue="CMake Application.install-LLVMPowerPCDisassembler" />
      <item itemvalue="CMake Application.install-LLVMPowerPCDisassembler-stripped" />
      <item itemvalue="CMake Application.install-LLVMPowerPCInfo" />
      <item itemvalue="CMake Application.install-LLVMPowerPCInfo-stripped" />
      <item itemvalue="CMake Application.install-LLVMProfileData" />
      <item itemvalue="CMake Application.install-LLVMProfileData-stripped" />
      <item itemvalue="CMake Application.install-LLVMRuntimeDyld" />
      <item itemvalue="CMake Application.install-LLVMRuntimeDyld-stripped" />
      <item itemvalue="CMake Application.install-LLVMScalarOpts" />
      <item itemvalue="CMake Application.install-LLVMScalarOpts-stripped" />
      <item itemvalue="CMake Application.install-LLVMSelectionDAG" />
      <item itemvalue="CMake Application.install-LLVMSelectionDAG-stripped" />
      <item itemvalue="CMake Application.install-LLVMSparcAsmParser" />
      <item itemvalue="CMake Application.install-LLVMSparcAsmParser-stripped" />
      <item itemvalue="CMake Application.install-LLVMSparcAsmPrinter" />
      <item itemvalue="CMake Application.install-LLVMSparcAsmPrinter-stripped" />
      <item itemvalue="CMake Application.install-LLVMSparcCodeGen" />
      <item itemvalue="CMake Application.install-LLVMSparcCodeGen-stripped" />
      <item itemvalue="CMake Application.install-LLVMSparcDesc" />
      <item itemvalue="CMake Application.install-LLVMSparcDesc-stripped" />
      <item itemvalue="CMake Application.install-LLVMSparcDisassembler" />
      <item itemvalue="CMake Application.install-LLVMSparcDisassembler-stripped" />
      <item itemvalue="CMake Application.install-LLVMSparcInfo" />
      <item itemvalue="CMake Application.install-LLVMSparcInfo-stripped" />
      <item itemvalue="CMake Application.install-LLVMSupport" />
      <item itemvalue="CMake Application.install-LLVMSupport-stripped" />
      <item itemvalue="CMake Application.install-LLVMSymbolize" />
      <item itemvalue="CMake Application.install-LLVMSymbolize-stripped" />
      <item itemvalue="CMake Application.install-LLVMSystemZAsmParser" />
      <item itemvalue="CMake Application.install-LLVMSystemZAsmParser-stripped" />
      <item itemvalue="CMake Application.install-LLVMSystemZAsmPrinter" />
      <item itemvalue="CMake Application.install-LLVMSystemZAsmPrinter-stripped" />
      <item itemvalue="CMake Application.install-LLVMSystemZCodeGen" />
      <item itemvalue="CMake Application.install-LLVMSystemZCodeGen-stripped" />
      <item itemvalue="CMake Application.install-LLVMSystemZDesc" />
      <item itemvalue="CMake Application.install-LLVMSystemZDesc-stripped" />
      <item itemvalue="CMake Application.install-LLVMSystemZDisassembler" />
      <item itemvalue="CMake Application.install-LLVMSystemZDisassembler-stripped" />
      <item itemvalue="CMake Application.install-LLVMSystemZInfo" />
      <item itemvalue="CMake Application.install-LLVMSystemZInfo-stripped" />
      <item itemvalue="CMake Application.install-LLVMTableGen" />
      <item itemvalue="CMake Application.install-LLVMTableGen-stripped" />
      <item itemvalue="CMake Application.install-LLVMTarget" />
      <item itemvalue="CMake Application.install-LLVMTarget-stripped" />
      <item itemvalue="CMake Application.install-LLVMTransformUtils" />
      <item itemvalue="CMake Application.install-LLVMTransformUtils-stripped" />
      <item itemvalue="CMake Application.install-LLVMVectorize" />
      <item itemvalue="CMake Application.install-LLVMVectorize-stripped" />
      <item itemvalue="CMake Application.install-LLVMWindowsManifest" />
      <item itemvalue="CMake Application.install-LLVMWindowsManifest-stripped" />
      <item itemvalue="CMake Application.install-LLVMX86AsmParser" />
      <item itemvalue="CMake Application.install-LLVMX86AsmParser-stripped" />
      <item itemvalue="CMake Application.install-LLVMX86AsmPrinter" />
      <item itemvalue="CMake Application.install-LLVMX86AsmPrinter-stripped" />
      <item itemvalue="CMake Application.install-LLVMX86CodeGen" />
      <item itemvalue="CMake Application.install-LLVMX86CodeGen-stripped" />
      <item itemvalue="CMake Application.install-LLVMX86Desc" />
      <item itemvalue="CMake Application.install-LLVMX86Desc-stripped" />
      <item itemvalue="CMake Application.install-LLVMX86Disassembler" />
      <item itemvalue="CMake Application.install-LLVMX86Disassembler-stripped" />
      <item itemvalue="CMake Application.install-LLVMX86Info" />
      <item itemvalue="CMake Application.install-LLVMX86Info-stripped" />
      <item itemvalue="CMake Application.install-LLVMX86Utils" />
      <item itemvalue="CMake Application.install-LLVMX86Utils-stripped" />
      <item itemvalue="CMake Application.install-LLVMXCoreAsmPrinter" />
      <item itemvalue="CMake Application.install-LLVMXCoreAsmPrinter-stripped" />
      <item itemvalue="CMake Application.install-LLVMXCoreCodeGen" />
      <item itemvalue="CMake Application.install-LLVMXCoreCodeGen-stripped" />
      <item itemvalue="CMake Application.install-LLVMXCoreDesc" />
      <item itemvalue="CMake Application.install-LLVMXCoreDesc-stripped" />
      <item itemvalue="CMake Application.install-LLVMXCoreDisassembler" />
      <item itemvalue="CMake Application.install-LLVMXCoreDisassembler-stripped" />
      <item itemvalue="CMake Application.install-LLVMXCoreInfo" />
      <item itemvalue="CMake Application.install-LLVMXCoreInfo-stripped" />
      <item itemvalue="CMake Application.install-LLVMXRay" />
      <item itemvalue="CMake Application.install-LLVMXRay-stripped" />
      <item itemvalue="CMake Application.install-LLVMipo" />
      <item itemvalue="CMake Application.install-LLVMipo-stripped" />
      <item itemvalue="CMake Application.install-LTO" />
      <item itemvalue="CMake Application.install-LTO-stripped" />
      <item itemvalue="CMake Application.install-asan" />
      <item itemvalue="CMake Application.install-asan-stripped" />
      <item itemvalue="CMake Application.install-bugpoint" />
      <item itemvalue="CMake Application.install-bugpoint-stripped" />
      <item itemvalue="CMake Application.install-builtins" />
      <item itemvalue="CMake Application.install-builtins-stripped" />
      <item itemvalue="CMake Application.install-c-index-test" />
      <item itemvalue="CMake Application.install-c-index-test-stripped" />
      <item itemvalue="CMake Application.install-cfi" />
      <item itemvalue="CMake Application.install-cfi-stripped" />
      <item itemvalue="CMake Application.install-clang" />
      <item itemvalue="CMake Application.install-clang-format" />
      <item itemvalue="CMake Application.install-clang-format-stripped" />
      <item itemvalue="CMake Application.install-clang-headers" />
      <item itemvalue="CMake Application.install-clang-headers-stripped" />
      <item itemvalue="CMake Application.install-clang-import-test" />
      <item itemvalue="CMake Application.install-clang-import-test-stripped" />
      <item itemvalue="CMake Application.install-clang-refactor" />
      <item itemvalue="CMake Application.install-clang-refactor-stripped" />
      <item itemvalue="CMake Application.install-clang-rename" />
      <item itemvalue="CMake Application.install-clang-rename-stripped" />
      <item itemvalue="CMake Application.install-clang-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.asan-dynamic-i386" />
      <item itemvalue="CMake Application.install-clang_rt.asan-dynamic-i386-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.asan-dynamic-x86_64" />
      <item itemvalue="CMake Application.install-clang_rt.asan-dynamic-x86_64-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.asan-i386" />
      <item itemvalue="CMake Application.install-clang_rt.asan-i386-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.asan-preinit-i386" />
      <item itemvalue="CMake Application.install-clang_rt.asan-preinit-i386-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.asan-preinit-x86_64" />
      <item itemvalue="CMake Application.install-clang_rt.asan-preinit-x86_64-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.asan-x86_64" />
      <item itemvalue="CMake Application.install-clang_rt.asan-x86_64-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.asan_cxx-i386" />
      <item itemvalue="CMake Application.install-clang_rt.asan_cxx-i386-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.asan_cxx-x86_64" />
      <item itemvalue="CMake Application.install-clang_rt.asan_cxx-x86_64-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.builtins-i386" />
      <item itemvalue="CMake Application.install-clang_rt.builtins-i386-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.builtins-x86_64" />
      <item itemvalue="CMake Application.install-clang_rt.builtins-x86_64-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.cfi-i386" />
      <item itemvalue="CMake Application.install-clang_rt.cfi-i386-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.cfi-x86_64" />
      <item itemvalue="CMake Application.install-clang_rt.cfi-x86_64-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.cfi_diag-i386" />
      <item itemvalue="CMake Application.install-clang_rt.cfi_diag-i386-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.cfi_diag-x86_64" />
      <item itemvalue="CMake Application.install-clang_rt.cfi_diag-x86_64-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.dd-x86_64" />
      <item itemvalue="CMake Application.install-clang_rt.dd-x86_64-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.dfsan-x86_64" />
      <item itemvalue="CMake Application.install-clang_rt.dfsan-x86_64-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.dyndd-dynamic-x86_64" />
      <item itemvalue="CMake Application.install-clang_rt.dyndd-dynamic-x86_64-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.esan-x86_64" />
      <item itemvalue="CMake Application.install-clang_rt.esan-x86_64-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.fuzzer-x86_64" />
      <item itemvalue="CMake Application.install-clang_rt.fuzzer-x86_64-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.fuzzer_no_main-x86_64" />
      <item itemvalue="CMake Application.install-clang_rt.fuzzer_no_main-x86_64-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.lsan-i386" />
      <item itemvalue="CMake Application.install-clang_rt.lsan-i386-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.lsan-x86_64" />
      <item itemvalue="CMake Application.install-clang_rt.lsan-x86_64-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.msan-x86_64" />
      <item itemvalue="CMake Application.install-clang_rt.msan-x86_64-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.msan_cxx-x86_64" />
      <item itemvalue="CMake Application.install-clang_rt.msan_cxx-x86_64-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.profile-i386" />
      <item itemvalue="CMake Application.install-clang_rt.profile-i386-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.profile-x86_64" />
      <item itemvalue="CMake Application.install-clang_rt.profile-x86_64-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.safestack-i386" />
      <item itemvalue="CMake Application.install-clang_rt.safestack-i386-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.safestack-x86_64" />
      <item itemvalue="CMake Application.install-clang_rt.safestack-x86_64-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.scudo-dynamic-i386" />
      <item itemvalue="CMake Application.install-clang_rt.scudo-dynamic-i386-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.scudo-dynamic-x86_64" />
      <item itemvalue="CMake Application.install-clang_rt.scudo-dynamic-x86_64-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.scudo-i386" />
      <item itemvalue="CMake Application.install-clang_rt.scudo-i386-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.scudo-x86_64" />
      <item itemvalue="CMake Application.install-clang_rt.scudo-x86_64-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.scudo_cxx-i386" />
      <item itemvalue="CMake Application.install-clang_rt.scudo_cxx-i386-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.scudo_cxx-x86_64" />
      <item itemvalue="CMake Application.install-clang_rt.scudo_cxx-x86_64-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.stats-i386" />
      <item itemvalue="CMake Application.install-clang_rt.stats-i386-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.stats-x86_64" />
      <item itemvalue="CMake Application.install-clang_rt.stats-x86_64-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.stats_client-i386" />
      <item itemvalue="CMake Application.install-clang_rt.stats_client-i386-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.stats_client-x86_64" />
      <item itemvalue="CMake Application.install-clang_rt.stats_client-x86_64-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.tsan-x86_64" />
      <item itemvalue="CMake Application.install-clang_rt.tsan-x86_64-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.tsan_cxx-x86_64" />
      <item itemvalue="CMake Application.install-clang_rt.tsan_cxx-x86_64-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.ubsan_minimal-dynamic-i386" />
      <item itemvalue="CMake Application.install-clang_rt.ubsan_minimal-dynamic-i386-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.ubsan_minimal-dynamic-x86_64" />
      <item itemvalue="CMake Application.install-clang_rt.ubsan_minimal-dynamic-x86_64-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.ubsan_minimal-i386" />
      <item itemvalue="CMake Application.install-clang_rt.ubsan_minimal-i386-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.ubsan_minimal-x86_64" />
      <item itemvalue="CMake Application.install-clang_rt.ubsan_minimal-x86_64-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.ubsan_standalone-dynamic-i386" />
      <item itemvalue="CMake Application.install-clang_rt.ubsan_standalone-dynamic-i386-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.ubsan_standalone-dynamic-x86_64" />
      <item itemvalue="CMake Application.install-clang_rt.ubsan_standalone-dynamic-x86_64-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.ubsan_standalone-i386" />
      <item itemvalue="CMake Application.install-clang_rt.ubsan_standalone-i386-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.ubsan_standalone-x86_64" />
      <item itemvalue="CMake Application.install-clang_rt.ubsan_standalone-x86_64-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.ubsan_standalone_cxx-i386" />
      <item itemvalue="CMake Application.install-clang_rt.ubsan_standalone_cxx-i386-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.ubsan_standalone_cxx-x86_64" />
      <item itemvalue="CMake Application.install-clang_rt.ubsan_standalone_cxx-x86_64-stripped" />
      <item itemvalue="CMake Application.install-clang_rt.xray-x86_64" />
      <item itemvalue="CMake Application.install-clang_rt.xray-x86_64-stripped" />
      <item itemvalue="CMake Application.install-cmake-exports" />
      <item itemvalue="CMake Application.install-cmake-exports-stripped" />
      <item itemvalue="CMake Application.install-compiler-rt" />
      <item itemvalue="CMake Application.install-compiler-rt-headers" />
      <item itemvalue="CMake Application.install-compiler-rt-headers-stripped" />
      <item itemvalue="CMake Application.install-compiler-rt-stripped" />
      <item itemvalue="CMake Application.install-dd" />
      <item itemvalue="CMake Application.install-dd-stripped" />
      <item itemvalue="CMake Application.install-dfsan" />
      <item itemvalue="CMake Application.install-dfsan-stripped" />
      <item itemvalue="CMake Application.install-fuzzer" />
      <item itemvalue="CMake Application.install-fuzzer-stripped" />
      <item itemvalue="CMake Application.install-libclang" />
      <item itemvalue="CMake Application.install-libclang-headers" />
      <item itemvalue="CMake Application.install-libclang-headers-stripped" />
      <item itemvalue="CMake Application.install-libclang-stripped" />
      <item itemvalue="CMake Application.install-llc" />
      <item itemvalue="CMake Application.install-llc-stripped" />
      <item itemvalue="CMake Application.install-lli" />
      <item itemvalue="CMake Application.install-lli-stripped" />
      <item itemvalue="CMake Application.install-llvm-ar" />
      <item itemvalue="CMake Application.install-llvm-ar-stripped" />
      <item itemvalue="CMake Application.install-llvm-as" />
      <item itemvalue="CMake Application.install-llvm-as-stripped" />
      <item itemvalue="CMake Application.install-llvm-bcanalyzer" />
      <item itemvalue="CMake Application.install-llvm-bcanalyzer-stripped" />
      <item itemvalue="CMake Application.install-llvm-c-test" />
      <item itemvalue="CMake Application.install-llvm-c-test-stripped" />
      <item itemvalue="CMake Application.install-llvm-cat" />
      <item itemvalue="CMake Application.install-llvm-cat-stripped" />
      <item itemvalue="CMake Application.install-llvm-cfi-verify" />
      <item itemvalue="CMake Application.install-llvm-cfi-verify-stripped" />
      <item itemvalue="CMake Application.install-llvm-config" />
      <item itemvalue="CMake Application.install-llvm-config-stripped" />
      <item itemvalue="CMake Application.install-llvm-cov" />
      <item itemvalue="CMake Application.install-llvm-cov-stripped" />
      <item itemvalue="CMake Application.install-llvm-cvtres" />
      <item itemvalue="CMake Application.install-llvm-cvtres-stripped" />
      <item itemvalue="CMake Application.install-llvm-cxxdump" />
      <item itemvalue="CMake Application.install-llvm-cxxdump-stripped" />
      <item itemvalue="CMake Application.install-llvm-cxxfilt" />
      <item itemvalue="CMake Application.install-llvm-cxxfilt-stripped" />
      <item itemvalue="CMake Application.install-llvm-diff" />
      <item itemvalue="CMake Application.install-llvm-diff-stripped" />
      <item itemvalue="CMake Application.install-llvm-dis" />
      <item itemvalue="CMake Application.install-llvm-dis-stripped" />
      <item itemvalue="CMake Application.install-llvm-dlltool" />
      <item itemvalue="CMake Application.install-llvm-dlltool-stripped" />
      <item itemvalue="CMake Application.install-llvm-dsymutil" />
      <item itemvalue="CMake Application.install-llvm-dsymutil-stripped" />
      <item itemvalue="CMake Application.install-llvm-dwarfdump" />
      <item itemvalue="CMake Application.install-llvm-dwarfdump-stripped" />
      <item itemvalue="CMake Application.install-llvm-dwp" />
      <item itemvalue="CMake Application.install-llvm-dwp-stripped" />
      <item itemvalue="CMake Application.install-llvm-extract" />
      <item itemvalue="CMake Application.install-llvm-extract-stripped" />
      <item itemvalue="CMake Application.install-llvm-headers" />
      <item itemvalue="CMake Application.install-llvm-headers-stripped" />
      <item itemvalue="CMake Application.install-llvm-lib" />
      <item itemvalue="CMake Application.install-llvm-lib-stripped" />
      <item itemvalue="CMake Application.install-llvm-link" />
      <item itemvalue="CMake Application.install-llvm-link-stripped" />
      <item itemvalue="CMake Application.install-llvm-lto" />
      <item itemvalue="CMake Application.install-llvm-lto-stripped" />
      <item itemvalue="CMake Application.install-llvm-lto2" />
      <item itemvalue="CMake Application.install-llvm-lto2-stripped" />
      <item itemvalue="CMake Application.install-llvm-mc" />
      <item itemvalue="CMake Application.install-llvm-mc-stripped" />
      <item itemvalue="CMake Application.install-llvm-mcmarkup" />
      <item itemvalue="CMake Application.install-llvm-mcmarkup-stripped" />
      <item itemvalue="CMake Application.install-llvm-modextract" />
      <item itemvalue="CMake Application.install-llvm-modextract-stripped" />
      <item itemvalue="CMake Application.install-llvm-mt" />
      <item itemvalue="CMake Application.install-llvm-mt-stripped" />
      <item itemvalue="CMake Application.install-llvm-nm" />
      <item itemvalue="CMake Application.install-llvm-nm-stripped" />
      <item itemvalue="CMake Application.install-llvm-objcopy" />
      <item itemvalue="CMake Application.install-llvm-objcopy-stripped" />
      <item itemvalue="CMake Application.install-llvm-objdump" />
      <item itemvalue="CMake Application.install-llvm-objdump-stripped" />
      <item itemvalue="CMake Application.install-llvm-opt-report" />
      <item itemvalue="CMake Application.install-llvm-opt-report-stripped" />
      <item itemvalue="CMake Application.install-llvm-pdbutil" />
      <item itemvalue="CMake Application.install-llvm-pdbutil-stripped" />
      <item itemvalue="CMake Application.install-llvm-profdata" />
      <item itemvalue="CMake Application.install-llvm-profdata-stripped" />
      <item itemvalue="CMake Application.install-llvm-ranlib" />
      <item itemvalue="CMake Application.install-llvm-ranlib-stripped" />
      <item itemvalue="CMake Application.install-llvm-rc" />
      <item itemvalue="CMake Application.install-llvm-rc-stripped" />
      <item itemvalue="CMake Application.install-llvm-readelf" />
      <item itemvalue="CMake Application.install-llvm-readelf-stripped" />
      <item itemvalue="CMake Application.install-llvm-readobj" />
      <item itemvalue="CMake Application.install-llvm-readobj-stripped" />
      <item itemvalue="CMake Application.install-llvm-rtdyld" />
      <item itemvalue="CMake Application.install-llvm-rtdyld-stripped" />
      <item itemvalue="CMake Application.install-llvm-size" />
      <item itemvalue="CMake Application.install-llvm-size-stripped" />
      <item itemvalue="CMake Application.install-llvm-split" />
      <item itemvalue="CMake Application.install-llvm-split-stripped" />
      <item itemvalue="CMake Application.install-llvm-stress" />
      <item itemvalue="CMake Application.install-llvm-stress-stripped" />
      <item itemvalue="CMake Application.install-llvm-strings" />
      <item itemvalue="CMake Application.install-llvm-strings-stripped" />
      <item itemvalue="CMake Application.install-llvm-symbolizer" />
      <item itemvalue="CMake Application.install-llvm-symbolizer-stripped" />
      <item itemvalue="CMake Application.install-llvm-xray" />
      <item itemvalue="CMake Application.install-llvm-xray-stripped" />
      <item itemvalue="CMake Application.install-lsan" />
      <item itemvalue="CMake Application.install-lsan-stripped" />
      <item itemvalue="CMake Application.install-msan" />
      <item itemvalue="CMake Application.install-msan-stripped" />
      <item itemvalue="CMake Application.install-obj2yaml" />
      <item itemvalue="CMake Application.install-obj2yaml-stripped" />
      <item itemvalue="CMake Application.install-opt" />
      <item itemvalue="CMake Application.install-opt-stripped" />
      <item itemvalue="CMake Application.install-profile" />
      <item itemvalue="CMake Application.install-profile-stripped" />
      <item itemvalue="CMake Application.install-safestack" />
      <item itemvalue="CMake Application.install-safestack-stripped" />
      <item itemvalue="CMake Application.install-sancov" />
      <item itemvalue="CMake Application.install-sancov-stripped" />
      <item itemvalue="CMake Application.install-sanstats" />
      <item itemvalue="CMake Application.install-sanstats-stripped" />
      <item itemvalue="CMake Application.install-scudo" />
      <item itemvalue="CMake Application.install-scudo-stripped" />
      <item itemvalue="CMake Application.install-stats" />
      <item itemvalue="CMake Application.install-stats-stripped" />
      <item itemvalue="CMake Application.install-ubsan" />
      <item itemvalue="CMake Application.install-ubsan-minimal" />
      <item itemvalue="CMake Application.install-ubsan-minimal-stripped" />
      <item itemvalue="CMake Application.install-ubsan-stripped" />
      <item itemvalue="CMake Application.install-verify-uselistorder" />
      <item itemvalue="CMake Application.install-verify-uselistorder-stripped" />
      <item itemvalue="CMake Application.install-xray" />
      <item itemvalue="CMake Application.install-xray-stripped" />
      <item itemvalue="CMake Application.install-yaml2obj" />
      <item itemvalue="CMake Application.install-yaml2obj-stripped" />
      <item itemvalue="CMake Application.intrinsics_gen" />
      <item itemvalue="CMake Application.libclang" />
      <item itemvalue="CMake Application.libclang-headers" />
      <item itemvalue="CMake Application.libclang_exports" />
      <item itemvalue="CMake Application.llc" />
      <item itemvalue="CMake Application.lli" />
      <item itemvalue="CMake Application.lli-child-target" />
      <item itemvalue="CMake Application.llvm-PerfectShuffle" />
      <item itemvalue="CMake Application.llvm-ar" />
      <item itemvalue="CMake Application.llvm-as" />
      <item itemvalue="CMake Application.llvm-bcanalyzer" />
      <item itemvalue="CMake Application.llvm-c-test" />
      <item itemvalue="CMake Application.llvm-cat" />
      <item itemvalue="CMake Application.llvm-cfi-verify" />
      <item itemvalue="CMake Application.llvm-config" />
      <item itemvalue="CMake Application.llvm-cov" />
      <item itemvalue="CMake Application.llvm-cvtres" />
      <item itemvalue="CMake Application.llvm-cxxdump" />
      <item itemvalue="CMake Application.llvm-cxxfilt" />
      <item itemvalue="CMake Application.llvm-demangle-fuzzer" />
      <item itemvalue="CMake Application.llvm-diff" />
      <item itemvalue="CMake Application.llvm-dis" />
      <item itemvalue="CMake Application.llvm-dlltool" />
      <item itemvalue="CMake Application.llvm-dsymutil" />
      <item itemvalue="CMake Application.llvm-dwarfdump" />
      <item itemvalue="CMake Application.llvm-dwp" />
      <item itemvalue="CMake Application.llvm-extract" />
      <item itemvalue="CMake Application.llvm-go" />
      <item itemvalue="CMake Application.llvm-headers" />
      <item itemvalue="CMake Application.llvm-isel-fuzzer" />
      <item itemvalue="CMake Application.llvm-lib" />
      <item itemvalue="CMake Application.llvm-link" />
      <item itemvalue="CMake Application.llvm-lto" />
      <item itemvalue="CMake Application.llvm-lto2" />
      <item itemvalue="CMake Application.llvm-mc" />
      <item itemvalue="CMake Application.llvm-mcmarkup" />
      <item itemvalue="CMake Application.llvm-modextract" />
      <item itemvalue="CMake Application.llvm-mt" />
      <item itemvalue="CMake Application.llvm-nm" />
      <item itemvalue="CMake Application.llvm-objcopy" />
      <item itemvalue="CMake Application.llvm-objdump" />
      <item itemvalue="CMake Application.llvm-opt-fuzzer" />
      <item itemvalue="CMake Application.llvm-opt-report" />
      <item itemvalue="CMake Application.llvm-pdbutil" />
      <item itemvalue="CMake Application.llvm-profdata" />
      <item itemvalue="CMake Application.llvm-ranlib" />
      <item itemvalue="CMake Application.llvm-rc" />
      <item itemvalue="CMake Application.llvm-readelf" />
      <item itemvalue="CMake Application.llvm-readobj" />
      <item itemvalue="CMake Application.llvm-rtdyld" />
      <item itemvalue="CMake Application.llvm-size" />
      <item itemvalue="CMake Application.llvm-special-case-list-fuzzer" />
      <item itemvalue="CMake Application.llvm-split" />
      <item itemvalue="CMake Application.llvm-stress" />
      <item itemvalue="CMake Application.llvm-strings" />
      <item itemvalue="CMake Application.llvm-symbolizer" />
      <item itemvalue="CMake Application.llvm-tblgen" />
      <item itemvalue="CMake Application.llvm-test-depends" />
      <item itemvalue="CMake Application.llvm-xray" />
      <item itemvalue="CMake Application.llvm_vcsrevision_h" />
      <item itemvalue="CMake Application.lsan" />
      <item itemvalue="CMake Application.msan" />
      <item itemvalue="CMake Application.msan_blacklist" />
      <item itemvalue="CMake Application.not" />
      <item itemvalue="CMake Application.obj2yaml" />
      <item itemvalue="CMake Application.ocaml_all" />
      <item itemvalue="CMake Application.ocaml_make_directory" />
      <item itemvalue="CMake Application.opt" />
      <item itemvalue="CMake Application.prepare-check-lit" />
      <item itemvalue="CMake Application.profile" />
      <item itemvalue="CMake Application.safestack" />
      <item itemvalue="CMake Application.sancov" />
      <item itemvalue="CMake Application.sanstats" />
      <item itemvalue="CMake Application.scan-build" />
      <item itemvalue="CMake Application.scan-view" />
      <item itemvalue="CMake Application.scudo" />
      <item itemvalue="CMake Application.srpm" />
      <item itemvalue="CMake Application.stats" />
      <item itemvalue="CMake Application.test-depends" />
      <item itemvalue="CMake Application.tsan" />
      <item itemvalue="CMake Application.ubsan" />
      <item itemvalue="CMake Application.ubsan-minimal" />
      <item itemvalue="CMake Application.verify-uselistorder" />
      <item itemvalue="CMake Application.xray" />
      <item itemvalue="CMake Application.yaml-bench" />
      <item itemvalue="CMake Application.yaml2obj" />
      <item itemvalue="Google Test.ClangAnalysisTests" />
      <item itemvalue="Google Test.ASTTests" />
      <item itemvalue="Google Test.ASTMatchersTests" />
      <item itemvalue="Google Test.DynamicASTMatchersTests" />
      <item itemvalue="Google Test.BasicTests" />
      <item itemvalue="Google Test.ClangCodeGenTests" />
      <item itemvalue="Google Test.CrossTUTests" />
      <item itemvalue="Google Test.ClangDriverTests" />
      <item itemvalue="Google Test.FormatTests" />
      <item itemvalue="Google Test.FrontendTests" />
      <item itemvalue="Google Test.LexTests" />
      <item itemvalue="Google Test.libclangTests" />
      <item itemvalue="Google Test.ClangRenameTests" />
      <item itemvalue="Google Test.RewriteTests" />
      <item itemvalue="Google Test.SemaTests" />
      <item itemvalue="Google Test.StaticAnalysisTests" />
      <item itemvalue="Google Test.ToolingTests" />
      <item itemvalue="Google Test.ADTTests" />
      <item itemvalue="Google Test.AnalysisTests" />
      <item itemvalue="Google Test.AsmParserTests" />
      <item itemvalue="Google Test.BinaryFormatTests" />
      <item itemvalue="Google Test.BitcodeTests" />
      <item itemvalue="Google Test.CodeGenTests" />
      <item itemvalue="Google Test.GlobalISelTests" />
      <item itemvalue="Google Test.DebugInfoCodeViewTests" />
      <item itemvalue="Google Test.DebugInfoDWARFTests" />
      <item itemvalue="Google Test.DebugInfoMSFTests" />
      <item itemvalue="Google Test.DebugInfoPDBTests" />
      <item itemvalue="Google Test.ExecutionEngineTests" />
      <item itemvalue="Google Test.MCJITTests" />
      <item itemvalue="Google Test.OrcJITTests" />
      <item itemvalue="Google Test.FuzzMutateTests" />
      <item itemvalue="Google Test.IRTests" />
      <item itemvalue="Google Test.LineEditorTests" />
      <item itemvalue="Google Test.LinkerTests" />
      <item itemvalue="Google Test.MCTests" />
      <item itemvalue="Google Test.MITests" />
      <item itemvalue="Google Test.ObjectTests" />
      <item itemvalue="Google Test.ObjectYAMLTests" />
      <item itemvalue="Google Test.OptionTests" />
      <item itemvalue="Google Test.ProfileDataTests" />
      <item itemvalue="Google Test.SupportTests" />
      <item itemvalue="Google Test.DynamicLibraryTests" />
      <item itemvalue="Google Test.AArch64Tests" />
      <item itemvalue="Google Test.CFIVerifyTests" />
      <item itemvalue="Google Test.IPOTests" />
      <item itemvalue="Google Test.ScalarTests" />
      <item itemvalue="Google Test.UtilsTests" />
      <item itemvalue="Google Test.XRayTests" />
    </list>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="SvnConfiguration" cleanupOnStartRun="true">
    <configuration>$USER_HOME$/.subversion</configuration>
    <supportedVersion>125</supportedVersion>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="0dfd0955-631a-49f2-996b-b3dbfdc2efba" name="Changes" comment="" />
      <created>1713775472915</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1713775472915</updated>
      <workItem from="1713775475653" duration="7500000" />
      <workItem from="1713789801998" duration="3327000" />
      <workItem from="1713797445053" duration="12173000" />
      <workItem from="1713876179331" duration="542000" />
      <workItem from="1713877066632" duration="546000" />
      <workItem from="1715856529348" duration="19878000" />
      <workItem from="1716451056509" duration="689000" />
      <workItem from="1716465964047" duration="96000" />
      <workItem from="1716466190056" duration="9000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VCPKGProject">
    <isAutomaticCheckingOnLaunch value="false" />
    <isAutomaticFoundErrors value="true" />
    <isAutomaticReloadCMake value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <ignored-roots>
      <path value="$PROJECT_DIR$/.." />
    </ignored-roots>
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>